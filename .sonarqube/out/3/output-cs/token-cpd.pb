 ß
pD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\BrowserHelper.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public 

static 
class 
BrowserHelper %
{ 
private 
const 
string 
IE 
=  !
$str" &
;& '
private 
const 
string 
Version6 %
=& '
$str( +
;+ ,
private 
const 
string 
Version7 %
=& '
$str( +
;+ ,
private 
const 
string 
Version8 %
=& '
$str( +
;+ ,
private 
const 
string 
Version9 %
=& '
$str( +
;+ ,
public 
static 
bool 
IsIE6  
(  !
)! "
{ 	
bool 
result 
= 
false 
;  
if   
(   
(   
HttpContext   
.   
Current   $
!=  % '
null  ( ,
)  , -
&&  . 0
(  1 2
HttpContext  2 =
.  = >
Current  > E
.  E F
Request  F M
!=  N P
null  Q U
)  U V
&&  W Y
(  Z [
HttpContext  [ f
.  f g
Current  g n
.  n o
Request  o v
.  v w
Browser  w ~
!=	   Å
null
  Ç Ü
)
  Ü á
)
  á à
{!! #
HttpBrowserCapabilities"" '
browser""( /
=""0 1
HttpContext""2 =
.""= >
Current""> E
.""E F
Request""F M
.""M N
Browser""N U
;""U V
if## 
(## 
(## 
browser## 
.## 
Browser## $
==##% '
IE##( *
)##* +
&&##, .
(##/ 0
browser##0 7
.##7 8
Version##8 ?
.##? @

StartsWith##@ J
(##J K
Version6##K S
)##S T
)##T U
)##U V
{$$ 
result%% 
=%% 
true%% !
;%%! "
}&& 
}(( 
return** 
result** 
;** 
},, 	
public.. 
static.. 
bool.. 
IsIE7..  
(..  !
)..! "
{// 	
bool00 
result00 
=00 
false00 
;00  
if22 
(22 
(22 
HttpContext22 
.22 
Current22 $
!=22% '
null22( ,
)22, -
&&22. 0
(221 2
HttpContext222 =
.22= >
Current22> E
.22E F
Request22F M
!=22N P
null22Q U
)22U V
&&22W Y
(22Z [
HttpContext22[ f
.22f g
Current22g n
.22n o
Request22o v
.22v w
Browser22w ~
!=	22 Å
null
22Ç Ü
)
22Ü á
)
22á à
{33 #
HttpBrowserCapabilities44 '
browser44( /
=440 1
HttpContext442 =
.44= >
Current44> E
.44E F
Request44F M
.44M N
Browser44N U
;44U V
if55 
(55 
(55 
browser55 
.55 
Browser55 $
==55% '
IE55( *
)55* +
&&55, .
(55/ 0
browser550 7
.557 8
Version558 ?
.55? @

StartsWith55@ J
(55J K
Version755K S
)55S T
)55T U
)55U V
{66 
result77 
=77 
true77 !
;77! "
}88 
}:: 
return<< 
result<< 
;<< 
}>> 	
public@@ 
static@@ 
bool@@ 
IsIE8@@  
(@@  !
)@@! "
{AA 	
boolBB 
resultBB 
=BB 
falseBB 
;BB  
ifDD 
(DD 
(DD 
HttpContextDD 
.DD 
CurrentDD $
!=DD% '
nullDD( ,
)DD, -
&&DD. 0
(DD1 2
HttpContextDD2 =
.DD= >
CurrentDD> E
.DDE F
RequestDDF M
!=DDN P
nullDDQ U
)DDU V
&&DDW Y
(DDZ [
HttpContextDD[ f
.DDf g
CurrentDDg n
.DDn o
RequestDDo v
.DDv w
BrowserDDw ~
!=	DD Å
null
DDÇ Ü
)
DDÜ á
)
DDá à
{EE #
HttpBrowserCapabilitiesFF '
browserFF( /
=FF0 1
HttpContextFF2 =
.FF= >
CurrentFF> E
.FFE F
RequestFFF M
.FFM N
BrowserFFN U
;FFU V
ifGG 
(GG 
(GG 
browserGG 
.GG 
BrowserGG $
==GG% '
IEGG( *
)GG* +
&&GG, .
(GG/ 0
browserGG0 7
.GG7 8
VersionGG8 ?
.GG? @

StartsWithGG@ J
(GGJ K
Version8GGK S
)GGS T
)GGT U
)GGU V
{HH 
resultII 
=II 
trueII !
;II! "
}JJ 
}LL 
returnNN 
resultNN 
;NN 
}PP 	
publicRR 
staticRR 
boolRR 
IsIE9RR  
(RR  !
)RR! "
{SS 	
boolTT 
resultTT 
=TT 
falseTT 
;TT  
ifVV 
(VV 
(VV 
HttpContextVV 
.VV 
CurrentVV $
!=VV% '
nullVV( ,
)VV, -
&&VV. 0
(VV1 2
HttpContextVV2 =
.VV= >
CurrentVV> E
.VVE F
RequestVVF M
!=VVN P
nullVVQ U
)VVU V
&&VVW Y
(VVZ [
HttpContextVV[ f
.VVf g
CurrentVVg n
.VVn o
RequestVVo v
.VVv w
BrowserVVw ~
!=	VV Å
null
VVÇ Ü
)
VVÜ á
)
VVá à
{WW #
HttpBrowserCapabilitiesXX '
browserXX( /
=XX0 1
HttpContextXX2 =
.XX= >
CurrentXX> E
.XXE F
RequestXXF M
.XXM N
BrowserXXN U
;XXU V
ifYY 
(YY 
(YY 
browserYY 
.YY 
BrowserYY $
==YY% '
IEYY( *
)YY* +
&&YY, .
(YY/ 0
browserYY0 7
.YY7 8
VersionYY8 ?
.YY? @

StartsWithYY@ J
(YYJ K
Version9YYK S
)YYS T
)YYT U
)YYU V
{ZZ 
result[[ 
=[[ 
true[[ !
;[[! "
}\\ 
}^^ 
return`` 
result`` 
;`` 
}bb 	
publicdd 
staticdd 
booldd 
IsIEdd 
(dd  
)dd  !
{ee 	
boolff 
resultff 
=ff 
falseff 
;ff  
ifhh 
(hh 
(hh 
HttpContexthh 
.hh 
Currenthh $
!=hh% '
nullhh( ,
)hh, -
&&hh. 0
(hh1 2
HttpContexthh2 =
.hh= >
Currenthh> E
.hhE F
RequesthhF M
!=hhN P
nullhhQ U
)hhU V
&&hhW Y
(hhZ [
HttpContexthh[ f
.hhf g
Currenthhg n
.hhn o
Requesthho v
.hhv w
	UserAgent	hhw Ä
!=
hhÅ É
null
hhÑ à
)
hhà â
)
hhâ ä
{ii 
ifkk 
(kk 
HttpContextkk 
.kk  
Currentkk  '
.kk' (
Requestkk( /
.kk/ 0
	UserAgentkk0 9
.kk9 :
Containskk: B
(kkB C
$strkkC I
)kkI J
)kkJ K
{ll 
resultmm 
=mm 
truemm !
;mm! "
}nn 
}pp 
returnrr 
resultrr 
;rr 
}tt 	
publicvv 
staticvv 
boolvv 
IsFFvv 
(vv  
)vv  !
{ww 	
boolxx 
resultxx 
=xx 
falsexx 
;xx  
ifzz 
(zz 
(zz 
HttpContextzz 
.zz 
Currentzz $
!=zz% '
nullzz( ,
)zz, -
&&zz. 0
(zz1 2
HttpContextzz2 =
.zz= >
Currentzz> E
.zzE F
RequestzzF M
!=zzN P
nullzzQ U
)zzU V
&&zzW Y
(zzZ [
HttpContextzz[ f
.zzf g
Currentzzg n
.zzn o
Requestzzo v
.zzv w
	UserAgent	zzw Ä
!=
zzÅ É
null
zzÑ à
)
zzà â
)
zzâ ä
{{{ 
if}} 
(}} 
HttpContext}} 
.}}  
Current}}  '
.}}' (
Request}}( /
.}}/ 0
	UserAgent}}0 9
.}}9 :
Contains}}: B
(}}B C
$str}}C L
)}}L M
)}}M N
{~~ 
result 
= 
true !
;! "
}
ÄÄ 
}
ÇÇ 
return
ÑÑ 
result
ÑÑ 
;
ÑÑ 
}
ÜÜ 	
public
àà 
static
àà 
bool
àà 
IsSafari
àà #
(
àà# $
)
àà$ %
{
ââ 	
bool
ää 
result
ää 
=
ää 
false
ää 
;
ää  
if
åå 
(
åå 
(
åå 
HttpContext
åå 
.
åå 
Current
åå $
!=
åå% '
null
åå( ,
)
åå, -
&&
åå. 0
(
åå1 2
HttpContext
åå2 =
.
åå= >
Current
åå> E
.
ååE F
Request
ååF M
!=
ååN P
null
ååQ U
)
ååU V
&&
ååW Y
(
ååZ [
HttpContext
åå[ f
.
ååf g
Current
ååg n
.
åån o
Request
ååo v
.
ååv w
	UserAgentååw Ä
!=ååÅ É
nullååÑ à
)ååà â
)ååâ ä
{
çç 
result
éé 
=
éé 
(
éé 
HttpContext
éé %
.
éé% &
Current
éé& -
.
éé- .
Request
éé. 5
.
éé5 6
	UserAgent
éé6 ?
.
éé? @
ToLower
éé@ G
(
ééG H
)
ééH I
.
ééI J
Contains
ééJ R
(
ééR S
$str
ééS [
)
éé[ \
)
éé\ ]
;
éé] ^
}
èè 
return
ëë 
result
ëë 
;
ëë 
}
ìì 	
public
ïï 
static
ïï 
bool
ïï 
IsOpera
ïï "
(
ïï" #
)
ïï# $
{
ññ 	
bool
óó 
result
óó 
=
óó 
false
óó 
;
óó  
if
ôô 
(
ôô 
(
ôô 
HttpContext
ôô 
.
ôô 
Current
ôô $
!=
ôô% '
null
ôô( ,
)
ôô, -
&&
ôô. 0
(
ôô1 2
HttpContext
ôô2 =
.
ôô= >
Current
ôô> E
.
ôôE F
Request
ôôF M
!=
ôôN P
null
ôôQ U
)
ôôU V
&&
ôôW Y
(
ôôZ [
HttpContext
ôô[ f
.
ôôf g
Current
ôôg n
.
ôôn o
Request
ôôo v
.
ôôv w
	UserAgentôôw Ä
!=ôôÅ É
nullôôÑ à
)ôôà â
)ôôâ ä
{
öö 
result
õõ 
=
õõ 
(
õõ 
HttpContext
õõ %
.
õõ% &
Current
õõ& -
.
õõ- .
Request
õõ. 5
.
õõ5 6
	UserAgent
õõ6 ?
.
õõ? @
ToLower
õõ@ G
(
õõG H
)
õõH I
.
õõI J
Contains
õõJ R
(
õõR S
$str
õõS Z
)
õõZ [
)
õõ[ \
;
õõ\ ]
}
úú 
return
ûû 
result
ûû 
;
ûû 
}
†† 	
public
¢¢ 
static
¢¢ 
bool
¢¢ 
IsIphone
¢¢ #
(
¢¢# $
)
¢¢$ %
{
££ 	
bool
§§ 
result
§§ 
=
§§ 
false
§§ 
;
§§  
if
¶¶ 
(
¶¶ 
(
¶¶ 
HttpContext
¶¶ 
.
¶¶ 
Current
¶¶ $
!=
¶¶% '
null
¶¶( ,
)
¶¶, -
&&
¶¶. 0
(
¶¶1 2
HttpContext
¶¶2 =
.
¶¶= >
Current
¶¶> E
.
¶¶E F
Request
¶¶F M
!=
¶¶N P
null
¶¶Q U
)
¶¶U V
&&
¶¶W Y
(
¶¶Z [
HttpContext
¶¶[ f
.
¶¶f g
Current
¶¶g n
.
¶¶n o
Request
¶¶o v
.
¶¶v w
	UserAgent¶¶w Ä
!=¶¶Å É
null¶¶Ñ à
)¶¶à â
)¶¶â ä
{
ßß 
result
®® 
=
®® 
(
®® 
HttpContext
®® %
.
®®% &
Current
®®& -
.
®®- .
Request
®®. 5
.
®®5 6
	UserAgent
®®6 ?
.
®®? @
ToLower
®®@ G
(
®®G H
)
®®H I
.
®®I J
Contains
®®J R
(
®®R S
$str
®®S [
)
®®[ \
)
®®\ ]
;
®®] ^
}
©© 
return
´´ 
result
´´ 
;
´´ 
}
≠≠ 	
public
ØØ 
static
ØØ 
bool
ØØ 
IsIpad
ØØ !
(
ØØ! "
)
ØØ" #
{
∞∞ 	
bool
±± 
result
±± 
=
±± 
false
±± 
;
±±  
if
≥≥ 
(
≥≥ 
(
≥≥ 
HttpContext
≥≥ 
.
≥≥ 
Current
≥≥ $
!=
≥≥% '
null
≥≥( ,
)
≥≥, -
&&
≥≥. 0
(
≥≥1 2
HttpContext
≥≥2 =
.
≥≥= >
Current
≥≥> E
.
≥≥E F
Request
≥≥F M
!=
≥≥N P
null
≥≥Q U
)
≥≥U V
&&
≥≥W Y
(
≥≥Z [
HttpContext
≥≥[ f
.
≥≥f g
Current
≥≥g n
.
≥≥n o
Request
≥≥o v
.
≥≥v w
	UserAgent≥≥w Ä
!=≥≥Å É
null≥≥Ñ à
)≥≥à â
)≥≥â ä
{
¥¥ 
result
µµ 
=
µµ 
(
µµ 
HttpContext
µµ %
.
µµ% &
Current
µµ& -
.
µµ- .
Request
µµ. 5
.
µµ5 6
	UserAgent
µµ6 ?
.
µµ? @
ToLower
µµ@ G
(
µµG H
)
µµH I
.
µµI J
Contains
µµJ R
(
µµR S
$str
µµS Y
)
µµY Z
)
µµZ [
;
µµ[ \
}
∂∂ 
return
∏∏ 
result
∏∏ 
;
∏∏ 
}
∫∫ 	
private
ºº 
static
ºº 
bool
ºº 
IsOldIOS
ºº $
(
ºº$ %
)
ºº% &
{
ΩΩ 	
if
¿¿ 
(
¿¿ 
(
¿¿ 
HttpContext
¿¿ 
.
¿¿ 
Current
¿¿ $
!=
¿¿% '
null
¿¿( ,
)
¿¿, -
&&
¿¿. 0
(
¿¿1 2
HttpContext
¿¿2 =
.
¿¿= >
Current
¿¿> E
.
¿¿E F
Request
¿¿F M
!=
¿¿N P
null
¿¿Q U
)
¿¿U V
&&
¿¿W Y
(
¿¿Z [
HttpContext
¿¿[ f
.
¿¿f g
Current
¿¿g n
.
¿¿n o
Request
¿¿o v
.
¿¿v w
	UserAgent¿¿w Ä
!=¿¿Å É
null¿¿Ñ à
)¿¿à â
)¿¿â ä
{
¡¡ 
if
¬¬ 
(
¬¬ 
HttpContext
¬¬ 
.
¬¬  
Current
¬¬  '
.
¬¬' (
Request
¬¬( /
.
¬¬/ 0
	UserAgent
¬¬0 9
.
¬¬9 :
ToLower
¬¬: A
(
¬¬A B
)
¬¬B C
.
¬¬C D
Contains
¬¬D L
(
¬¬L M
$str
¬¬M T
)
¬¬T U
)
¬¬U V
{
¬¬W X
return
¬¬Y _
true
¬¬` d
;
¬¬d e
}
¬¬f g
if
√√ 
(
√√ 
HttpContext
√√ 
.
√√  
Current
√√  '
.
√√' (
Request
√√( /
.
√√/ 0
	UserAgent
√√0 9
.
√√9 :
ToLower
√√: A
(
√√A B
)
√√B C
.
√√C D
Contains
√√D L
(
√√L M
$str
√√M T
)
√√T U
)
√√U V
{
√√W X
return
√√Y _
true
√√` d
;
√√d e
}
√√f g
}
ƒƒ 
return
«« 
false
«« 
;
«« 
}
…… 	
public
ÀÀ 
static
ÀÀ 
bool
ÀÀ )
MobileDeviceSupportsWYSIWYG
ÀÀ 6
(
ÀÀ6 7
)
ÀÀ7 8
{
ÃÃ 	
bool
ÕÕ 
result
ÕÕ 
=
ÕÕ 
false
ÕÕ 
;
ÕÕ  
if
œœ 
(
œœ 
(
–– 
IsIpad
–– 
(
–– 
)
–– 
||
–– 
IsIphone
–– %
(
––% &
)
––& '
)
––' (
&&
—— 
(
—— 
!
—— 
IsOldIOS
—— 
(
—— 
)
—— 
)
——  
)
““ 
{
”” 
result
‘‘ 
=
‘‘ 
true
‘‘ 
;
‘‘ 
}
’’ 
return
◊◊ 
result
◊◊ 
;
◊◊ 
}
ÿÿ 	
public
€€ 
static
€€ 
bool
€€ 
IsSmartPhone
€€ '
(
€€' (
)
€€( )
{
‹‹ 	
bool
›› 
result
›› 
=
›› 
false
›› 
;
››  
if
ﬂﬂ 
(
ﬂﬂ 
(
ﬂﬂ 
HttpContext
ﬂﬂ 
.
ﬂﬂ 
Current
ﬂﬂ $
!=
ﬂﬂ% '
null
ﬂﬂ( ,
)
ﬂﬂ, -
&&
ﬂﬂ. 0
(
ﬂﬂ1 2
HttpContext
ﬂﬂ2 =
.
ﬂﬂ= >
Current
ﬂﬂ> E
.
ﬂﬂE F
Request
ﬂﬂF M
!=
ﬂﬂN P
null
ﬂﬂQ U
)
ﬂﬂU V
&&
ﬂﬂW Y
(
ﬂﬂZ [
HttpContext
ﬂﬂ[ f
.
ﬂﬂf g
Current
ﬂﬂg n
.
ﬂﬂn o
Request
ﬂﬂo v
.
ﬂﬂv w
	UserAgentﬂﬂw Ä
!=ﬂﬂÅ É
nullﬂﬂÑ à
)ﬂﬂà â
)ﬂﬂâ ä
{
‡‡ 
result
·· 
=
·· 
(
·· 
HttpContext
·· %
.
··% &
Current
··& -
.
··- .
Request
··. 5
.
··5 6
	UserAgent
··6 ?
.
··? @
ToLower
··@ G
(
··G H
)
··H I
.
··I J
Contains
··J R
(
··R S
$str
··S [
)
··[ \
)
··\ ]
;
··] ^
if
‚‚ 
(
‚‚ 
result
‚‚ 
)
‚‚ 
{
‚‚ 
return
‚‚ $
result
‚‚% +
;
‚‚+ ,
}
‚‚- .
result
‰‰ 
=
‰‰ 
(
‰‰ 
HttpContext
‰‰ %
.
‰‰% &
Current
‰‰& -
.
‰‰- .
Request
‰‰. 5
.
‰‰5 6
	UserAgent
‰‰6 ?
.
‰‰? @
ToLower
‰‰@ G
(
‰‰G H
)
‰‰H I
.
‰‰I J
Contains
‰‰J R
(
‰‰R S
$str
‰‰S \
)
‰‰\ ]
)
‰‰] ^
;
‰‰^ _
if
ÂÂ 
(
ÂÂ 
result
ÂÂ 
)
ÂÂ 
{
ÂÂ 
return
ÂÂ $
result
ÂÂ% +
;
ÂÂ+ ,
}
ÂÂ- .
}
ÊÊ 
return
ËË 
result
ËË 
;
ËË 
}
ÍÍ 	
public
ÏÏ 
static
ÏÏ 
bool
ÏÏ !
IsWindowsLiveWriter
ÏÏ .
(
ÏÏ. /
)
ÏÏ/ 0
{
ÌÌ 	
bool
ÓÓ 
result
ÓÓ 
=
ÓÓ 
false
ÓÓ 
;
ÓÓ  
if
 
(
 
(
 
HttpContext
 
.
 
Current
 $
!=
% '
null
( ,
)
, -
&&
. 0
(
1 2
HttpContext
2 =
.
= >
Current
> E
.
E F
Request
F M
!=
N P
null
Q U
)
U V
&&
W Y
(
Z [
HttpContext
[ f
.
f g
Current
g n
.
n o
Request
o v
.
v w
	UserAgentw Ä
!=Å É
nullÑ à
)à â
)â ä
{
ÒÒ 
result
ÚÚ 
=
ÚÚ 
(
ÚÚ 
HttpContext
ÚÚ %
.
ÚÚ% &
Current
ÚÚ& -
.
ÚÚ- .
Request
ÚÚ. 5
.
ÚÚ5 6
	UserAgent
ÚÚ6 ?
.
ÚÚ? @
ToLower
ÚÚ@ G
(
ÚÚG H
)
ÚÚH I
.
ÚÚI J
Contains
ÚÚJ R
(
ÚÚR S
$str
ÚÚS h
)
ÚÚh i
)
ÚÚi j
;
ÚÚj k
}
ÛÛ 
return
ıı 
result
ıı 
;
ıı 
}
˜˜ 	
}
˘˘ 
}˙˙ œY
qD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\CombineScripts.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public 

class 
CombineScripts 
{ 
private 
static 
Regex 
_FindScriptTags ,
=- .
new/ 2
Regex3 8
(8 9
$str9 v
,v w
RegexOptions	x Ñ
.
Ñ Ö
Compiled
Ö ç
)
ç é
;
é è
public 
static 
string 
CombineScriptBlocks 0
(0 1
string1 7
scripts8 ?
)? @
{ 	
List 
< 
	UrlMapSet 
> 
sets  
=! "
LoadSets# +
(+ ,
), -
;- .
string 
output 
= 
scripts #
;# $
foreach!! 
(!! 
	UrlMapSet!! 
mapSet!! %
in!!& (
sets!!) -
)!!- .
{"" 
int## 
setStartPos## 
=##  !
-##" #
$num### $
;##$ %
List$$ 
<$$ 
string$$ 
>$$ 
names$$ "
=$$# $
new$$% (
List$$) -
<$$- .
string$$. 4
>$$4 5
($$5 6
)$$6 7
;$$7 8
output&& 
=&& 
_FindScriptTags&& (
.&&( )
Replace&&) 0
(&&0 1
output&&1 7
,&&7 8
new&&9 <
MatchEvaluator&&= K
(&&K L
delegate&&L T
(&&T U
Match&&U Z
match&&[ `
)&&` a
{'' 
string(( 
url(( 
=((  
match((! &
.((& '
Groups((' -
[((- .
$str((. 3
]((3 4
.((4 5
Value((5 :
;((: ;
UrlMap** 
urlMatch** #
=**$ %
mapSet**& ,
.**, -
Urls**- 1
.**1 2
Find**2 6
(**6 7
new++ 
	Predicate++ %
<++% &
UrlMap++& ,
>++, -
(++- .
delegate,, $
(,,$ %
UrlMap,,% +
map,,, /
),,/ 0
{-- 
return..  &
map..' *
...* +
Url..+ .
==../ 1
url..2 5
;..5 6
}// 
)// 
)// 
;//  
if11 
(11 
null11 
!=11 
urlMatch11  (
)11( )
{22 
if55 
(55 
setStartPos55 '
<55( )
$num55* +
)55+ ,
setStartPos55- 8
=559 :
match55; @
.55@ A
Index55A F
;55F G
names77 
.77 
Add77 !
(77! "
urlMatch77" *
.77* +
Name77+ /
)77/ 0
;770 1
return88 
string88 %
.88% &
Empty88& +
;88+ ,
}99 
else:: 
{;; 
return<< 
match<< $
.<<$ %
Value<<% *
;<<* +
}== 
}?? 
)?? 
)?? 
;?? 
ifAA 
(AA 
setStartPosAA 
>=AA  "
$numAA# $
)AA$ %
{BB 
stringCC 
setNameCC "
=CC# $
stringCC% +
.CC+ ,
EmptyCC, 1
;CC1 2
ifFF 
(FF 
mapSetFF 
.FF 
IsIncludeAllFF +
)FF+ ,
{GG 
setNameII 
=II  !
stringII" (
.II( )
EmptyII) .
;II. /
}JJ 
elseKK 
{LL 
namesMM 
.MM 
SortMM "
(MM" #
)MM# $
;MM$ %
setNameNN 
=NN  !
stringNN" (
.NN( )
JoinNN) -
(NN- .
$strNN. 1
,NN1 2
namesNN3 8
.NN8 9
ToArrayNN9 @
(NN@ A
)NNA B
)NNB C
;NNC D
}OO 
stringQQ 
	urlPrefixQQ $
=QQ% &
HttpContextQQ' 2
.QQ2 3
CurrentQQ3 :
.QQ: ;
RequestQQ; B
.QQB C
PathQQC G
.QQG H
	SubstringQQH Q
(QQQ R
$numQQR S
,QQS T
HttpContextQQU `
.QQ` a
CurrentQQa h
.QQh i
RequestQQi p
.QQp q
PathQQq u
.QQu v
LastIndexOf	QQv Å
(
QQÅ Ç
$char
QQÇ Ö
)
QQÖ Ü
+
QQá à
$num
QQâ ä
)
QQä ã
;
QQã å
stringXX 
newScriptTagXX '
=XX( )
$strXX* f
+YY 
HttpUtilityYY %
.YY% &
	UrlEncodeYY& /
(YY/ 0
mapSetYY0 6
.YY6 7
NameYY7 ;
)YY; <
+ZZ 
$strZZ 
+ZZ 
HttpUtilityZZ  +
.ZZ+ ,
	UrlEncodeZZ, 5
(ZZ5 6
setNameZZ6 =
)ZZ= >
+[[ 
$str[[ !
+[[" #
HttpUtility[[$ /
.[[/ 0
	UrlEncode[[0 9
([[9 :
	urlPrefix[[: C
)[[C D
+\\ 
$str\\ (
;\\( )
output^^ 
=^^ 
output^^ #
.^^# $
Insert^^$ *
(^^* +
setStartPos^^+ 6
,^^6 7
newScriptTag^^8 D
)^^D E
;^^E F
}__ 
}`` 
returnbb 
outputbb 
;bb 
}cc 	
publicee 
staticee 
Listee 
<ee 
	UrlMapSetee $
>ee$ %
LoadSetsee& .
(ee. /
)ee/ 0
{ff 	
Listgg 
<gg 
	UrlMapSetgg 
>gg 
setsgg  
=gg! "
newgg# &
Listgg' +
<gg+ ,
	UrlMapSetgg, 5
>gg5 6
(gg6 7
)gg7 8
;gg8 9
stringii 
fileNameii 
=ii 
$strii 2
;ii2 3
ifjj 
(jj  
ConfigurationManagerjj $
.jj$ %
AppSettingsjj% 0
[jj0 1
$strjj1 Y
]jjY Z
!=jj[ ]
nulljj^ b
)jjb c
{kk 
fileNamell 
=ll  
ConfigurationManagerll /
.ll/ 0
AppSettingsll0 ;
[ll; <
$strll< d
]lld e
;lle f
}mm 
stringoo 
fullPathToFileoo !
=oo" #
HttpContextoo$ /
.oo/ 0
Currentoo0 7
.oo7 8
Serveroo8 >
.oo> ?
MapPathoo? F
(ooF G
$strooG f
)oof g
;oog h
ifpp 
(pp 
!pp 
Filepp 
.pp 
Existspp 
(pp 
fullPathToFilepp +
)pp+ ,
)pp, -
{pp. /
returnpp0 6
setspp7 ;
;pp; <
}pp= >
usingrr 
(rr 
	XmlReaderrr 
readerrr #
=rr$ %
newrr& )
XmlTextReaderrr* 7
(rr7 8
newrr8 ;
StreamReaderrr< H
(rrH I
fullPathToFilerrI W
)rrW X
)rrX Y
)rrY Z
{ss 
readertt 
.tt 
MoveToContenttt $
(tt$ %
)tt% &
;tt& '
whileuu 
(uu 
readeruu 
.uu 
Readuu "
(uu" #
)uu# $
)uu$ %
{vv 
ifww 
(ww 
$strww 
==ww  
readerww! '
.ww' (
Nameww( ,
)ww, -
{xx 
stringyy 
setNameyy &
=yy' (
readeryy) /
.yy/ 0
GetAttributeyy0 <
(yy< =
$stryy= C
)yyC D
;yyD E
stringzz 
isIncludeAllzz +
=zz, -
readerzz. 4
.zz4 5
GetAttributezz5 A
(zzA B
$strzzB N
)zzN O
;zzO P
	UrlMapSet|| !
mapSet||" (
=||) *
new||+ .
	UrlMapSet||/ 8
(||8 9
)||9 :
;||: ;
mapSet}} 
.}} 
Name}} #
=}}$ %
setName}}& -
;}}- .
if~~ 
(~~ 
isIncludeAll~~ (
==~~) +
$str~~, 2
)~~2 3
mapSet "
." #
IsIncludeAll# /
=0 1
true2 6
;6 7
while
ÅÅ 
(
ÅÅ 
reader
ÅÅ %
.
ÅÅ% &
Read
ÅÅ& *
(
ÅÅ* +
)
ÅÅ+ ,
)
ÅÅ, -
{
ÇÇ 
if
ÉÉ 
(
ÉÉ  
$str
ÉÉ  %
==
ÉÉ& (
reader
ÉÉ) /
.
ÉÉ/ 0
Name
ÉÉ0 4
)
ÉÉ4 5
{
ÑÑ 
string
ÖÖ  &
urlName
ÖÖ' .
=
ÖÖ/ 0
reader
ÖÖ1 7
.
ÖÖ7 8
GetAttribute
ÖÖ8 D
(
ÖÖD E
$str
ÖÖE K
)
ÖÖK L
;
ÖÖL M
string
ÜÜ  &
url
ÜÜ' *
=
ÜÜ+ ,
reader
ÜÜ- 3
.
ÜÜ3 4(
ReadElementContentAsString
ÜÜ4 N
(
ÜÜN O
)
ÜÜO P
;
ÜÜP Q
mapSet
áá  &
.
áá& '
Urls
áá' +
.
áá+ ,
Add
áá, /
(
áá/ 0
new
áá0 3
UrlMap
áá4 :
(
áá: ;
urlName
áá; B
,
ááB C
url
ááD G
)
ááG H
)
ááH I
;
ááI J
}
àà 
else
ââ  
if
ââ! #
(
ââ$ %
$str
ââ% *
==
ââ+ -
reader
ââ. 4
.
ââ4 5
Name
ââ5 9
)
ââ9 :
break
ää  %
;
ää% &
}
ãã 
sets
çç 
.
çç 
Add
çç  
(
çç  !
mapSet
çç! '
)
çç' (
;
çç( )
}
éé 
}
èè 
}
êê 
return
íí 
sets
íí 
;
íí 
}
ìì 	
}
îî 
public
ññ 

class
ññ 
	UrlMapSet
ññ 
{
óó 
public
òò 
string
òò 
Name
òò 
;
òò 
public
ôô 
bool
ôô 
IsIncludeAll
ôô  
;
ôô  !
public
öö 
List
öö 
<
öö 
UrlMap
öö 
>
öö 
Urls
öö  
=
öö! "
new
öö# &
List
öö' +
<
öö+ ,
UrlMap
öö, 2
>
öö2 3
(
öö3 4
)
öö4 5
;
öö5 6
}
õõ 
public
ùù 

class
ùù 
UrlMap
ùù 
{
ûû 
public
üü 
string
üü 
Name
üü 
;
üü 
public
†† 
string
†† 
Url
†† 
;
†† 
public
¢¢ 
UrlMap
¢¢ 
(
¢¢ 
string
¢¢ 
name
¢¢ !
,
¢¢! "
string
¢¢# )
url
¢¢* -
)
¢¢- .
{
££ 	
this
§§ 
.
§§ 
Name
§§ 
=
§§ 
name
§§ 
;
§§ 
this
•• 
.
•• 
Url
•• 
=
•• 
url
•• 
;
•• 
}
¶¶ 	
}
ßß 
}®® ˚ 
mD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\Compressor.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public

 

static

 
class

 

Compressor

 "
{ 
public 
static 
byte 
[ 
]  
Compress! )
() *
byte* .
[. /
]/ 0
data1 5
)5 6
{ 
using 
( 
MemoryStream #
output$ *
=+ ,
new- 0
MemoryStream1 =
(= >
)> ?
)? @
{ 
using 
( 

GZipStream %
gzip& *
=+ ,
new- 0

GZipStream1 ;
(; <
output< B
,B C
CompressionModeD S
.S T
CompressT \
,\ ]
true^ b
)b c
)c d
{ 
gzip 
. 
Write "
(" #
data# '
,' (
$num) *
,* +
data, 0
.0 1
Length1 7
)7 8
;8 9
gzip 
. 
Close "
(" #
)# $
;$ %
return 
output %
.% &
ToArray& -
(- .
). /
;/ 0
} 
} 
} 
public 
static 
byte 
[ 
]  

Decompress! +
(+ ,
byte, 0
[0 1
]1 2
data3 7
)7 8
{ 
using 
( 
MemoryStream #
input$ )
=* +
new, /
MemoryStream0 <
(< =
)= >
)> ?
{ 
input 
. 
Write 
(  
data  $
,$ %
$num& '
,' (
data) -
.- .
Length. 4
)4 5
;5 6
input 
. 
Position "
=# $
$num% &
;& '
using   
(   

GZipStream   %
gzip  & *
=  + ,
new  - 0

GZipStream  1 ;
(  ; <
input  < A
,  A B
CompressionMode  C R
.  R S

Decompress  S ]
,  ] ^
true  _ c
)  c d
)  d e
{!! 
using"" 
("" 
MemoryStream"" +
output"", 2
=""3 4
new""5 8
MemoryStream""9 E
(""E F
)""F G
)""G H
{## 
byte$$  
[$$  !
]$$! "
buff$$# '
=$$( )
new$$* -
byte$$. 2
[$$2 3
$num$$3 5
]$$5 6
;$$6 7
int%% 
read%%  $
=%%% &
-%%' (
$num%%( )
;%%) *
read&&  
=&&! "
gzip&&# '
.&&' (
Read&&( ,
(&&, -
buff&&- 1
,&&1 2
$num&&3 4
,&&4 5
buff&&6 :
.&&: ;
Length&&; A
)&&A B
;&&B C
while'' !
(''" #
read''# '
>''( )
$num''* +
)''+ ,
{(( 
output))  &
.))& '
Write))' ,
()), -
buff))- 1
,))1 2
$num))3 4
,))4 5
read))6 :
))): ;
;)); <
read**  $
=**% &
gzip**' +
.**+ ,
Read**, 0
(**0 1
buff**1 5
,**5 6
$num**7 8
,**8 9
buff**: >
.**> ?
Length**? E
)**E F
;**F G
}++ 
gzip,,  
.,,  !
Close,,! &
(,,& '
),,' (
;,,( )
return-- "
output--# )
.--) *
ToArray--* 1
(--1 2
)--2 3
;--3 4
}.. 
}// 
}00 
}11 
}QQ 
}RR ¡
oD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\ConfigHelper.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
[		 
Obsolete		 

(		
 
$str		 ;
)		; <
]		< =
public

 
static

 
class

 
ConfigHelper

 !
{ 
public 
static	 
bool 
GetBoolProperty $
($ %
string% +
key, /
,/ 0
bool1 5
defaultValue6 B
)B C
{ 
return 	
Config
 
. 
ConfigHelper 
. 
GetBoolProperty -
(- .
key. 1
,1 2
defaultValue3 ?
)? @
;@ A
} 
public 
static	 
bool 
GetBoolProperty $
($ %
string% +
key, /
,/ 0
bool1 5
defaultValue6 B
,B C
boolD H
byPassContextI V
)V W
{ 
return 	
Config
 
. 
ConfigHelper 
. 
GetBoolProperty -
(- .
key. 1
,1 2
defaultValue3 ?
,? @
byPassContextA N
)N O
;O P
} 
public 
static	 
string 
GetStringProperty (
(( )
string) /
key0 3
,3 4
string5 ;
defaultValue< H
)H I
{ 
return 	
Config
 
. 
ConfigHelper 
. 
GetStringProperty /
(/ 0
key0 3
,3 4
defaultValue5 A
)A B
;B C
} 
public 
static	 
int 
GetIntProperty "
(" #
string# )
key* -
,- .
int/ 2
defaultValue3 ?
)? @
{ 
return 	
Config
 
. 
ConfigHelper 
. 
GetIntProperty ,
(, -
key- 0
,0 1
defaultValue2 >
)> ?
;? @
} 
public   
static  	 
long   
GetLongProperty   $
(  $ %
string  % +
key  , /
,  / 0
long  1 5
defaultValue  6 B
)  B C
{!! 
return"" 	
Config""
 
."" 
ConfigHelper"" 
."" 
GetLongProperty"" -
(""- .
key"". 1
,""1 2
defaultValue""3 ?
)""? @
;""@ A
}## 
public%% 
static%%	 
Unit%% 
GetUnit%% 
(%% 
string%% #
key%%$ '
,%%' (
Unit%%) -
defaultValue%%. :
)%%: ;
{&& 
return'' 	
Config''
 
.'' 
ConfigHelper'' 
.'' 
GetUnitProperty'' -
(''- .
key''. 1
,''1 2
defaultValue''3 ?
)''? @
;''@ A
}(( 
})) 
}** ◊ì
oD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\CookieHelper.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public 

static 
class 
CookieHelper $
{ 
public		 
static		 
bool		 
UserHasCartCookie		 ,
(		, -
Guid		- 1
	storeGuid		2 ;
)		; <
{

 	
if 
( 
	storeGuid 
== 
Guid !
.! "
Empty" '
)' (
return) /
false0 5
;5 6
string 
cartKey 
= 
$str #
+$ %
	storeGuid& /
./ 0
ToString0 8
(8 9
)9 :
;: ;
return 
CookieExists 
(  
cartKey  '
)' (
;( )
} 	
public 
static 
string 

GetCartKey '
(' (
Guid( ,
	storeGuid- 6
)6 7
{ 	
return 
$str 
+ 
	storeGuid %
.% &
ToString& .
(. /
)/ 0
;0 1
} 	
public 
static 
void 
SetCartCookie (
(( )
Guid) -
	storeGuid. 7
,7 8
Guid9 =
cartGuid> F
)F G
{ 	
if 
( 
( 
	storeGuid 
!= 
Guid "
." #
Empty# (
)( )
&&* ,
(- .
cartGuid. 6
!=7 9
Guid: >
.> ?
Empty? D
)D E
)E F
{ 
string 
cartKey 
=  
$str! '
+( )
	storeGuid* 3
.3 4
ToString4 <
(< =
)= >
;> ?
SetPersistentCookie #
(# $
cartKey$ +
,+ ,
cartGuid- 5
.5 6
ToString6 >
(> ?
)? @
)@ A
;A B
}!! 
}"" 	
public$$ 
static$$ 
void$$ 
ClearCartCookie$$ *
($$* +
Guid$$+ /
	storeGuid$$0 9
)$$9 :
{%% 	
if&& 
(&& 
	storeGuid&& 
!=&& 
Guid&& !
.&&! "
Empty&&" '
)&&' (
{'' 
string(( 
cartKey(( 
=((  

GetCartKey((! +
(((+ ,
	storeGuid((, 5
)((5 6
;((6 7
CookieHelper)) 
.)) 
SetPersistentCookie)) 0
())0 1
cartKey))1 8
,))8 9
string)): @
.))@ A
Empty))A F
)))F G
;))G H
}** 
},, 	
public.. 
static.. 
string.. 
GetCartCookie.. *
(..* +
Guid..+ /
	storeGuid..0 9
)..9 :
{// 	
if00 
(00 
	storeGuid00 
==00 
Guid00 !
.00! "
Empty00" '
)00' (
return00) /
string000 6
.006 7
Empty007 <
;00< =
string22 
cartKey22 
=22 

GetCartKey22 '
(22' (
	storeGuid22( 1
)221 2
;222 3
return66 
CookieHelper66 
.66  
GetCookieValue66  .
(66. /
cartKey66/ 6
)666 7
;667 8
}88 	
public:: 
static:: 
bool:: 
CookieExists:: '
(::' (
string::( .

cookieName::/ 9
)::9 :
{;; 	
if<< 
(<< 
HttpContext<< 
.<< 
Current<< #
==<<$ &
null<<' +
)<<+ ,
return<<- 3
false<<4 9
;<<9 :
if== 
(== 
String== 
.== 
IsNullOrEmpty== $
(==$ %

cookieName==% /
)==/ 0
)==0 1
return==2 8
false==9 >
;==> ?
return>> 
(>> 
HttpContext>> 
.>>  
Current>>  '
.>>' (
Request>>( /
.>>/ 0
Cookies>>0 7
[>>7 8

cookieName>>8 B
]>>B C
!=>>D F
null>>G K
)>>K L
;>>L M
}?? 	
publicAA 
staticAA 
stringAA 
GetCookieValueAA +
(AA+ ,
stringAA, 2

cookieNameAA3 =
)AA= >
{BB 	
ifCC 
(CC 
HttpContextCC 
.CC 
CurrentCC #
==CC$ &
nullCC' +
)CC+ ,
returnCC- 3
StringCC4 :
.CC: ;
EmptyCC; @
;CC@ A
ifDD 
(DD 
StringDD 
.DD 
IsNullOrEmptyDD $
(DD$ %

cookieNameDD% /
)DD/ 0
)DD0 1
returnDD2 8
StringDD9 ?
.DD? @
EmptyDD@ E
;DDE F
ifEE 
(EE 
HttpContextEE 
.EE 
CurrentEE #
.EE# $
RequestEE$ +
.EE+ ,
CookiesEE, 3
[EE3 4

cookieNameEE4 >
]EE> ?
==EE@ B
nullEEC G
)EEG H
{FF 
returnGG 
stringGG 
.GG 
EmptyGG #
;GG# $
}HH 
returnII 
HttpContextII 
.II 
CurrentII &
.II& '
RequestII' .
.II. /
CookiesII/ 6
.II6 7
GetII7 :
(II: ;

cookieNameII; E
)IIE F
.IIF G
ValueIIG L
;IIL M
}JJ 	
publicLL 
staticLL 
voidLL 
SetPersistentCookieLL .
(LL. /
StringLL/ 5

cookieNameLL6 @
,LL@ A
StringLLB H
cookieValueLLI T
)LLT U
{MM 	
ifNN 
(NN 
StringNN 
.NN 
IsNullOrEmptyNN $
(NN$ %

cookieNameNN% /
)NN/ 0
||NN1 3
StringNN4 :
.NN: ;
IsNullOrEmptyNN; H
(NNH I
cookieValueNNI T
)NNT U
)NNU V
returnNNW ]
;NN] ^
ifOO 
(OO 
HttpContextOO 
.OO 
CurrentOO #
!=OO$ &
nullOO' +
)OO+ ,
{PP 

HttpCookieQQ 
cookieQQ !
=QQ" #
newQQ$ '

HttpCookieQQ( 2
(QQ2 3

cookieNameQQ3 =
,QQ= >
cookieValueQQ? J
)QQJ K
;QQK L
cookieRR 
.RR 
HttpOnlyRR 
=RR  !
trueRR" &
;RR& '
cookieSS 
.SS 
ExpiresSS 
=SS  
DateTimeSS! )
.SS) *
NowSS* -
.SS- .
AddYearsSS. 6
(SS6 7
$numSS7 8
)SS8 9
;SS9 :
HttpContextTT 
.TT 
CurrentTT #
.TT# $
ResponseTT$ ,
.TT, -
CookiesTT- 4
.TT4 5
AddTT5 8
(TT8 9
cookieTT9 ?
)TT? @
;TT@ A
}UU 
}VV 	
publicXX 
staticXX 
voidXX 
	SetCookieXX $
(XX$ %
StringXX% +

cookieNameXX, 6
,XX6 7
StringXX8 >
cookieValueXX? J
,XXJ K
boolXXL P

persistentXXQ [
)XX[ \
{YY 	
ifZZ 
(ZZ 
StringZZ 
.ZZ 
IsNullOrEmptyZZ $
(ZZ$ %

cookieNameZZ% /
)ZZ/ 0
||ZZ1 3
StringZZ4 :
.ZZ: ;
IsNullOrEmptyZZ; H
(ZZH I
cookieValueZZI T
)ZZT U
)ZZU V
returnZZW ]
;ZZ] ^
if[[ 
([[ 
HttpContext[[ 
.[[ 
Current[[ #
!=[[$ &
null[[' +
)[[+ ,
{\\ 
if]] 
(]] 

persistent]] 
)]] 
{^^ 
SetPersistentCookie__ '
(__' (

cookieName__( 2
,__2 3
cookieValue__4 ?
)__? @
;__@ A
}`` 
elseaa 
{bb 
	SetCookiecc 
(cc 

cookieNamecc (
,cc( )
cookieValuecc* 5
)cc5 6
;cc6 7
}dd 
}ee 
}ff 	
publichh 
statichh 
voidhh 
	SetCookiehh $
(hh$ %
Stringhh% +

cookieNamehh, 6
,hh6 7
Stringhh8 >
cookieValuehh? J
)hhJ K
{ii 	
ifjj 
(jj 
Stringjj 
.jj 
IsNullOrEmptyjj $
(jj$ %

cookieNamejj% /
)jj/ 0
||jj1 3
Stringjj4 :
.jj: ;
IsNullOrEmptyjj; H
(jjH I
cookieValuejjI T
)jjT U
)jjU V
returnjjW ]
;jj] ^
ifkk 
(kk 
HttpContextkk 
.kk 
Currentkk #
!=kk$ &
nullkk' +
)kk+ ,
{ll 

HttpCookiemm 
cookiemm !
=mm" #
newmm$ '

HttpCookiemm( 2
(mm2 3

cookieNamemm3 =
,mm= >
cookieValuemm? J
)mmJ K
;mmK L
cookienn 
.nn 
HttpOnlynn 
=nn  !
truenn" &
;nn& '
HttpContextpp 
.pp 
Currentpp #
.pp# $
Responsepp$ ,
.pp, -
Cookiespp- 4
.pp4 5
Addpp5 8
(pp8 9
cookiepp9 ?
)pp? @
;pp@ A
}qq 
}rr 	
publictt 
statictt 
voidtt 
ExpireCookiett '
(tt' (
Stringtt( .

cookieNamett/ 9
)tt9 :
{uu 	
ifvv 
(vv 
Stringvv 
.vv 
IsNullOrEmptyvv $
(vv$ %

cookieNamevv% /
)vv/ 0
)vv0 1
returnvv2 8
;vv8 9
ifww 
(ww 
HttpContextww 
.ww 
Currentww #
!=ww$ &
nullww' +
)ww+ ,
{xx 

HttpCookieyy 
cookieyy !
=yy" #
newyy$ '

HttpCookieyy( 2
(yy2 3

cookieNameyy3 =
,yy= >
stringyy? E
.yyE F
EmptyyyF K
)yyK L
;yyL M
cookiezz 
.zz 
HttpOnlyzz 
=zz  !
truezz" &
;zz& '
cookie{{ 
.{{ 
Expires{{ 
={{  
DateTime{{! )
.{{) *
Now{{* -
.{{- .
AddYears{{. 6
({{6 7
-{{7 8
$num{{8 9
){{9 :
;{{: ;
HttpContext|| 
.|| 
Current|| #
.||# $
Response||$ ,
.||, -
Cookies||- 4
.||4 5
Add||5 8
(||8 9
cookie||9 ?
)||? @
;||@ A
}}} 
}~~ 	
public
ÄÄ 
static
ÄÄ 
void
ÄÄ 
SetSecureCookie
ÄÄ *
(
ÄÄ* +
String
ÄÄ+ 1

cookieName
ÄÄ2 <
,
ÄÄ< =
String
ÄÄ> D
cookieValue
ÄÄE P
)
ÄÄP Q
{
ÅÅ 	
if
ÇÇ 
(
ÇÇ 
String
ÇÇ 
.
ÇÇ 
IsNullOrEmpty
ÇÇ $
(
ÇÇ$ %

cookieName
ÇÇ% /
)
ÇÇ/ 0
||
ÇÇ1 3
String
ÇÇ4 :
.
ÇÇ: ;
IsNullOrEmpty
ÇÇ; H
(
ÇÇH I
cookieValue
ÇÇI T
)
ÇÇT U
)
ÇÇU V
return
ÇÇW ]
;
ÇÇ] ^
if
ÉÉ 
(
ÉÉ 
HttpContext
ÉÉ 
.
ÉÉ 
Current
ÉÉ #
==
ÉÉ$ &
null
ÉÉ' +
)
ÉÉ+ ,
return
ÉÉ- 3
;
ÉÉ3 4

HttpCookie
ÑÑ 
cookie
ÑÑ 
=
ÑÑ 
new
ÑÑ  #

HttpCookie
ÑÑ$ .
(
ÑÑ. /

cookieName
ÑÑ/ 9
,
ÑÑ9 :
cookieValue
ÑÑ; F
)
ÑÑF G
;
ÑÑG H
cookie
ÖÖ 
.
ÖÖ 
HttpOnly
ÖÖ 
=
ÖÖ 
true
ÖÖ "
;
ÖÖ" #!
SignAndSecureCookie
àà 
(
àà  
cookie
ââ 
,
ââ 
HttpContext
ää 
.
ää  
Current
ää  '
.
ää' (
Request
ää( /
.
ää/ 0
ServerVariables
ää0 ?
)
ää? @
;
ää@ A
HttpContext
åå 
.
åå 
Current
åå 
.
åå  
Response
åå  (
.
åå( )
Cookies
åå) 0
.
åå0 1
Add
åå1 4
(
åå4 5
cookie
åå5 ;
)
åå; <
;
åå< =
}
éé 	
public
êê 
static
êê 
string
êê "
GetSecureCookieValue
êê 1
(
êê1 2
string
êê2 8

cookieName
êê9 C
)
êêC D
{
ëë 	
if
íí 
(
íí 
HttpContext
íí 
.
íí 
Current
íí #
==
íí$ &
null
íí' +
)
íí+ ,
return
íí- 3
String
íí4 :
.
íí: ;
Empty
íí; @
;
íí@ A
if
ìì 
(
ìì 
String
ìì 
.
ìì 
IsNullOrEmpty
ìì $
(
ìì$ %

cookieName
ìì% /
)
ìì/ 0
)
ìì0 1
return
ìì2 8
String
ìì9 ?
.
ìì? @
Empty
ìì@ E
;
ììE F

HttpCookie
îî 
cookie
îî 
=
îî 
HttpContext
îî  +
.
îî+ ,
Current
îî, 3
.
îî3 4
Request
îî4 ;
.
îî; <
Cookies
îî< C
.
îîC D
Get
îîD G
(
îîG H

cookieName
îîH R
)
îîR S
;
îîS T
if
ïï 
(
ïï 
cookie
ïï 
==
ïï 
null
ïï 
)
ïï 
return
ïï  &
string
ïï' -
.
ïï- .
Empty
ïï. 3
;
ïï3 4
string
ôô 
value
ôô 
=
ôô $
DecryptAndVerifyCookie
ôô 1
(
ôô1 2
cookie
öö 
,
öö 
HttpContext
õõ 
.
õõ 
Current
õõ #
.
õõ# $
Request
õõ$ +
.
õõ+ ,
ServerVariables
õõ, ;
)
õõ; <
;
õõ< =
return
ùù 
value
ùù 
.
ùù 
ToString
ùù !
(
ùù! "
)
ùù" #
;
ùù# $
}
üü 	
public
°° 
static
°° 
void
°° !
SignAndSecureCookie
°° .
(
°°. /

HttpCookie
¢¢ 
cookie
¢¢ 
,
¢¢ !
NameValueCollection
££ 
serverVariables
§§ 
)
§§ 
{
•• 	
if
¶¶ 
(
¶¶ 
cookie
¶¶ 
.
¶¶ 
HasKeys
¶¶ 
)
¶¶ 
throw
ßß 
(
ßß 
new
ßß 
	Exception
ßß $
(
ßß$ %
$str
ßß% M
)
ßßM N
)
ßßN O
;
ßßO P
if
©© 
(
©© 
cookie
©© 
.
©© 
Expires
©© 
!=
©© !
DateTime
©©" *
.
©©* +
MinValue
©©+ 3
)
©©3 4
{
™™ 
cookie
´´ 
.
´´ 
Value
´´ 
=
´´ 
CryptoHelper
´´ +
.
´´+ ,
SignAndSecureData
´´, =
(
´´= >
new
´´> A
string
´´B H
[
´´H I
]
´´I J
{
¨¨ 
cookie
≠≠ 
.
≠≠ 
Value
≠≠ 
,
≠≠ 
serverVariables
ÆÆ 
[
ÆÆ 
$str
ÆÆ #
]
ÆÆ# $
,
ÆÆ$ %
cookie
ØØ 
.
ØØ 
Expires
ØØ 
.
ØØ 
ToString
ØØ 
(
ØØ 
)
ØØ 
}
ØØ  
)
ØØ  !
;
ØØ! "
}
∞∞ 
else
±± 
{
≤≤ 
cookie
≥≥ 
.
≥≥ 
Value
≥≥ 
=
≥≥ 
CryptoHelper
≥≥ +
.
≥≥+ ,
SignAndSecureData
≥≥, =
(
≥≥= >
new
¥¥ 
string
¥¥ 
[
¥¥ 
]
¥¥  
{
¥¥! "
cookie
¥¥# )
.
¥¥) *
Value
¥¥* /
,
¥¥/ 0
serverVariables
¥¥1 @
[
¥¥@ A
$str
¥¥A N
]
¥¥N O
}
¥¥P Q
)
¥¥Q R
;
¥¥R S
}
µµ 
}
∂∂ 	
public
∏∏ 
static
∏∏ 
string
∏∏ $
DecryptAndVerifyCookie
∏∏ 3
(
∏∏3 4

HttpCookie
ππ 
cookie
ππ 
,
ππ !
NameValueCollection
∫∫ 
serverVariables
∫∫  /
)
∫∫/ 0
{
ªª 	
if
ºº 
(
ºº 
cookie
ºº 
==
ºº 
null
ºº 
)
ºº 
return
ºº  &
null
ºº' +
;
ºº+ ,
string
ææ 
[
ææ 
]
ææ 
values
ææ 
;
ææ 
if
¿¿ 
(
¿¿ 
!
¿¿ 
CryptoHelper
¿¿ 
.
¿¿ "
DecryptAndVerifyData
¿¿ 2
(
¿¿2 3
cookie
¿¿3 9
.
¿¿9 :
Value
¿¿: ?
,
¿¿? @
out
¿¿A D
values
¿¿E K
)
¿¿K L
)
¿¿L M
return
¡¡ 
null
¡¡ 
;
¡¡ 
if
√√ 
(
√√ 
values
√√ 
.
√√ 
Length
√√ 
==
√√  
$num
√√! "
)
√√" #
{
ƒƒ 
DateTime
≈≈ 

expireDate
≈≈ #
=
≈≈$ %
DateTime
≈≈& .
.
≈≈. /
Parse
≈≈/ 4
(
≈≈4 5
values
≈≈5 ;
[
≈≈; <
$num
≈≈< =
]
≈≈= >
)
≈≈> ?
;
≈≈? @
if
∆∆ 
(
∆∆ 

expireDate
∆∆ 
<
∆∆  
DateTime
∆∆! )
.
∆∆) *
Now
∆∆* -
)
∆∆- .
return
«« 
null
«« 
;
««  
}
»» 
if
   
(
   
values
   
[
   
$num
   
]
   
!=
   
serverVariables
   ,
[
  , -
$str
  - :
]
  : ;
)
  ; <
return
ÀÀ 
null
ÀÀ 
;
ÀÀ 
return
ÕÕ 
values
ÕÕ 
[
ÕÕ 
$num
ÕÕ 
]
ÕÕ 
;
ÕÕ 
}
ŒŒ 	
}
œœ 
}–– ﬂ–
vD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\Crypto\CryptoHelper.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public 

static 
class 
CryptoHelper $
{ 
private 
static 
readonly 
ILog  $
log% (
=) *

LogManager+ 5
.5 6
	GetLogger6 ?
(? @
typeof@ F
(F G
CryptoHelperG S
)S T
)T U
;U V
[!! 	
Obsolete!!	 
(!! 
$str	!! ™
)
!!™ ´
]
!!´ ¨
public"" 
static"" 
string"" 
Encrypt"" $
(""$ %
string""% +
	clearText"", 5
)""5 6
{## 	
StringBuilder%% 
stringBuilder%% '
=%%( )
new%%* -
System%%. 4
.%%4 5
Text%%5 9
.%%9 :
StringBuilder%%: G
(%%G H
)%%H I
;%%I J$
RSACryptoServiceProvider'' $
.''$ %
UseMachineKeyStore''% 7
=''8 9
true'': >
;''> ?
using)) 
()) $
RSACryptoServiceProvider)) +
rsaProvider)), 7
=))8 9
new)): =$
RSACryptoServiceProvider))> V
())V W
)))W X
)))X Y
{** '
mojoEncryptionConfiguration++ +
config++, 2
=++3 4'
mojoEncryptionConfiguration++5 P
.++P Q
	GetConfig++Q Z
(++Z [
)++[ \
;++\ ]
if-- 
(-- 
config-- 
.-- 
RsaKey-- !
.--! "
Length--" (
==--) +
$num--, -
)--- .
{.. 
log// 
.// 
Error// 
(// 
$str// p
)//p q
;//q r
throw00 
new00 
ArgumentException00 /
(00/ 0
$str	000 Ç
)
00Ç É
;
00É Ñ
}11 
rsaProvider33 
.33 
FromXmlString33 )
(33) *
config33* 0
.330 1
RsaKey331 7
)337 8
;338 9
byte55 
[55 
]55 
encryptedStr55 #
;55# $
encryptedStr66 
=66 
rsaProvider66 *
.66* +
Encrypt66+ 2
(662 3
Encoding663 ;
.66; <
ASCII66< A
.66A B
GetBytes66B J
(66J K
	clearText66K T
)66T U
,66U V
false66W \
)66\ ]
;66] ^
for88 
(88 
int88 
i88 
=88 
$num88 
;88 
i88  !
<=88" $
encryptedStr88% 1
.881 2
Length882 8
-889 :
$num88; <
;88< =
i88> ?
++88? A
)88A B
{99 
if:: 
(:: 
i:: 
!=:: 
encryptedStr:: )
.::) *
Length::* 0
-::1 2
$num::3 4
)::4 5
{;; 
stringBuilder<< %
.<<% &
Append<<& ,
(<<, -
encryptedStr<<- 9
[<<9 :
i<<: ;
]<<; <
+<<= >
$str<<? B
)<<B C
;<<C D
}== 
else>> 
{?? 
stringBuilder@@ %
.@@% &
Append@@& ,
(@@, -
encryptedStr@@- 9
[@@9 :
i@@: ;
]@@; <
)@@< =
;@@= >
}AA 
}BB 
}CC 
returnEE 
stringBuilderEE  
.EE  !
ToStringEE! )
(EE) *
)EE* +
;EE+ ,
}GG 	
[NN 	
ObsoleteNN	 
(NN 
$str	NN ™
)
NN™ ´
]
NN´ ¨
publicOO 
staticOO 
stringOO 
DecryptOO $
(OO$ %
stringOO% +
encryptedTextOO, 9
)OO9 :
{PP 	
StringBuilderRR 
stringBuilderRR '
=RR( )
newRR* -
StringBuilderRR. ;
(RR; <
)RR< =
;RR= >$
RSACryptoServiceProviderTT $
.TT$ %
UseMachineKeyStoreTT% 7
=TT8 9
trueTT: >
;TT> ?
usingVV 
(VV $
RSACryptoServiceProviderVV +
rsaProviderVV, 7
=VV8 9
newVV: =$
RSACryptoServiceProviderVV> V
(VVV W
)VVW X
)VVX Y
{WW '
mojoEncryptionConfigurationXX +
configXX, 2
=XX3 4'
mojoEncryptionConfigurationXX5 P
.XXP Q
	GetConfigXXQ Z
(XXZ [
)XX[ \
;XX\ ]
ifYY 
(YY 
configYY 
.YY 
RsaKeyYY !
.YY! "
LengthYY" (
==YY) +
$numYY, -
)YY- .
{ZZ 
log[[ 
.[[ 
Error[[ 
([[ 
$str[[ p
)[[p q
;[[q r
throw\\ 
new\\ 
ArgumentException\\ /
(\\/ 0
$str	\\0 Ç
)
\\Ç É
;
\\É Ñ
}]] 
rsaProvider__ 
.__ 
FromXmlString__ )
(__) *
config__* 0
.__0 1
RsaKey__1 7
)__7 8
;__8 9
byteaa 
[aa 
]aa 
decryptedStraa #
=aa$ %
rsaProvideraa& 1
.aa1 2
Decryptaa2 9
(aa9 :
StringToByteArrayaa: K
(aaK L
encryptedTextaaL Y
.aaY Z
TrimaaZ ^
(aa^ _
)aa_ `
)aa` a
,aaa b
falseaac h
)aah i
;aai j
forcc 
(cc 
intcc 
icc 
=cc 
$numcc 
;cc 
icc  !
<=cc" $
decryptedStrcc% 1
.cc1 2
Lengthcc2 8
-cc9 :
$numcc; <
;cc< =
icc> ?
++cc? A
)ccA B
{dd 
stringBuilderee !
.ee! "
Appendee" (
(ee( )
Convertee) 0
.ee0 1
ToCharee1 7
(ee7 8
decryptedStree8 D
[eeD E
ieeE F
]eeF G
)eeG H
)eeH I
;eeI J
}ff 
}gg 
returnii 
stringBuilderii  
.ii  !
ToStringii! )
(ii) *
)ii* +
;ii+ ,
}kk 	
publicmm 
staticmm 
bytemm 
[mm 
]mm 
StringToByteArraymm .
(mm. /
stringmm/ 5
	inputTextmm6 ?
)mm? @
{nn 	
stringoo 
[oo 
]oo 
soo 
;oo 
spp 
=pp 
	inputTextpp 
.pp 
Trimpp 
(pp 
)pp  
.pp  !
Splitpp! &
(pp& '
$charpp' *
)pp* +
;pp+ ,
byterr 
[rr 
]rr 
brr 
=rr 
newrr 
byterr 
[rr  
srr  !
.rr! "
Lengthrr" (
]rr( )
;rr) *
fortt 
(tt 
inttt 
itt 
=tt 
$numtt 
;tt 
itt 
<=tt  
stt! "
.tt" #
Lengthtt# )
-tt* +
$numtt, -
;tt- .
itt/ 0
++tt0 2
)tt2 3
{uu 
bvv 
[vv 
ivv 
]vv 
=vv 
Convertvv 
.vv 
ToBytevv %
(vv% &
svv& '
[vv' (
ivv( )
]vv) *
,vv* +
CultureInfovv+ 6
.vv6 7
InvariantCulturevv7 G
)vvG H
;vvH I
}ww 
returnxx 
bxx 
;xx 
}yy 	
public|| 
static|| 
string|| 
Hash|| !
(||! "
string||" (
	cleanText||) 2
)||2 3
{}} 	
if~~ 
(~~ 
	cleanText~~ 
!=~~ 
null~~ !
)~~! "
{ 
Byte
ÄÄ 
[
ÄÄ 
]
ÄÄ 

clearBytes
ÄÄ !
=
ÄÄ" #
new
ÄÄ$ '
UnicodeEncoding
ÄÄ( 7
(
ÄÄ7 8
)
ÄÄ8 9
.
ÄÄ9 :
GetBytes
ÄÄ: B
(
ÄÄB C
	cleanText
ÄÄC L
)
ÄÄL M
;
ÄÄM N
Byte
ÇÇ 
[
ÇÇ 
]
ÇÇ 
hashedBytes
ÇÇ "
=
ÉÉ 
(
ÉÉ 
(
ÉÉ 
HashAlgorithm
ÉÉ %
)
ÉÉ% &
CryptoConfig
ÉÉ& 2
.
ÉÉ2 3
CreateFromName
ÉÉ3 A
(
ÉÉA B
$str
ÉÉB G
)
ÉÉG H
)
ÉÉH I
.
ÉÉI J
ComputeHash
ÉÉJ U
(
ÉÉU V

clearBytes
ÉÉV `
)
ÉÉ` a
;
ÉÉa b
return
ÖÖ 
BitConverter
ÖÖ #
.
ÖÖ# $
ToString
ÖÖ$ ,
(
ÖÖ, -
hashedBytes
ÖÖ- 8
)
ÖÖ8 9
;
ÖÖ9 :
}
ÜÜ 
else
áá 
{
àà 
return
ââ 
String
ââ 
.
ââ 
Empty
ââ #
;
ââ# $
}
ää 
}
åå 	
private
ëë 
static
ëë 
byte
ëë 
[
ëë 
]
ëë 
key_192
ëë %
=
ëë& '
new
ëë( +
byte
ëë, 0
[
ëë0 1
]
ëë1 2
{
íí 
$num
íí 
,
íí 
$num
íí 

,
íí
 
$num
íí 
,
íí 
$num
íí 
,
íí 
$num
íí 
,
íí 
$num
íí 
,
íí 
$num
íí 
,
íí 
$num
íí  "
,
íí" #
$num
íí$ &
,
íí& '
$num
íí( *
,
íí* +
$num
íí, .
,
íí. /
$num
íí0 2
,
íí2 3
$num
ìì 
,
ìì 
$num
ìì 

,
ìì
 
$num
ìì 
,
ìì 
$num
ìì 
,
ìì 
$num
ìì 
,
ìì 
$num
ìì 
,
ìì 
$num
ìì 
,
ìì 
$num
ìì  "
,
ìì" #
$num
ìì$ &
,
ìì& '
$num
ìì( *
,
ìì* +
$num
ìì, .
,
ìì. /
$num
ìì0 2
}
ìì2 3
;
ìì3 4
private
ïï 
static
ïï 
byte
ïï 
[
ïï 
]
ïï 
iv_128
ïï $
=
ïï% &
new
ïï' *
byte
ïï+ /
[
ïï/ 0
]
ïï0 1
{
ññ 
$num
ññ 
,
ññ 
$num
ññ 

,
ññ
 
$num
ññ 
,
ññ 
$num
ññ 
,
ññ 
$num
ññ 
,
ññ 
$num
ññ 
,
ññ 
$num
ññ 
,
ññ 
$num
ññ  "
,
ññ" #
$num
ññ$ &
,
ññ& '
$num
ññ( *
,
ññ* +
$num
ññ, .
,
ññ. /
$num
ññ0 2
,
ññ2 3
$num
óó 
,
óó 
$num
óó 

,
óó
 
$num
óó 
,
óó 
$num
óó 
}
óó 
;
óó 
public
ôô 
static
ôô 
string
ôô $
EncryptRijndaelManaged
ôô 3
(
ôô3 4
string
ôô4 :
value
ôô; @
)
ôô@ A
{
öö 	
if
õõ 
(
õõ 
value
õõ 
==
õõ 
string
õõ 
.
õõ  
Empty
õõ  %
)
õõ% &
return
õõ' -
string
õõ. 4
.
õõ4 5
Empty
õõ5 :
;
õõ: ;
RijndaelManaged
ùù 
crypto
ùù "
=
ùù# $
new
ùù% (
RijndaelManaged
ùù) 8
(
ùù8 9
)
ùù9 :
;
ùù: ;
MemoryStream
ûû 
memoryStream
ûû %
=
ûû& '
new
ûû( +
MemoryStream
ûû, 8
(
ûû8 9
)
ûû9 :
;
ûû: ;
CryptoStream
†† 
cryptoStream
†† %
=
††& '
new
††( +
CryptoStream
††, 8
(
††8 9
memoryStream
°° 
,
°° 
crypto
¢¢ 
.
¢¢ 
CreateEncryptor
¢¢ &
(
¢¢& '
key_192
¢¢' .
,
¢¢. /
iv_128
¢¢0 6
)
¢¢6 7
,
¢¢7 8
CryptoStreamMode
££  
.
££  !
Write
££! &
)
££& '
;
££' (
StreamWriter
•• 
streamWriter
•• %
=
••& '
new
••( +
StreamWriter
••, 8
(
••8 9
cryptoStream
••9 E
)
••E F
;
••F G
streamWriter
ßß 
.
ßß 
Write
ßß 
(
ßß 
value
ßß $
)
ßß$ %
;
ßß% &
streamWriter
®® 
.
®® 
Flush
®® 
(
®® 
)
®®  
;
®®  !
cryptoStream
©© 
.
©© 
FlushFinalBlock
©© (
(
©©( )
)
©©) *
;
©©* +
memoryStream
™™ 
.
™™ 
Flush
™™ 
(
™™ 
)
™™  
;
™™  !
return
¨¨ 
Convert
¨¨ 
.
¨¨ 
ToBase64String
¨¨ )
(
¨¨) *
memoryStream
¨¨* 6
.
¨¨6 7
	GetBuffer
¨¨7 @
(
¨¨@ A
)
¨¨A B
,
¨¨B C
$num
¨¨D E
,
¨¨E F
(
¨¨G H
int
¨¨H K
)
¨¨K L
memoryStream
¨¨L X
.
¨¨X Y
Length
¨¨Y _
)
¨¨_ `
;
¨¨` a
}
≠≠ 	
public
ØØ 
static
ØØ 
string
ØØ $
DecryptRijndaelManaged
ØØ 3
(
ØØ3 4
string
ØØ4 :
value
ØØ; @
)
ØØ@ A
{
∞∞ 	
if
±± 
(
±± 
value
±± 
==
±± 
string
±± 
.
±±  
Empty
±±  %
)
±±% &
return
±±' -
string
±±. 4
.
±±4 5
Empty
±±5 :
;
±±: ;
RijndaelManaged
≥≥ 
crypto
≥≥ "
=
≥≥# $
new
≥≥% (
RijndaelManaged
≥≥) 8
(
≥≥8 9
)
≥≥9 :
;
≥≥: ;
MemoryStream
¥¥ 
memoryStream
¥¥ %
=
¥¥& '
new
¥¥( +
MemoryStream
¥¥, 8
(
¥¥8 9
Convert
¥¥9 @
.
¥¥@ A
FromBase64String
¥¥A Q
(
¥¥Q R
value
¥¥R W
)
¥¥W X
)
¥¥X Y
;
¥¥Y Z
CryptoStream
∂∂ 
cryptoStream
∂∂ %
=
∂∂& '
new
∂∂( +
CryptoStream
∂∂, 8
(
∂∂8 9
memoryStream
∑∑ 
,
∑∑ 
crypto
∏∏ 
.
∏∏ 
CreateDecryptor
∏∏ &
(
∏∏& '
key_192
∏∏' .
,
∏∏. /
iv_128
∏∏0 6
)
∏∏6 7
,
∏∏7 8
CryptoStreamMode
ππ  
.
ππ  !
Read
ππ! %
)
ππ% &
;
ππ& '
StreamReader
ªª 
streamReader
ªª %
=
ªª& '
new
ªª( +
StreamReader
ªª, 8
(
ªª8 9
cryptoStream
ªª9 E
)
ªªE F
;
ªªF G
return
ΩΩ 
streamReader
ΩΩ 
.
ΩΩ  
	ReadToEnd
ΩΩ  )
(
ΩΩ) *
)
ΩΩ* +
;
ΩΩ+ ,
}
ææ 	
public
¿¿ 
static
¿¿ 
string
¿¿ 
SignAndSecureData
¿¿ .
(
¿¿. /
string
¿¿/ 5
value
¿¿6 ;
)
¿¿; <
{
¡¡ 	
return
¬¬ 
SignAndSecureData
¬¬ $
(
¬¬$ %
new
¬¬% (
string
¬¬) /
[
¬¬/ 0
]
¬¬0 1
{
¬¬2 3
value
¬¬4 9
}
¬¬: ;
)
¬¬; <
;
¬¬< =
}
√√ 	
public
«« 
static
«« 
string
«« 
SignAndSecureData
«« .
(
««. /
string
««/ 5
[
««5 6
]
««6 7
values
««8 >
)
««> ?
{
»» 	
XmlDocument
…… 
xmlDoc
…… 
=
……  
new
……! $
XmlDocument
……% 0
(
……0 1
)
……1 2
;
……2 3
xmlDoc
   
.
   
LoadXml
   
(
   
$str
   $
)
  $ %
;
  % &
for
ÃÃ 
(
ÃÃ 
int
ÃÃ 
i
ÃÃ 
=
ÃÃ 
$num
ÃÃ 
;
ÃÃ 
i
ÃÃ 
<
ÃÃ 
values
ÃÃ  &
.
ÃÃ& '
Length
ÃÃ' -
;
ÃÃ- .
i
ÃÃ/ 0
++
ÃÃ0 2
)
ÃÃ2 3
{
ÕÕ 
	XmlHelper
ŒŒ 
.
ŒŒ 
AddNode
ŒŒ !
(
ŒŒ! "
xmlDoc
ŒŒ" (
,
ŒŒ( )
$str
ŒŒ* -
+
ŒŒ. /
i
ŒŒ0 1
.
ŒŒ1 2
ToString
ŒŒ2 :
(
ŒŒ: ;
)
ŒŒ; <
,
ŒŒ< =
values
ŒŒ> D
[
ŒŒD E
i
ŒŒE F
]
ŒŒF G
)
ŒŒG H
;
ŒŒH I
}
œœ &
RSACryptoServiceProvider
—— $
.
——$ % 
UseMachineKeyStore
——% 7
=
——8 9
true
——: >
;
——> ?
using
”” 
(
”” &
RSACryptoServiceProvider
”” +
rsaProvider
””, 7
=
””8 9
new
””: =&
RSACryptoServiceProvider
””> V
(
””V W
)
””W X
)
””X Y
{
‘‘ )
mojoEncryptionConfiguration
’’ +
config
’’, 2
=
’’3 4)
mojoEncryptionConfiguration
’’5 P
.
’’P Q
	GetConfig
’’Q Z
(
’’Z [
)
’’[ \
;
’’\ ]
if
◊◊ 
(
◊◊ 
config
◊◊ 
.
◊◊ 
RsaKey
◊◊ !
.
◊◊! "
Length
◊◊" (
==
◊◊) +
$num
◊◊, -
)
◊◊- .
{
ÿÿ 
log
ŸŸ 
.
ŸŸ 
Error
ŸŸ 
(
ŸŸ 
$str
ŸŸ p
)
ŸŸp q
;
ŸŸq r
throw
⁄⁄ 
new
⁄⁄ 
ArgumentException
⁄⁄ /
(
⁄⁄/ 0
$str⁄⁄0 Ç
)⁄⁄Ç É
;⁄⁄É Ñ
}
€€ 
rsaProvider
›› 
.
›› 
FromXmlString
›› )
(
››) *
config
››* 0
.
››0 1
RsaKey
››1 7
)
››7 8
;
››8 9
byte
ﬂﬂ 
[
ﬂﬂ 
]
ﬂﬂ 
	signature
ﬂﬂ  
=
ﬂﬂ! "
rsaProvider
ﬂﬂ# .
.
ﬂﬂ. /
SignData
ﬂﬂ/ 7
(
ﬂﬂ7 8
Encoding
ﬂﬂ8 @
.
ﬂﬂ@ A
ASCII
ﬂﬂA F
.
ﬂﬂF G
GetBytes
ﬂﬂG O
(
ﬂﬂO P
xmlDoc
ﬂﬂP V
.
ﬂﬂV W
InnerXml
ﬂﬂW _
)
ﬂﬂ_ `
,
ﬂﬂ` a
$str
‡‡ 
)
‡‡ 
;
‡‡ 
	XmlHelper
‚‚ 
.
‚‚ 
AddNode
‚‚ !
(
‚‚! "
xmlDoc
‚‚" (
,
‚‚( )
$str
‚‚* -
,
‚‚- .
Convert
‚‚/ 6
.
‚‚6 7
ToBase64String
‚‚7 E
(
‚‚E F
	signature
‚‚F O
,
‚‚O P
$num
‚‚Q R
,
‚‚R S
	signature
‚‚T ]
.
‚‚] ^
Length
‚‚^ d
)
‚‚d e
)
‚‚e f
;
‚‚f g
}
„„ 
return
ÊÊ $
EncryptRijndaelManaged
ÊÊ )
(
ÊÊ) *
xmlDoc
ÊÊ* 0
.
ÊÊ0 1
InnerXml
ÊÊ1 9
)
ÊÊ9 :
;
ÊÊ: ;
}
ÁÁ 	
public
ÍÍ 
static
ÍÍ 
bool
ÍÍ "
DecryptAndVerifyData
ÍÍ /
(
ÍÍ/ 0
string
ÍÍ0 6
input
ÍÍ7 <
,
ÍÍ< =
out
ÍÍ> A
string
ÍÍB H
[
ÍÍH I
]
ÍÍI J
values
ÍÍK Q
)
ÍÍQ R
{
ÎÎ 	
string
ÏÏ 
xml
ÏÏ 
=
ÏÏ $
DecryptRijndaelManaged
ÏÏ /
(
ÏÏ/ 0
input
ÏÏ0 5
)
ÏÏ5 6
;
ÏÏ6 7
XmlDocument
ÓÓ 
xmlDoc
ÓÓ 
=
ÓÓ  
new
ÓÓ! $
XmlDocument
ÓÓ% 0
(
ÓÓ0 1
)
ÓÓ1 2
;
ÓÓ2 3
xmlDoc
ÔÔ 
.
ÔÔ 
LoadXml
ÔÔ 
(
ÔÔ 
xml
ÔÔ 
)
ÔÔ 
;
ÔÔ  
values
ÒÒ 
=
ÒÒ 
null
ÒÒ 
;
ÒÒ 
XmlNode
ÛÛ 
node
ÛÛ 
=
ÛÛ 
xmlDoc
ÛÛ !
.
ÛÛ! ""
GetElementsByTagName
ÛÛ" 6
(
ÛÛ6 7
$str
ÛÛ7 :
)
ÛÛ: ;
[
ÛÛ; <
$num
ÛÛ< =
]
ÛÛ= >
;
ÛÛ> ?
node
ÙÙ 
.
ÙÙ 

ParentNode
ÙÙ 
.
ÙÙ 
RemoveChild
ÙÙ '
(
ÙÙ' (
node
ÙÙ( ,
)
ÙÙ, -
;
ÙÙ- .
byte
ˆˆ 
[
ˆˆ 
]
ˆˆ 
	signature
ˆˆ 
=
ˆˆ 
Convert
ˆˆ &
.
ˆˆ& '
FromBase64String
ˆˆ' 7
(
ˆˆ7 8
node
ˆˆ8 <
.
ˆˆ< =
	InnerText
ˆˆ= F
)
ˆˆF G
;
ˆˆG H
byte
¯¯ 
[
¯¯ 
]
¯¯ 
data
¯¯ 
=
¯¯ 
Encoding
¯¯ "
.
¯¯" #
ASCII
¯¯# (
.
¯¯( )
GetBytes
¯¯) 1
(
¯¯1 2
xmlDoc
¯¯2 8
.
¯¯8 9
InnerXml
¯¯9 A
)
¯¯A B
;
¯¯B C&
RSACryptoServiceProvider
˙˙ $
.
˙˙$ % 
UseMachineKeyStore
˙˙% 7
=
˙˙8 9
true
˙˙: >
;
˙˙> ?
using
¸¸ 
(
¸¸ &
RSACryptoServiceProvider
¸¸ +
rsaProvider
¸¸, 7
=
¸¸8 9
new
¸¸: =&
RSACryptoServiceProvider
¸¸> V
(
¸¸V W
)
¸¸W X
)
¸¸X Y
{
˝˝ )
mojoEncryptionConfiguration
˛˛ +
config
˛˛, 2
=
˛˛3 4)
mojoEncryptionConfiguration
˛˛5 P
.
˛˛P Q
	GetConfig
˛˛Q Z
(
˛˛Z [
)
˛˛[ \
;
˛˛\ ]
if
ÄÄ 
(
ÄÄ 
config
ÄÄ 
.
ÄÄ 
RsaKey
ÄÄ !
.
ÄÄ! "
Length
ÄÄ" (
==
ÄÄ) +
$num
ÄÄ, -
)
ÄÄ- .
{
ÅÅ 
log
ÇÇ 
.
ÇÇ 
Error
ÇÇ 
(
ÇÇ 
$str
ÇÇ p
)
ÇÇp q
;
ÇÇq r
throw
ÉÉ 
new
ÉÉ 
ArgumentException
ÉÉ /
(
ÉÉ/ 0
$strÉÉ0 Ç
)ÉÉÇ É
;ÉÉÉ Ñ
}
ÑÑ 
rsaProvider
ÜÜ 
.
ÜÜ 
FromXmlString
ÜÜ )
(
ÜÜ) *
config
ÜÜ* 0
.
ÜÜ0 1
RsaKey
ÜÜ1 7
)
ÜÜ7 8
;
ÜÜ8 9
if
áá 
(
áá 
!
áá 
rsaProvider
áá  
.
áá  !

VerifyData
áá! +
(
áá+ ,
data
áá, 0
,
áá0 1
$str
áá2 8
,
áá8 9
	signature
áá: C
)
ááC D
)
ááD E
return
àà 
false
àà  
;
àà  !
}
ââ 
int
ãã 
count
ãã 
;
ãã 
for
åå 
(
åå 
count
åå 
=
åå 
$num
åå 
;
åå 
count
åå !
<
åå" #
$num
åå$ '
;
åå' (
count
åå) .
++
åå. 0
)
åå0 1
{
çç 
if
éé 
(
éé 
xmlDoc
éé 
.
éé "
GetElementsByTagName
éé /
(
éé/ 0
$str
éé0 3
+
éé4 5
count
éé6 ;
.
éé; <
ToString
éé< D
(
ééD E
)
ééE F
)
ééF G
[
ééG H
$num
ééH I
]
ééI J
==
ééK M
null
ééN R
)
ééR S
break
èè 
;
èè 
}
êê 
values
íí 
=
íí 
new
íí 
string
íí 
[
íí  
count
íí  %
]
íí% &
;
íí& '
for
îî 
(
îî 
int
îî 
i
îî 
=
îî 
$num
îî 
;
îî 
i
îî 
<
îî 
count
îî  %
;
îî% &
i
îî' (
++
îî( *
)
îî* +
values
ïï 
[
ïï 
i
ïï 
]
ïï 
=
ïï 
xmlDoc
ïï "
.
ïï" #"
GetElementsByTagName
ïï# 7
(
ïï7 8
$str
ïï8 ;
+
ïï< =
i
ïï> ?
.
ïï? @
ToString
ïï@ H
(
ïïH I
)
ïïI J
)
ïïJ K
[
ïïK L
$num
ïïL M
]
ïïM N
.
ïïN O
	InnerText
ïïO X
;
ïïX Y
return
óó 
true
óó 
;
óó 
}
òò 	
public
õõ 
static
õõ 
string
õõ 
CalculateMD5Hash
õõ -
(
õõ- .
string
õõ. 4
input
õõ5 :
)
õõ: ;
{
úú 	&
MD5CryptoServiceProvider
ûû $
md5
ûû% (
=
ûû) *
new
ûû+ .&
MD5CryptoServiceProvider
ûû/ G
(
ûûG H
)
ûûH I
;
ûûI J
UTF8Encoding
üü 
encoder
üü  
=
üü! "
new
üü# &
UTF8Encoding
üü' 3
(
üü3 4
)
üü4 5
;
üü5 6
byte
†† 
[
†† 
]
†† 

inputBytes
†† 
=
†† 
encoder
††  '
.
††' (
GetBytes
††( 0
(
††0 1
input
††1 6
)
††6 7
;
††7 8
byte
°° 
[
°° 
]
°° 
hash
°° 
=
°° 
md5
°° 
.
°° 
ComputeHash
°° )
(
°°) *

inputBytes
°°* 4
)
°°4 5
;
°°5 6
StringBuilder
§§ 
sb
§§ 
=
§§ 
new
§§ "
StringBuilder
§§# 0
(
§§0 1
)
§§1 2
;
§§2 3
for
•• 
(
•• 
int
•• 
i
•• 
=
•• 
$num
•• 
;
•• 
i
•• 
<
•• 
hash
••  $
.
••$ %
Length
••% +
;
••+ ,
i
••- .
++
••. 0
)
••0 1
{
¶¶ 
sb
ßß 
.
ßß 
Append
ßß 
(
ßß 
hash
ßß 
[
ßß 
i
ßß  
]
ßß  !
.
ßß! "
ToString
ßß" *
(
ßß* +
$str
ßß+ /
)
ßß/ 0
)
ßß0 1
;
ßß1 2
}
®® 
return
©© 
sb
©© 
.
©© 
ToString
©© 
(
©© 
)
©©  
;
©©  !
}
™™ 	
}
≠≠ 
}ÆÆ Ñ7
ÖD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\Crypto\mojoEncryptionConfiguration.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public 

class '
mojoEncryptionConfiguration ,
{ 
private 
static 
readonly 
ILog  $
log% (
= 

LogManager 
. 
	GetLogger "
(" #
typeof# )
() *'
mojoEncryptionConfiguration* E
)E F
)F G
;G H
private 
XmlNode 
rsaNode 
;  
public 
void *
LoadValuesFromConfigurationXml 2
(2 3
XmlNode3 :
node; ?
)? @
{ 	
foreach 
( 
XmlNode 
child "
in# %
node& *
.* +

ChildNodes+ 5
)5 6
{ 
if 
( 
child 
. 
Name 
== !
$str" /
)/ 0
rsaNode 
= 
child #
;# $
}   
}!! 	
public## 
String## 
RsaKey## 
{$$ 	
get%% 
{&& 
if'' 
('' 
this'' 
.'' 
rsaNode''  
!=''! #
null''$ (
)''( )
return(( 
this(( 
.((  
rsaNode((  '
.((' (
OuterXml((( 0
;((0 1
return** 
String** 
.** 
Empty** #
;**# $
},, 
}.. 	
public00 
static00 '
mojoEncryptionConfiguration00 1
	GetConfig002 ;
(00; <
)00< =
{11 	
try44 
{55 
if66 
(66 
(77 
HttpRuntime77  
.77  !
Cache77! &
[77& '
$str77' D
]77D E
!=77F H
null77I M
)77M N
&&88 
(88 
HttpRuntime88 #
.88# $
Cache88$ )
[88) *
$str88* G
]88G H
is88I K'
mojoEncryptionConfiguration88L g
)88g h
)99 
{:: 
return;; 
(;; '
mojoEncryptionConfiguration;; 7
);;7 8
HttpRuntime;;8 C
.;;C D
Cache;;D I
[;;I J
$str;;J g
];;g h
;;;h i
}<< '
mojoEncryptionConfiguration>> +
config>>, 2
=?? 
new?? '
mojoEncryptionConfiguration?? 5
(??5 6
)??6 7
;??7 8
stringCC 
pathToConfigFileCC '
=DD 
SystemDD 
.DD 
WebDD  
.DD  !
HostingDD! (
.DD( )
HostingEnvironmentDD) ;
.DD; <
MapPathDD< C
(DDC D
ConfigHelperDDD P
.DDP Q
GetStringPropertyDDQ b
(DDb c
$strDDc |
,DD| }
$str	DD~ ó
)
DDó ò
)
DDò ô
;
DDô ö
logFF 
.FF 
DebugFF 
(FF 
$strFF /
+FF0 1
pathToConfigFileFF2 B
)FFB C
;FFC D
ifHH 
(HH 
!HH 
FileHH 
.HH 
ExistsHH  
(HH  !
pathToConfigFileHH! 1
)HH1 2
)HH2 3
{II 
logJJ 
.JJ 
ErrorJJ 
(JJ 
$strJJ 6
+JJ7 8
pathToConfigFileJJ9 I
)JJI J
;JJJ K
returnKK 
configKK !
;KK! "
}LL 
FileInfoNN 
fileInfoNN !
=NN" #
newNN$ '
FileInfoNN( 0
(NN0 1
pathToConfigFileNN1 A
)NNA B
;NNB C
XmlDocumentPP 
	configXmlPP %
=PP& '
newPP( +
XmlDocumentPP, 7
(PP7 8
)PP8 9
;PP9 :
	configXmlQQ 
.QQ 
LoadQQ 
(QQ 
fileInfoQQ '
.QQ' (
FullNameQQ( 0
)QQ0 1
;QQ1 2
configRR 
.RR *
LoadValuesFromConfigurationXmlRR 5
(RR5 6
	configXmlRR6 ?
.RR? @
DocumentElementRR@ O
)RRO P
;RRP Q$
AggregateCacheDependencyVV ($
aggregateCacheDependencyVV) A
=WW 
newWW $
AggregateCacheDependencyWW 2
(WW2 3
)WW3 4
;WW4 5$
aggregateCacheDependencyZZ (
.ZZ( )
AddZZ) ,
(ZZ, -
newZZ- 0
CacheDependencyZZ1 @
(ZZ@ A
pathToConfigFileZZA Q
)ZZQ R
)ZZR S
;ZZS T
System\\ 
.\\ 
Web\\ 
.\\ 
HttpRuntime\\ &
.\\& '
Cache\\' ,
.\\, -
Insert\\- 3
(\\3 4
$str]] 1
,]]1 2
config^^ 
,^^ $
aggregateCacheDependency__ ,
,__, -
DateTime`` 
.`` 
Now``  
.``  !
AddYears``! )
(``) *
$num``* +
)``+ ,
,``, -
TimeSpanaa 
.aa 
Zeroaa !
,aa! "
Systembb 
.bb 
Webbb 
.bb 
Cachingbb &
.bb& '
CacheItemPrioritybb' 8
.bb8 9
Defaultbb9 @
,bb@ A
nullcc 
)cc 
;cc 
returnee 
(ee '
mojoEncryptionConfigurationee 3
)ee3 4
HttpRuntimeee4 ?
.ee? @
Cacheee@ E
[eeE F
$streeF c
]eec d
;eed e
}gg 
catchhh 
(hh 
HttpExceptionhh  
exhh! #
)hh# $
{ii 
logjj 
.jj 
Errorjj 
(jj 
exjj 
)jj 
;jj 
}ll 
catchmm 
(mm 
Systemmm 
.mm 
Xmlmm 
.mm 
XmlExceptionmm *
exmm+ -
)mm- .
{nn 
logoo 
.oo 
Erroroo 
(oo 
exoo 
)oo 
;oo 
}qq 
catchrr 
(rr 
ArgumentExceptionrr $
exrr% '
)rr' (
{ss 
logtt 
.tt 
Errortt 
(tt 
extt 
)tt 
;tt 
}vv 
catchww 
(ww "
NullReferenceExceptionww )
exww* ,
)ww, -
{xx 
logyy 
.yy 
Erroryy 
(yy 
exyy 
)yy 
;yy 
}{{ 
return}} 
null}} 
;}} 
}
ÅÅ 	
}
ÑÑ 
}ÖÖ Ùí
lD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\CssMinify.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{		 
public 

static 
class 
	CssMinify !
{ 
public 
static 
	Hashtable 
shortColorNames  /
=0 1
new2 5
	Hashtable6 ?
(? @
)@ A
;A B
public 
static 
	Hashtable 
shortHexColors  .
=/ 0
new1 4
	Hashtable5 >
(> ?
)? @
;@ A
public 
static 
string 
Minify #
(# $
string$ *
css+ .
). /
{ 	
return 
Minify 
( 
css 
, 
$num  
)  !
;! "
} 	
public 
static 
string 
Minify #
(# $
string$ *
css+ .
,. /
int0 3
columnWidth4 ?
)? @
{ 	
if   
(   
(   
shortColorNames    
.    !
Count  ! &
==  ' )
$num  * +
)  + ,
&&  - /
(  0 1
shortHexColors  1 ?
.  ? @
Count  @ E
==  F H
$num  I J
)  J K
)  K L
{!! 
try"" 
{## 
createHashTable$$ #
($$# $
)$$$ %
;$$% &
}%% 
catch&& 
(&& 
ArgumentException&& (
)&&( )
{'' 
return(( 
css(( 
;(( 
})) 
}** 
MatchEvaluator++ 
rgbDelegate++ &
=++' (
new++) ,
MatchEvaluator++- ;
(++; <
RGBMatchHandler++< K
)++K L
;++L M
MatchEvaluator,, "
shortColorNameDelegate,, 1
=,,2 3
new,,4 7
MatchEvaluator,,8 F
(,,F G&
ShortColorNameMatchHandler,,G a
),,a b
;,,b c
MatchEvaluator-- !
shortColorHexDelegate-- 0
=--1 2
new--3 6
MatchEvaluator--7 E
(--E F%
ShortColorHexMatchHandler--F _
)--_ `
;--` a
css.. 
=.. 
RemoveCommentBlocks.. %
(..% &
css..& )
)..) *
;..* +
css// 
=// 
Regex// 
.// 
Replace// 
(//  
css//  #
,//# $
$str//% +
,//+ ,
$str//- 0
)//0 1
;//1 2
css00 
=00 
Regex00 
.00 
Replace00 
(00  
css00  #
,00# $
$str00% B
,00B C
$str00D Z
)00Z [
;00[ \
css:: 
=:: 
Regex:: 
.:: 
Replace:: 
(::  
css::  #
,::# $
$str::% r
,::r s
$str::t x
)::x y
;::y z
css== 
=== 
Regex== 
.== 
Replace== 
(==  
css==  #
,==# $
$str==% 9
,==9 :
$str==; ?
)==? @
;==@ A
css>> 
=>> 
Regex>> 
.>> 
Replace>> 
(>>  
css>>  #
,>># $
$str>>% 0
,>>0 1
$str>>2 8
)>>8 9
;>>9 :
css?? 
=?? 
Regex?? 
.?? 
Replace?? 
(??  
css??  #
,??# $
$str??% R
,??R S
$str??T Z
)??Z [
;??[ \
css@@ 
=@@ 
Regex@@ 
.@@ 
Replace@@ 
(@@  
css@@  #
,@@# $
$str@@% O
,@@O P
$str@@Q W
)@@W X
;@@X Y
cssCC 
=CC 
RegexCC 
.CC 
ReplaceCC 
(CC  
cssCC  #
,CC# $
$strCC% A
,CCA B
$strCCC H
)CCH I
;CCI J
cssDD 
=DD 
RegexDD 
.DD 
ReplaceDD 
(DD  
cssDD  #
,DD# $
$strDD% ?
,DD? @
$strDDA F
)DDF G
;DDG H
cssFF 
=FF "
ShortHandAllPropertiesFF (
(FF( )
cssFF) ,
)FF, -
;FF- .
cssII 
=II 
RegexII 
.II 
ReplaceII 
(II  
cssII  #
,II# $
$str	II% ó
,
IIó ò
$str
IIô ü
,
IIü †
RegexOptions
II° ≠
.
II≠ Æ

IgnoreCase
IIÆ ∏
)
II∏ π
;
IIπ ∫
cssKK 
=KK 
RegexKK 
.KK 
ReplaceKK 
(KK  
cssKK  #
,KK# $
$str	KK% ¡
,
KK¡ ¬
$str
KK√ …
,
KK…  
RegexOptions
KKÀ ◊
.
KK◊ ÿ

IgnoreCase
KKÿ ‚
)
KK‚ „
;
KK„ ‰
cssMM 
=MM 
RegexMM 
.MM 
ReplaceMM 
(MM  
cssMM  #
,MM# $
$str	MM% ˝
,
MM˝ ˛
$str
MMˇ Ö
,
MMÖ Ü
RegexOptions
MMá ì
.
MMì î

IgnoreCase
MMî û
)
MMû ü
;
MMü †
cssPP 
=PP 
RegexPP 
.PP 
ReplacePP 
(PP  
cssPP  #
,PP# $
$strPP% =
,PP= >
$strPP? Y
)PPY Z
;PPZ [
cssQQ 
=QQ 
RegexQQ 
.QQ 
ReplaceQQ 
(QQ  
cssQQ  #
,QQ# $
$strQQ% 7
,QQ7 8
$strQQ9 @
)QQ@ A
;QQA B
cssSS 
=SS 
RegexSS 
.SS 
ReplaceSS 
(SS  
cssSS  #
,SS# $
$str	SS% ò
,
SSò ô
$str
SSö ®
,
SS® ©
RegexOptions
SS™ ∂
.
SS∂ ∑

IgnoreCase
SS∑ ¡
)
SS¡ ¬
;
SS¬ √
cssUU 
=UU 
RegexUU 
.UU 
ReplaceUU 
(UU  
cssUU  #
,UU# $
$str	UU% Ê
,
UUÊ Á
$str
UUË ˆ
,
UUˆ ˜
RegexOptions
UU¯ Ñ
.
UUÑ Ö

IgnoreCase
UUÖ è
)
UUè ê
;
UUê ë
cssWW 
=WW 
RegexWW 
.WW 
ReplaceWW 
(WW  
cssWW  #
,WW# $
$str	WW% Æ
,
WWÆ Ø
$str
WW∞ æ
,
WWæ ø
RegexOptions
WW¿ Ã
.
WWÃ Õ

IgnoreCase
WWÕ ◊
)
WW◊ ÿ
;
WWÿ Ÿ
cssYY 
=YY 
RegexYY 
.YY 
ReplaceYY 
(YY  
cssYY  #
,YY# $
$str	YY% ﬂ
,
YYﬂ ‡
$str
YY· Ô
,
YYÔ 
RegexOptions
YYÒ ˝
.
YY˝ ˛

IgnoreCase
YY˛ à
)
YYà â
;
YYâ ä
css\\ 
=\\ 
Regex\\ 
.\\ 
Replace\\ 
(\\  
css\\  #
,\\# $
$str\\% t
,\\t u
$str	\\v Ñ
,
\\Ñ Ö
RegexOptions
\\Ü í
.
\\í ì

IgnoreCase
\\ì ù
)
\\ù û
;
\\û ü
css^^ 
=^^ 
Regex^^ 
.^^ 
Replace^^ 
(^^  
css^^  #
,^^# $
$str	^^% ù
,
^^ù û
$str
^^ü ≠
,
^^≠ Æ
RegexOptions
^^Ø ª
.
^^ª º

IgnoreCase
^^º ∆
)
^^∆ «
;
^^« »
css`` 
=`` 
Regex`` 
.`` 
Replace`` 
(``  
css``  #
,``# $
$str	``% ¿
,
``¿ ¡
$str
``¬ –
,
``– —
RegexOptions
``“ ﬁ
.
``ﬁ ﬂ

IgnoreCase
``ﬂ È
)
``È Í
;
``Í Î
cssdd 
=dd 
Regexdd 
.dd 
Replacedd 
(dd  
cssdd  #
,dd# $
$str	dd% ¬
,
dd¬ √
rgbDelegate
ddƒ œ
)
ddœ –
;
dd– —
cssee 
=ee 
Regexee 
.ee 
Replaceee 
(ee  
cssee  #
,ee# $
$stree% m
,eem n
$streeo x
,eex y
RegexOptions	eez Ü
.
eeÜ á

IgnoreCase
eeá ë
)
eeë í
;
eeí ì
cssgg 
=gg 
Regexgg 
.gg 
Replacegg 
(gg  
cssgg  #
,gg# $
$strgg% J
,ggJ K
$strggL Q
,ggQ R
RegexOptionsggS _
.gg_ `

IgnoreCasegg` j
)ggj k
;ggk l
csshh 
=hh 
Regexhh 
.hh 
Replacehh 
(hh  
csshh  #
,hh# $
$strhh% P
,hhP Q"
shortColorNameDelegatehhR h
,hhh i
RegexOptionshhj v
.hhv w

IgnoreCase	hhw Å
)
hhÅ Ç
;
hhÇ É
cssii 
=ii 
Regexii 
.ii 
Replaceii 
(ii  
cssii  #
,ii# $
$strii% s
,iis t"
shortColorHexDelegate	iiu ä
,
iiä ã
RegexOptions
iiå ò
.
iiò ô

IgnoreCase
iiô £
)
ii£ §
;
ii§ •
cssll 
=ll 
Regexll 
.ll 
Replacell 
(ll  
cssll  #
,ll# $
$strll% 0
,ll0 1
$strll2 4
)ll4 5
;ll5 6
cssnn 
=nn 
Regexnn 
.nn 
Replacenn 
(nn  
cssnn  #
,nn# $
$strnn% +
,nn+ ,
$strnn- 1
)nn1 2
;nn2 3
ifoo 
(oo 
columnWidthoo 
>oo 
$numoo 
)oo  
{pp 
cssqq 
=qq 

BreakLinesqq  
(qq  !
cssqq! $
,qq$ %
columnWidthqq& 1
)qq1 2
;qq2 3
}rr 
returnss 
cssss 
;ss 
}tt 	
privateuu 
staticuu 
stringuu 
RemoveCommentBlocksuu 1
(uu1 2
stringuu2 8
inputuu9 >
)uu> ?
{vv 	
intww 

startIndexww 
=ww 
$numww 
;ww 
intxx 
endIndexxx 
=xx 
$numxx 
;xx 
boolyy 
iemacyy 
=yy 
falseyy 
;yy 

startIndexzz 
=zz 
inputzz 
.zz 
IndexOfzz &
(zz& '
$strzz' ,
,zz, -

startIndexzz. 8
)zz8 9
;zz9 :
while{{ 
({{ 

startIndex{{ 
>={{  
$num{{! "
){{" #
{|| 
endIndex}} 
=}} 
input}}  
.}}  !
IndexOf}}! (
(}}( )
$str}}) .
,}}. /

startIndex}}0 :
+}}; <
$num}}= >
)}}> ?
;}}? @
if~~ 
(~~ 
endIndex~~ 
>=~~ 

startIndex~~  *
+~~+ ,
$num~~- .
)~~. /
{ 
if
ÄÄ 
(
ÄÄ 
input
ÄÄ 
[
ÄÄ 
endIndex
ÄÄ &
-
ÄÄ' (
$num
ÄÄ) *
]
ÄÄ* +
==
ÄÄ, .
$char
ÄÄ/ 3
)
ÄÄ3 4
{
ÅÅ 

startIndex
ÇÇ "
=
ÇÇ# $
endIndex
ÇÇ% -
+
ÇÇ. /
$num
ÇÇ0 1
;
ÇÇ1 2
iemac
ÉÉ 
=
ÉÉ 
true
ÉÉ  $
;
ÉÉ$ %
}
ÑÑ 
else
ÖÖ 
if
ÖÖ 
(
ÖÖ 
iemac
ÖÖ "
)
ÖÖ" #
{
ÜÜ 

startIndex
áá "
=
áá# $
endIndex
áá% -
+
áá. /
$num
áá0 1
;
áá1 2
iemac
àà 
=
àà 
false
àà  %
;
àà% &
}
ââ 
else
ää 
{
ãã 
input
åå 
=
åå 
input
åå  %
.
åå% &
Remove
åå& ,
(
åå, -

startIndex
åå- 7
,
åå7 8
endIndex
åå9 A
+
ååB C
$num
ååD E
-
ååF G

startIndex
ååH R
)
ååR S
;
ååS T
}
çç 
}
éé 

startIndex
èè 
=
èè 
input
èè "
.
èè" #
IndexOf
èè# *
(
èè* +
$str
èè+ 0
,
èè0 1

startIndex
èè2 <
)
èè< =
;
èè= >
}
êê 
return
ëë 
input
ëë 
;
ëë 
}
íí 	
private
ìì 
static
ìì 
String
ìì 
RGBMatchHandler
ìì -
(
ìì- .
Match
ìì. 3
m
ìì4 5
)
ìì5 6
{
îî 	
int
ïï 
val
ïï 
=
ïï 
$num
ïï 
;
ïï 
StringBuilder
ññ 
hexcolor
ññ "
=
ññ# $
new
ññ% (
StringBuilder
ññ) 6
(
ññ6 7
$str
ññ7 :
)
ññ: ;
;
ññ; <
for
óó 
(
óó 
int
óó 
index
óó 
=
óó 
$num
óó 
;
óó 
index
óó  %
<=
óó& (
$num
óó) *
;
óó* +
index
óó, 1
+=
óó2 4
$num
óó5 6
)
óó6 7
{
òò 
val
ôô 
=
ôô 
Int32
ôô 
.
ôô 
Parse
ôô !
(
ôô! "
m
ôô" #
.
ôô# $
Groups
ôô$ *
[
ôô* +
index
ôô+ 0
]
ôô0 1
.
ôô1 2
Value
ôô2 7
)
ôô7 8
;
ôô8 9
hexcolor
öö 
.
öö 
Append
öö 
(
öö  
val
öö  #
.
öö# $
ToString
öö$ ,
(
öö, -
$str
öö- 1
)
öö1 2
)
öö2 3
;
öö3 4
}
õõ 
return
úú 
hexcolor
úú 
.
úú 
ToString
úú $
(
úú$ %
)
úú% &
;
úú& '
}
ùù 	
private
ûû 
static
ûû 
string
ûû 

BreakLines
ûû (
(
ûû( )
string
ûû) /
css
ûû0 3
,
ûû3 4
int
ûû5 8
columnWidth
ûû9 D
)
ûûD E
{
üü 	
int
†† 
i
†† 
=
†† 
$num
†† 
;
†† 
int
°° 
start
°° 
=
°° 
$num
°° 
;
°° 
StringBuilder
¢¢ 
sb
¢¢ 
=
¢¢ 
new
¢¢ "
StringBuilder
¢¢# 0
(
¢¢0 1
css
¢¢1 4
)
¢¢4 5
;
¢¢5 6
while
££ 
(
££ 
i
££ 
<
££ 
sb
££ 
.
££ 
Length
££  
)
££  !
{
§§ 
char
•• 
c
•• 
=
•• 
sb
•• 
[
•• 
i
•• 
++
•• 
]
••  
;
••  !
if
¶¶ 
(
¶¶ 
c
¶¶ 
==
¶¶ 
$char
¶¶ 
&&
¶¶ 
i
¶¶  !
-
¶¶" #
start
¶¶$ )
>
¶¶* +
columnWidth
¶¶, 7
)
¶¶7 8
{
ßß 
sb
®® 
.
®® 
Insert
®® 
(
®® 
i
®® 
,
®®  
$char
®®! %
)
®®% &
;
®®& '
start
©© 
=
©© 
i
©© 
;
©© 
}
™™ 
}
´´ 
return
¨¨ 
sb
¨¨ 
.
¨¨ 
ToString
¨¨ 
(
¨¨ 
)
¨¨  
;
¨¨  !
}
ÆÆ 	
private
ØØ 
static
ØØ 
string
ØØ 
ReplaceNonEmpty
ØØ -
(
ØØ- .
string
ØØ. 4
	inputText
ØØ5 >
,
ØØ> ?
string
ØØ@ F
replacementText
ØØG V
)
ØØV W
{
∞∞ 	
if
±± 
(
±± 
replacementText
±± 
.
±±  
Trim
±±  $
(
±±$ %
)
±±% &
!=
±±' )
string
±±* 0
.
±±0 1
Empty
±±1 6
)
±±6 7
{
≤≤ 
	inputText
≥≥ 
=
≥≥ 
string
≥≥ "
.
≥≥" #
Format
≥≥# )
(
≥≥) *
$str
≥≥* 0
,
≥≥0 1
replacementText
≥≥2 A
)
≥≥A B
;
≥≥B C
}
¥¥ 
return
µµ 
	inputText
µµ 
;
µµ 
}
∂∂ 	
private
∑∑ 
static
∑∑ 
string
∑∑ (
ShortColorNameMatchHandler
∑∑ 8
(
∑∑8 9
Match
∑∑9 >
m
∑∑? @
)
∑∑@ A
{
∏∏ 	
string
∫∫ 
returnValue
∫∫ 
=
∫∫  
m
∫∫! "
.
∫∫" #
Value
∫∫# (
;
∫∫( )
if
ªª 
(
ªª 
shortColorNames
ªª 
.
ªª  
ContainsKey
ªª  +
(
ªª+ ,
m
ªª, -
.
ªª- .
Groups
ªª. 4
[
ªª4 5
$str
ªª5 :
]
ªª: ;
.
ªª; <
Value
ªª< A
)
ªªA B
)
ªªB C
{
ºº 
returnValue
ΩΩ 
=
ΩΩ 
shortColorNames
ΩΩ -
[
ΩΩ- .
m
ΩΩ. /
.
ΩΩ/ 0
Groups
ΩΩ0 6
[
ΩΩ6 7
$str
ΩΩ7 <
]
ΩΩ< =
.
ΩΩ= >
Value
ΩΩ> C
]
ΩΩC D
.
ΩΩD E
ToString
ΩΩE M
(
ΩΩM N
)
ΩΩN O
;
ΩΩO P
}
ææ 
return
øø 
returnValue
øø 
;
øø 
}
¿¿ 	
private
¡¡ 
static
¡¡ 
string
¡¡ '
ShortColorHexMatchHandler
¡¡ 7
(
¡¡7 8
Match
¡¡8 =
m
¡¡> ?
)
¡¡? @
{
¬¬ 	
return
ƒƒ 
shortHexColors
ƒƒ !
[
ƒƒ! "
m
ƒƒ" #
.
ƒƒ# $
Value
ƒƒ$ )
.
ƒƒ) *
ToString
ƒƒ* 2
(
ƒƒ2 3
)
ƒƒ3 4
.
ƒƒ4 5
ToLower
ƒƒ5 <
(
ƒƒ< =
)
ƒƒ= >
]
ƒƒ> ?
.
ƒƒ? @
ToString
ƒƒ@ H
(
ƒƒH I
)
ƒƒI J
;
ƒƒJ K
}
≈≈ 	
private
∆∆ 
static
∆∆ 
void
∆∆ 
createHashTable
∆∆ +
(
∆∆+ ,
)
∆∆, -
{
«« 	
if
»» 
(
»» 
shortColorNames
»» 
.
»»  
Count
»»  %
>
»»& '
$num
»»( )
)
»») *
{
»»+ ,
return
»»- 3
;
»»3 4
}
»»5 6
shortColorNames
   
.
   
Add
   
(
    
$str
    (
.
  ( )
ToLower
  ) 0
(
  0 1
)
  1 2
,
  2 3
$str
  4 ;
.
  ; <
ToLower
  < C
(
  C D
)
  D E
)
  E F
;
  F G
shortColorNames
ÀÀ 
.
ÀÀ 
Add
ÀÀ 
(
ÀÀ  
$str
ÀÀ  (
.
ÀÀ( )
ToLower
ÀÀ) 0
(
ÀÀ0 1
)
ÀÀ1 2
,
ÀÀ2 3
$str
ÀÀ4 ;
.
ÀÀ; <
ToLower
ÀÀ< C
(
ÀÀC D
)
ÀÀD E
)
ÀÀE F
;
ÀÀF G
shortColorNames
ÃÃ 
.
ÃÃ 
Add
ÃÃ 
(
ÃÃ  
$str
ÃÃ  (
.
ÃÃ( )
ToLower
ÃÃ) 0
(
ÃÃ0 1
)
ÃÃ1 2
,
ÃÃ2 3
$str
ÃÃ4 <
.
ÃÃ< =
ToLower
ÃÃ= D
(
ÃÃD E
)
ÃÃE F
)
ÃÃF G
;
ÃÃG H
shortColorNames
ÕÕ 
.
ÕÕ 
Add
ÕÕ 
(
ÕÕ  
$str
ÕÕ  (
.
ÕÕ( )
ToLower
ÕÕ) 0
(
ÕÕ0 1
)
ÕÕ1 2
,
ÕÕ2 3
$str
ÕÕ4 ;
.
ÕÕ; <
ToLower
ÕÕ< C
(
ÕÕC D
)
ÕÕD E
)
ÕÕE F
;
ÕÕF G
shortColorNames
ŒŒ 
.
ŒŒ 
Add
ŒŒ 
(
ŒŒ  
$str
ŒŒ  (
.
ŒŒ( )
ToLower
ŒŒ) 0
(
ŒŒ0 1
)
ŒŒ1 2
,
ŒŒ2 3
$str
ŒŒ4 ;
.
ŒŒ; <
ToLower
ŒŒ< C
(
ŒŒC D
)
ŒŒD E
)
ŒŒE F
;
ŒŒF G
shortColorNames
œœ 
.
œœ 
Add
œœ 
(
œœ  
$str
œœ  (
.
œœ( )
ToLower
œœ) 0
(
œœ0 1
)
œœ1 2
,
œœ2 3
$str
œœ4 :
.
œœ: ;
ToLower
œœ; B
(
œœB C
)
œœC D
)
œœD E
;
œœE F
shortColorNames
–– 
.
–– 
Add
–– 
(
––  
$str
––  (
.
––( )
ToLower
––) 0
(
––0 1
)
––1 2
,
––2 3
$str
––4 :
.
––: ;
ToLower
––; B
(
––B C
)
––C D
)
––D E
;
––E F
shortColorNames
—— 
.
—— 
Add
—— 
(
——  
$str
——  (
.
——( )
ToLower
——) 0
(
——0 1
)
——1 2
,
——2 3
$str
——4 ;
.
——; <
ToLower
——< C
(
——C D
)
——D E
)
——E F
;
——F G
shortColorNames
““ 
.
““ 
Add
““ 
(
““  
$str
““  (
.
““( )
ToLower
““) 0
(
““0 1
)
““1 2
,
““2 3
$str
““4 <
.
““< =
ToLower
““= D
(
““D E
)
““E F
)
““F G
;
““G H
shortColorNames
”” 
.
”” 
Add
”” 
(
””  
$str
””  (
.
””( )
ToLower
””) 0
(
””0 1
)
””1 2
,
””2 3
$str
””4 ;
.
””; <
ToLower
””< C
(
””C D
)
””D E
)
””E F
;
””F G
shortColorNames
‘‘ 
.
‘‘ 
Add
‘‘ 
(
‘‘  
$str
‘‘  (
.
‘‘( )
ToLower
‘‘) 0
(
‘‘0 1
)
‘‘1 2
,
‘‘2 3
$str
‘‘4 ;
.
‘‘; <
ToLower
‘‘< C
(
‘‘C D
)
‘‘D E
)
‘‘E F
;
‘‘F G
shortColorNames
’’ 
.
’’ 
Add
’’ 
(
’’  
$str
’’  (
.
’’( )
ToLower
’’) 0
(
’’0 1
)
’’1 2
,
’’2 3
$str
’’4 ;
.
’’; <
ToLower
’’< C
(
’’C D
)
’’D E
)
’’E F
;
’’F G
shortColorNames
÷÷ 
.
÷÷ 
Add
÷÷ 
(
÷÷  
$str
÷÷  (
.
÷÷( )
ToLower
÷÷) 0
(
÷÷0 1
)
÷÷1 2
,
÷÷2 3
$str
÷÷4 <
.
÷÷< =
ToLower
÷÷= D
(
÷÷D E
)
÷÷E F
)
÷÷F G
;
÷÷G H
shortColorNames
◊◊ 
.
◊◊ 
Add
◊◊ 
(
◊◊  
$str
◊◊  (
.
◊◊( )
ToLower
◊◊) 0
(
◊◊0 1
)
◊◊1 2
,
◊◊2 3
$str
◊◊4 :
.
◊◊: ;
ToLower
◊◊; B
(
◊◊B C
)
◊◊C D
)
◊◊D E
;
◊◊E F
shortColorNames
ÿÿ 
.
ÿÿ 
Add
ÿÿ 
(
ÿÿ  
$str
ÿÿ  (
.
ÿÿ( )
ToLower
ÿÿ) 0
(
ÿÿ0 1
)
ÿÿ1 2
,
ÿÿ2 3
$str
ÿÿ4 ;
.
ÿÿ; <
ToLower
ÿÿ< C
(
ÿÿC D
)
ÿÿD E
)
ÿÿE F
;
ÿÿF G
shortColorNames
ŸŸ 
.
ŸŸ 
Add
ŸŸ 
(
ŸŸ  
$str
ŸŸ  (
.
ŸŸ( )
ToLower
ŸŸ) 0
(
ŸŸ0 1
)
ŸŸ1 2
,
ŸŸ2 3
$str
ŸŸ4 <
.
ŸŸ< =
ToLower
ŸŸ= D
(
ŸŸD E
)
ŸŸE F
)
ŸŸF G
;
ŸŸG H
shortColorNames
⁄⁄ 
.
⁄⁄ 
Add
⁄⁄ 
(
⁄⁄  
$str
⁄⁄  (
.
⁄⁄( )
ToLower
⁄⁄) 0
(
⁄⁄0 1
)
⁄⁄1 2
,
⁄⁄2 3
$str
⁄⁄4 <
.
⁄⁄< =
ToLower
⁄⁄= D
(
⁄⁄D E
)
⁄⁄E F
)
⁄⁄F G
;
⁄⁄G H
shortColorNames
€€ 
.
€€ 
Add
€€ 
(
€€  
$str
€€  (
.
€€( )
ToLower
€€) 0
(
€€0 1
)
€€1 2
,
€€2 3
$str
€€4 :
.
€€: ;
ToLower
€€; B
(
€€B C
)
€€C D
)
€€D E
;
€€E F
shortColorNames
‹‹ 
.
‹‹ 
Add
‹‹ 
(
‹‹  
$str
‹‹  (
.
‹‹( )
ToLower
‹‹) 0
(
‹‹0 1
)
‹‹1 2
,
‹‹2 3
$str
‹‹4 :
.
‹‹: ;
ToLower
‹‹; B
(
‹‹B C
)
‹‹C D
)
‹‹D E
;
‹‹E F
shortColorNames
›› 
.
›› 
Add
›› 
(
››  
$str
››  (
.
››( )
ToLower
››) 0
(
››0 1
)
››1 2
,
››2 3
$str
››4 :
.
››: ;
ToLower
››; B
(
››B C
)
››C D
)
››D E
;
››E F
shortColorNames
ﬁﬁ 
.
ﬁﬁ 
Add
ﬁﬁ 
(
ﬁﬁ  
$str
ﬁﬁ  (
.
ﬁﬁ( )
ToLower
ﬁﬁ) 0
(
ﬁﬁ0 1
)
ﬁﬁ1 2
,
ﬁﬁ2 3
$str
ﬁﬁ4 <
.
ﬁﬁ< =
ToLower
ﬁﬁ= D
(
ﬁﬁD E
)
ﬁﬁE F
)
ﬁﬁF G
;
ﬁﬁG H
shortColorNames
ﬂﬂ 
.
ﬂﬂ 
Add
ﬂﬂ 
(
ﬂﬂ  
$str
ﬂﬂ  (
.
ﬂﬂ( )
ToLower
ﬂﬂ) 0
(
ﬂﬂ0 1
)
ﬂﬂ1 2
,
ﬂﬂ2 3
$str
ﬂﬂ4 <
.
ﬂﬂ< =
ToLower
ﬂﬂ= D
(
ﬂﬂD E
)
ﬂﬂE F
)
ﬂﬂF G
;
ﬂﬂG H
shortColorNames
‡‡ 
.
‡‡ 
Add
‡‡ 
(
‡‡  
$str
‡‡  (
.
‡‡( )
ToLower
‡‡) 0
(
‡‡0 1
)
‡‡1 2
,
‡‡2 3
$str
‡‡4 <
.
‡‡< =
ToLower
‡‡= D
(
‡‡D E
)
‡‡E F
)
‡‡F G
;
‡‡G H
shortColorNames
·· 
.
·· 
Add
·· 
(
··  
$str
··  (
.
··( )
ToLower
··) 0
(
··0 1
)
··1 2
,
··2 3
$str
··4 <
.
··< =
ToLower
··= D
(
··D E
)
··E F
)
··F G
;
··G H
shortColorNames
‚‚ 
.
‚‚ 
Add
‚‚ 
(
‚‚  
$str
‚‚  (
.
‚‚( )
ToLower
‚‚) 0
(
‚‚0 1
)
‚‚1 2
,
‚‚2 3
$str
‚‚4 :
.
‚‚: ;
ToLower
‚‚; B
(
‚‚B C
)
‚‚C D
)
‚‚D E
;
‚‚E F
shortColorNames
„„ 
.
„„ 
Add
„„ 
(
„„  
$str
„„  (
.
„„( )
ToLower
„„) 0
(
„„0 1
)
„„1 2
,
„„2 3
$str
„„4 9
.
„„9 :
ToLower
„„: A
(
„„A B
)
„„B C
)
„„C D
;
„„D E
shortColorNames
‰‰ 
.
‰‰ 
Add
‰‰ 
(
‰‰  
$str
‰‰  (
.
‰‰( )
ToLower
‰‰) 0
(
‰‰0 1
)
‰‰1 2
,
‰‰2 3
$str
‰‰4 :
.
‰‰: ;
ToLower
‰‰; B
(
‰‰B C
)
‰‰C D
)
‰‰D E
;
‰‰E F
shortColorNames
ÂÂ 
.
ÂÂ 
Add
ÂÂ 
(
ÂÂ  
$str
ÂÂ  (
.
ÂÂ( )
ToLower
ÂÂ) 0
(
ÂÂ0 1
)
ÂÂ1 2
,
ÂÂ2 3
$str
ÂÂ4 <
.
ÂÂ< =
ToLower
ÂÂ= D
(
ÂÂD E
)
ÂÂE F
)
ÂÂF G
;
ÂÂG H
shortColorNames
ÊÊ 
.
ÊÊ 
Add
ÊÊ 
(
ÊÊ  
$str
ÊÊ  (
.
ÊÊ( )
ToLower
ÊÊ) 0
(
ÊÊ0 1
)
ÊÊ1 2
,
ÊÊ2 3
$str
ÊÊ4 <
.
ÊÊ< =
ToLower
ÊÊ= D
(
ÊÊD E
)
ÊÊE F
)
ÊÊF G
;
ÊÊG H
shortColorNames
ÁÁ 
.
ÁÁ 
Add
ÁÁ 
(
ÁÁ  
$str
ÁÁ  (
.
ÁÁ( )
ToLower
ÁÁ) 0
(
ÁÁ0 1
)
ÁÁ1 2
,
ÁÁ2 3
$str
ÁÁ4 ;
.
ÁÁ; <
ToLower
ÁÁ< C
(
ÁÁC D
)
ÁÁD E
)
ÁÁE F
;
ÁÁF G
if
ÍÍ 
(
ÍÍ 
shortHexColors
ÍÍ 
.
ÍÍ 
Count
ÍÍ $
>
ÍÍ% &
$num
ÍÍ' (
)
ÍÍ( )
{
ÍÍ* +
return
ÍÍ, 2
;
ÍÍ2 3
}
ÍÍ4 5
shortHexColors
ÎÎ 
.
ÎÎ 
Add
ÎÎ 
(
ÎÎ 
$str
ÎÎ &
,
ÎÎ& '
$str
ÎÎ( .
)
ÎÎ. /
;
ÎÎ/ 0
shortHexColors
ÏÏ 
.
ÏÏ 
Add
ÏÏ 
(
ÏÏ 
$str
ÏÏ (
,
ÏÏ( )
$str
ÏÏ* 0
)
ÏÏ0 1
;
ÏÏ1 2
shortHexColors
ÌÌ 
.
ÌÌ 
Add
ÌÌ 
(
ÌÌ 
$str
ÌÌ /
,
ÌÌ/ 0
$str
ÌÌ1 7
)
ÌÌ7 8
;
ÌÌ8 9
shortHexColors
ÓÓ 
.
ÓÓ 
Add
ÓÓ 
(
ÓÓ 
$str
ÓÓ /
,
ÓÓ/ 0
$str
ÓÓ1 7
)
ÓÓ7 8
;
ÓÓ8 9
shortHexColors
ÔÔ 
.
ÔÔ 
Add
ÔÔ 
(
ÔÔ 
$str
ÔÔ (
,
ÔÔ( )
$str
ÔÔ* 0
)
ÔÔ0 1
;
ÔÔ1 2
shortHexColors
 
.
 
Add
 
(
 
$str
 &
,
& '
$str
( .
)
. /
;
/ 0
shortHexColors
ÒÒ 
.
ÒÒ 
Add
ÒÒ 
(
ÒÒ 
$str
ÒÒ '
,
ÒÒ' (
$str
ÒÒ) /
)
ÒÒ/ 0
;
ÒÒ0 1
}
ÚÚ 	
private
ÙÙ 
static
ÙÙ 
string
ÙÙ $
ShortHandAllProperties
ÙÙ 4
(
ÙÙ4 5
string
ÙÙ5 ;
css
ÙÙ< ?
)
ÙÙ? @
{
ıı 	
Regex
˙˙ 

reCSSBlock
˙˙ 
=
˙˙ 
new
˙˙ "
Regex
˙˙# (
(
˙˙( )
$str
˙˙) 3
)
˙˙3 4
;
˙˙4 5
Regex
˚˚ 
reTRBL1
˚˚ 
=
˚˚ 
new
˚˚ 
Regex
˚˚  %
(
˚˚% &
$str˚˚& ç
,˚˚ç é
RegexOptions˚˚è õ
.˚˚õ ú

IgnoreCase˚˚ú ¶
)˚˚¶ ß
;˚˚ß ®
Regex
¸¸ 
reTRBL2
¸¸ 
=
¸¸ 
new
¸¸ 
Regex
¸¸  %
(
¸¸% &
$str¸¸& å
,¸¸å ç
RegexOptions¸¸é ö
.¸¸ö õ

IgnoreCase¸¸õ •
)¸¸• ¶
;¸¸¶ ß
Regex
˝˝ 
reTRBL3
˝˝ 
=
˝˝ 
new
˝˝ 
Regex
˝˝  %
(
˝˝% &
$str˝˝& °
,˝˝° ¢
RegexOptions˝˝£ Ø
.˝˝Ø ∞

IgnoreCase˝˝∞ ∫
)˝˝∫ ª
;˝˝ª º
Regex
˛˛ 
reTRBL4
˛˛ 
=
˛˛ 
new
˛˛ 
Regex
˛˛  %
(
˛˛% &
$str˛˛& ‹
,˛˛‹ ›
RegexOptions˛˛ﬁ Í
.˛˛Í Î

IgnoreCase˛˛Î ı
)˛˛ı ˆ
;˛˛ˆ ˜
Regex
ˇˇ 
reTRBL5
ˇˇ 
=
ˇˇ 
new
ˇˇ 
Regex
ˇˇ  %
(
ˇˇ% &
$strˇˇ& †
,ˇˇ† °
RegexOptionsˇˇ¢ Æ
.ˇˇÆ Ø

IgnoreCaseˇˇØ π
)ˇˇπ ∫
;ˇˇ∫ ª
Regex
ÄÄ 
reListStyle
ÄÄ 
=
ÄÄ 
new
ÄÄ  #
Regex
ÄÄ$ )
(
ÄÄ) *
$str
ÄÄ* o
,
ÄÄo p
RegexOptions
ÄÄq }
.
ÄÄ} ~

IgnoreCaseÄÄ~ à
)ÄÄà â
;ÄÄâ ä
Regex
ÅÅ 
reFont
ÅÅ 
=
ÅÅ 
new
ÅÅ 
Regex
ÅÅ $
(
ÅÅ$ %
$strÅÖ% £
,ÖÖ£ §
(ÖÖ• ¶
RegexOptionsÖÖ¶ ≤
.ÖÖ≤ ≥

IgnoreCaseÖÖ≥ Ω
|ÖÖæ ø
RegexOptionsÖÖ¿ Ã
.ÖÖÃ Õ'
IgnorePatternWhitespaceÖÖÕ ‰
)ÖÖ‰ Â
)ÖÖÂ Ê
;ÖÖÊ Á
Regex
ÜÜ 
reBackGround
ÜÜ 
=
ÜÜ  
new
ÜÜ! $
Regex
ÜÜ% *
(
ÜÜ* +
$str
Üé+ 
,
éé 
(
éé 
RegexOptions
éé 
.
éé 

IgnoreCase
éé 
|
éé  
RegexOptions
éé! -
.
éé- .%
IgnorePatternWhitespace
éé. E
|
ééF G
RegexOptions
ééH T
.
ééT U
ExplicitCapture
ééU d
)
ééd e
)
éée f
;
ééf g
MatchCollection
èè 
mcBlocks
èè $
=
èè% &

reCSSBlock
èè' 1
.
èè1 2
Matches
èè2 9
(
èè9 :
css
èè: =
)
èè= >
;
èè> ?
foreach
êê 
(
êê 
Match
êê 
mBlock
êê !
in
êê" $
mcBlocks
êê% -
)
êê- .
{
ëë 
string
íí 
strBlock
íí 
=
íí  !
mBlock
íí" (
.
íí( )
Value
íí) .
;
íí. /
HasAllPositions
ìì 
(
ìì  
reTRBL1
ìì  '
,
ìì' (
ref
ìì) ,
strBlock
ìì- 5
)
ìì5 6
;
ìì6 7
HasAllPositions
îî 
(
îî  
reTRBL2
îî  '
,
îî' (
ref
îî) ,
strBlock
îî- 5
)
îî5 6
;
îî6 7
HasAllPositions
ïï 
(
ïï  
reTRBL3
ïï  '
,
ïï' (
ref
ïï) ,
strBlock
ïï- 5
)
ïï5 6
;
ïï6 7
HasAllPositions
ññ 
(
ññ  
reTRBL4
ññ  '
,
ññ' (
ref
ññ) ,
strBlock
ññ- 5
)
ññ5 6
;
ññ6 7
HasAllPositions
óó 
(
óó  
reTRBL5
óó  '
,
óó' (
ref
óó) ,
strBlock
óó- 5
)
óó5 6
;
óó6 7
HasAllListStyle
òò 
(
òò  
reListStyle
òò  +
,
òò+ ,
ref
òò- 0
strBlock
òò1 9
)
òò9 :
;
òò: ;"
HasAllFontProperties
ôô $
(
ôô$ %
reFont
ôô% +
,
ôô+ ,
ref
ôô- 0
strBlock
ôô1 9
)
ôô9 :
;
ôô: ;(
HasAllBackGroundProperties
öö *
(
öö* +
reBackGround
öö+ 7
,
öö7 8
ref
öö9 <
strBlock
öö= E
)
ööE F
;
ööF G
css
õõ 
=
õõ 
css
õõ 
.
õõ 
Replace
õõ !
(
õõ! "
mBlock
õõ" (
.
õõ( )
Value
õõ) .
,
õõ. /
strBlock
õõ0 8
)
õõ8 9
;
õõ9 :
}
úú 
return
ùù 
css
ùù 
;
ùù 
}
ûû 	
private
üü 
static
üü 
void
üü (
HasAllBackGroundProperties
üü 6
(
üü6 7
Regex
üü7 <
re
üü= ?
,
üü? @
ref
üüA D
string
üüE K
CSSText
üüL S
)
üüS T
{
†† 	
{
°° 
MatchCollection
¢¢ 
mcProperySet
¢¢  ,
=
¢¢- .
re
¢¢/ 1
.
¢¢1 2
Matches
¢¢2 9
(
¢¢9 :
CSSText
¢¢: A
)
¢¢A B
;
¢¢B C
int
££ 
z
££ 
=
££ 
$num
££ 
;
££ 
if
§§ 
(
§§ 
mcProperySet
§§  
.
§§  !
Count
§§! &
==
§§' )
z
§§* +
)
§§+ ,
{
•• 
int
ßß 
y
ßß 
=
ßß 
$num
ßß 
;
ßß 
for
®® 
(
®® 
int
®® 
x
®® 
=
®®  
$num
®®! "
;
®®" #
x
®®$ %
<
®®& '
z
®®( )
;
®®) *
x
®®+ ,
=
®®- .
x
®®/ 0
+
®®1 2
$num
®®3 4
)
®®4 5
{
©© 
switch
™™ 
(
™™  
mcProperySet
™™  ,
[
™™, -
x
™™- .
]
™™. /
.
™™/ 0
Groups
™™0 6
[
™™6 7
$str
™™7 A
]
™™A B
.
™™B C
Value
™™C H
)
™™H I
{
´´ 
case
¨¨  
$str
¨¨! (
:
¨¨( )
y
≠≠  !
=
≠≠" #
y
≠≠$ %
+
≠≠& '
$num
≠≠( )
;
≠≠) *
break
ÆÆ  %
;
ÆÆ% &
case
ØØ  
$str
ØØ! (
:
ØØ( )
y
∞∞  !
=
∞∞" #
y
∞∞$ %
+
∞∞& '
$num
∞∞( )
;
∞∞) *
break
±±  %
;
±±% &
case
≤≤  
$str
≤≤! )
:
≤≤) *
y
≥≥  !
=
≥≥" #
y
≥≥$ %
+
≥≥& '
$num
≥≥( )
;
≥≥) *
break
¥¥  %
;
¥¥% &
case
µµ  
$str
µµ! -
:
µµ- .
y
∂∂  !
=
∂∂" #
y
∂∂$ %
+
∂∂& '
$num
∂∂( )
;
∂∂) *
break
∑∑  %
;
∑∑% &
case
∏∏  
$str
∏∏! +
:
∏∏+ ,
y
ππ  !
=
ππ" #
y
ππ$ %
+
ππ& '
$num
ππ( *
;
ππ* +
break
∫∫  %
;
∫∫% &
}
ªª 
}
ºº 
if
ΩΩ 
(
ΩΩ 
y
ΩΩ 
==
ΩΩ 
$num
ΩΩ 
)
ΩΩ  
{
ææ 
CSSText
øø 
=
øø  !*
ShortHandBackGroundReplaceV2
øø" >
(
øø> ?
mcProperySet
øø? K
,
øøK L
re
øøM O
,
øøO P
CSSText
øøQ X
)
øøX Y
;
øøY Z
}
¿¿ 
}
¡¡ 
}
¬¬ 
}
√√ 	
private
ƒƒ 
static
ƒƒ 
void
ƒƒ "
HasAllFontProperties
ƒƒ 0
(
ƒƒ0 1
Regex
ƒƒ1 6
re
ƒƒ7 9
,
ƒƒ9 :
ref
ƒƒ; >
string
ƒƒ? E
CSSText
ƒƒF M
)
ƒƒM N
{
≈≈ 	
{
∆∆ 
MatchCollection
«« 
mcProperySet
««  ,
=
««- .
re
««/ 1
.
««1 2
Matches
««2 9
(
««9 :
CSSText
««: A
)
««A B
;
««B C
int
»» 
z
»» 
=
»» 
$num
»» 
;
»» 
if
…… 
(
…… 
mcProperySet
……  
.
……  !
Count
……! &
==
……' )
z
……* +
)
……+ ,
{
   
int
ÃÃ 
y
ÃÃ 
=
ÃÃ 
$num
ÃÃ 
;
ÃÃ 
for
ÕÕ 
(
ÕÕ 
int
ÕÕ 
x
ÕÕ 
=
ÕÕ  
$num
ÕÕ! "
;
ÕÕ" #
x
ÕÕ$ %
<
ÕÕ& '
z
ÕÕ( )
;
ÕÕ) *
x
ÕÕ+ ,
=
ÕÕ- .
x
ÕÕ/ 0
+
ÕÕ1 2
$num
ÕÕ3 4
)
ÕÕ4 5
{
ŒŒ 
switch
œœ 
(
œœ  
mcProperySet
œœ  ,
[
œœ, -
x
œœ- .
]
œœ. /
.
œœ/ 0
Groups
œœ0 6
[
œœ6 7
$str
œœ7 E
]
œœE F
.
œœF G
Value
œœG L
)
œœL M
{
–– 
case
——  
$str
——! (
:
——( )
y
““  !
=
““" #
y
““$ %
+
““& '
$num
““( )
;
““) *
break
””  %
;
””% &
case
‘‘  
$str
‘‘! *
:
‘‘* +
y
’’  !
=
’’" #
y
’’$ %
+
’’& '
$num
’’( )
;
’’) *
break
÷÷  %
;
÷÷% &
case
◊◊  
$str
◊◊! )
:
◊◊) *
y
ÿÿ  !
=
ÿÿ" #
y
ÿÿ$ %
+
ÿÿ& '
$num
ÿÿ( )
;
ÿÿ) *
break
ŸŸ  %
;
ŸŸ% &
case
⁄⁄  
$str
⁄⁄! '
:
⁄⁄' (
y
€€  !
=
€€" #
y
€€$ %
+
€€& '
$num
€€( )
;
€€) *
break
‹‹  %
;
‹‹% &
case
››  
$str
››! )
:
››) *
y
ﬁﬁ  !
=
ﬁﬁ" #
y
ﬁﬁ$ %
+
ﬁﬁ& '
$num
ﬁﬁ( *
;
ﬁﬁ* +
break
ﬂﬂ  %
;
ﬂﬂ% &
}
‡‡ 
}
·· 
if
‚‚ 
(
‚‚ 
y
‚‚ 
==
‚‚ 
$num
‚‚ 
)
‚‚  
{
„„ 
CSSText
‰‰ 
=
‰‰  !$
ShortHandFontReplaceV2
‰‰" 8
(
‰‰8 9
mcProperySet
‰‰9 E
,
‰‰E F
re
‰‰G I
,
‰‰I J
CSSText
‰‰K R
)
‰‰R S
;
‰‰S T
}
ÂÂ 
}
ÊÊ 
}
ÁÁ 
}
ËË 	
private
ÈÈ 
static
ÈÈ 
void
ÈÈ 
HasAllListStyle
ÈÈ +
(
ÈÈ+ ,
Regex
ÈÈ, 1
re
ÈÈ2 4
,
ÈÈ4 5
ref
ÈÈ6 9
string
ÈÈ: @
CSSText
ÈÈA H
)
ÈÈH I
{
ÍÍ 	
{
ÎÎ 
int
ÏÏ 
z
ÏÏ 
=
ÏÏ 
$num
ÏÏ 
;
ÏÏ 
MatchCollection
ÌÌ 
mcProperySet
ÌÌ  ,
=
ÌÌ- .
re
ÌÌ/ 1
.
ÌÌ1 2
Matches
ÌÌ2 9
(
ÌÌ9 :
CSSText
ÌÌ: A
)
ÌÌA B
;
ÌÌB C
if
ÓÓ 
(
ÓÓ 
mcProperySet
ÓÓ  
.
ÓÓ  !
Count
ÓÓ! &
==
ÓÓ' )
z
ÓÓ* +
)
ÓÓ+ ,
{
ÔÔ 
int
ÒÒ 
y
ÒÒ 
=
ÒÒ 
$num
ÒÒ 
;
ÒÒ 
for
ÚÚ 
(
ÚÚ 
int
ÚÚ 
x
ÚÚ 
=
ÚÚ  
$num
ÚÚ! "
;
ÚÚ" #
x
ÚÚ$ %
<
ÚÚ& '
z
ÚÚ( )
;
ÚÚ) *
x
ÚÚ+ ,
=
ÚÚ- .
x
ÚÚ/ 0
+
ÚÚ1 2
$num
ÚÚ3 4
)
ÚÚ4 5
{
ÛÛ 
switch
ÙÙ 
(
ÙÙ  
mcProperySet
ÙÙ  ,
[
ÙÙ, -
x
ÙÙ- .
]
ÙÙ. /
.
ÙÙ/ 0
Groups
ÙÙ0 6
[
ÙÙ6 7
$str
ÙÙ7 >
]
ÙÙ> ?
.
ÙÙ? @
Value
ÙÙ@ E
)
ÙÙE F
{
ıı 
case
ˆˆ  
$str
ˆˆ! '
:
ˆˆ' (
y
˜˜  !
=
˜˜" #
y
˜˜$ %
+
˜˜& '
$num
˜˜( )
;
˜˜) *
break
¯¯  %
;
¯¯% &
case
˘˘  
$str
˘˘! (
:
˘˘( )
y
˙˙  !
=
˙˙" #
y
˙˙$ %
+
˙˙& '
$num
˙˙( )
;
˙˙) *
break
˚˚  %
;
˚˚% &
case
¸¸  
$str
¸¸! +
:
¸¸+ ,
y
˝˝  !
=
˝˝" #
y
˝˝$ %
+
˝˝& '
$num
˝˝( )
;
˝˝) *
break
˛˛  %
;
˛˛% &
}
ÄÄ 
}
ÅÅ 
if
ÇÇ 
(
ÇÇ 
y
ÇÇ 
==
ÇÇ 
$num
ÇÇ 
)
ÇÇ 
{
ÉÉ 
CSSText
ÑÑ 
=
ÑÑ  !$
ShortHandListReplaceV2
ÑÑ" 8
(
ÑÑ8 9
mcProperySet
ÑÑ9 E
,
ÑÑE F
re
ÑÑG I
,
ÑÑI J
CSSText
ÑÑK R
)
ÑÑR S
;
ÑÑS T
}
ÖÖ 
}
ÜÜ 
}
áá 
}
àà 	
private
ââ 
static
ââ 
void
ââ 
HasAllPositions
ââ +
(
ââ+ ,
Regex
ââ, 1
re
ââ2 4
,
ââ4 5
ref
ââ6 9
string
ââ: @
CSSText
ââA H
)
ââH I
{
ää 	
{
ãã 
MatchCollection
åå 
mcProperySet
åå  ,
=
åå- .
re
åå/ 1
.
åå1 2
Matches
åå2 9
(
åå9 :
CSSText
åå: A
)
ååA B
;
ååB C
if
çç 
(
çç 
mcProperySet
çç  
.
çç  !
Count
çç! &
==
çç' )
$num
çç* +
)
çç+ ,
{
éé 
int
êê 
y
êê 
=
êê 
$num
êê 
;
êê 
for
ëë 
(
ëë 
int
ëë 
x
ëë 
=
ëë  
$num
ëë! "
;
ëë" #
x
ëë$ %
<
ëë& '
$num
ëë( )
;
ëë) *
x
ëë+ ,
=
ëë- .
x
ëë/ 0
+
ëë1 2
$num
ëë3 4
)
ëë4 5
{
íí 
switch
ìì 
(
ìì  
mcProperySet
ìì  ,
[
ìì, -
x
ìì- .
]
ìì. /
.
ìì/ 0
Groups
ìì0 6
[
ìì6 7
$str
ìì7 A
]
ììA B
.
ììB C
Value
ììC H
)
ììH I
{
îî 
case
ïï  
$str
ïï! &
:
ïï& '
y
ññ  !
=
ññ" #
y
ññ$ %
+
ññ& '
$num
ññ( )
;
ññ) *
break
óó  %
;
óó% &
case
òò  
$str
òò! (
:
òò( )
y
ôô  !
=
ôô" #
y
ôô$ %
+
ôô& '
$num
ôô( )
;
ôô) *
break
öö  %
;
öö% &
case
õõ  
$str
õõ! )
:
õõ) *
y
úú  !
=
úú" #
y
úú$ %
+
úú& '
$num
úú( )
;
úú) *
break
ùù  %
;
ùù% &
case
ûû  
$str
ûû! '
:
ûû' (
y
üü  !
=
üü" #
y
üü$ %
+
üü& '
$num
üü( )
;
üü) *
break
††  %
;
††% &
}
°° 
}
¢¢ 
if
££ 
(
££ 
y
££ 
==
££ 
$num
££ 
)
££  
{
§§ 
CSSText
•• 
=
••  ! 
ShortHandReplaceV2
••" 4
(
••4 5
mcProperySet
••5 A
,
••A B
re
••C E
,
••E F
CSSText
••G N
)
••N O
;
••O P
}
¶¶ 
}
ßß 
}
®® 
}
©© 	
private
™™ 
static
™™ 
string
™™ $
ShortHandFontReplaceV2
™™ 4
(
™™4 5
MatchCollection
™™5 D
mcProperySet
™™E Q
,
™™Q R
Regex
™™S X
re
™™Y [
,
™™[ \
string
™™] c
	InputText
™™d m
)
™™m n
{
´´ 	
string
ØØ 
	strFamily
ØØ 
,
ØØ 
strStyle
ØØ &
,
ØØ& '

strVariant
ØØ( 2
,
ØØ2 3
	strWeight
ØØ4 =
,
ØØ= >
strSize
ØØ? F
;
ØØF G
Regex
∞∞ 
reLineHeight
∞∞ 
=
∞∞  
new
∞∞! $
Regex
∞∞% *
(
∞∞* +
$str∞∞+ Ü
,∞∞Ü á
RegexOptions∞∞à î
.∞∞î ï

IgnoreCase∞∞ï ü
)∞∞ü †
;∞∞† °
	strFamily
±± 
=
±± 
string
±± 
.
±± 
Empty
±± $
;
±±$ %
strStyle
≤≤ 
=
≤≤ 
string
≤≤ 
.
≤≤ 
Empty
≤≤ #
;
≤≤# $

strVariant
≥≥ 
=
≥≥ 
string
≥≥ 
.
≥≥  
Empty
≥≥  %
;
≥≥% &
	strWeight
¥¥ 
=
¥¥ 
string
¥¥ 
.
¥¥ 
Empty
¥¥ $
;
¥¥$ %
strSize
µµ 
=
µµ 
string
µµ 
.
µµ 
Empty
µµ "
;
µµ" #
string
∂∂ %
strStyle_Variant_Weight
∂∂ *
=
∂∂+ ,
string
∂∂- 3
.
∂∂3 4
Empty
∂∂4 9
;
∂∂9 :
foreach
∑∑ 
(
∑∑ 
Match
∑∑ 
	mProperty
∑∑ $
in
∑∑% '
mcProperySet
∑∑( 4
)
∑∑4 5
{
∏∏ 
switch
ππ 
(
ππ 
	mProperty
ππ !
.
ππ! "
Groups
ππ" (
[
ππ( )
$str
ππ) +
]
ππ+ ,
.
ππ, -
Value
ππ- 2
)
ππ2 3
{
∫∫ 
case
ªª 
$str
ªª !
:
ªª! "
	strFamily
ºº !
=
ºº" #
string
ºº$ *
.
ºº* +
Format
ºº+ 1
(
ºº1 2
$str
ºº2 8
,
ºº8 9
	mProperty
ºº: C
.
ººC D
Groups
ººD J
[
ººJ K
$str
ººK ^
]
ºº^ _
.
ºº_ `
Value
ºº` e
)
ººe f
;
ººf g
break
ΩΩ 
;
ΩΩ 
case
ææ 
$str
ææ 
:
ææ  
if
øø 
(
øø 
reLineHeight
øø (
.
øø( )
IsMatch
øø) 0
(
øø0 1
	InputText
øø1 :
)
øø: ;
)
øø; <
{
¿¿ 
Match
¡¡ !
m
¡¡" #
=
¡¡$ %
reLineHeight
¡¡& 2
.
¡¡2 3
Match
¡¡3 8
(
¡¡8 9
	InputText
¡¡9 B
)
¡¡B C
;
¡¡C D
if
¬¬ 
(
¬¬  
m
¬¬  !
.
¬¬! "
Groups
¬¬" (
[
¬¬( )
$num
¬¬) *
]
¬¬* +
.
¬¬+ ,
Value
¬¬, 1
!=
¬¬2 4
$str
¬¬5 =
)
¬¬= >
{
√√ 
strSize
ƒƒ  '
=
ƒƒ( )
String
ƒƒ* 0
.
ƒƒ0 1
Format
ƒƒ1 7
(
ƒƒ7 8
$str
ƒƒ8 >
,
ƒƒ> ?
m
ƒƒ@ A
.
ƒƒA B
Groups
ƒƒB H
[
ƒƒH I
$num
ƒƒI J
]
ƒƒJ K
.
ƒƒK L
Value
ƒƒL Q
)
ƒƒQ R
;
ƒƒR S
}
≈≈ 
	InputText
∆∆ %
=
∆∆& '
reLineHeight
∆∆( 4
.
∆∆4 5
Replace
∆∆5 <
(
∆∆< =
	InputText
∆∆= F
,
∆∆F G
string
∆∆H N
.
∆∆N O
Empty
∆∆O T
)
∆∆T U
;
∆∆U V
}
«« 
strSize
»» 
=
»»  !
string
»»" (
.
»»( )
Format
»») /
(
»»/ 0
$str
»»0 9
,
»»9 :
	mProperty
»»; D
.
»»D E
Groups
»»E K
[
»»K L
$str
»»L _
]
»»_ `
.
»»` a
Value
»»a f
,
»»f g
strSize
»»h o
)
»»o p
;
»»p q
if
…… 
(
…… 
strSize
…… #
==
……$ &
$str
……' /
)
……/ 0
{
   
strSize
ÀÀ #
=
ÀÀ$ %
string
ÀÀ& ,
.
ÀÀ, -
Empty
ÀÀ- 2
;
ÀÀ2 3
}
ÃÃ 
break
ÕÕ 
;
ÕÕ 
case
ŒŒ 
$str
ŒŒ  
:
ŒŒ  !
case
œœ 
$str
œœ "
:
œœ" #
case
–– 
$str
–– !
:
––! "
if
—— 
(
—— 
	mProperty
—— %
.
——% &
Groups
——& ,
[
——, -
$str
——- @
]
——@ A
.
——A B
Value
——B G
!=
——H J
$str
——K S
)
——S T
{
““ %
strStyle_Variant_Weight
”” 3
+=
””4 6
string
””7 =
.
””= >
Format
””> D
(
””D E
$str
””E K
,
””K L
	mProperty
””M V
.
””V W
Groups
””W ]
[
””] ^
$str
””^ q
]
””q r
.
””r s
Value
””s x
)
””x y
;
””y z
}
‘‘ 
break
‘‘ 
;
‘‘  
}
÷÷ 
}
◊◊ 
string
ŸŸ 
strShortcut
ŸŸ 
;
ŸŸ 
string
⁄⁄ 
strProperties
⁄⁄  
=
⁄⁄! "
string
⁄⁄# )
.
⁄⁄) *
Format
⁄⁄* 0
(
⁄⁄0 1
$str
⁄⁄1 =
,
⁄⁄= >%
strStyle_Variant_Weight
⁄⁄? V
,
⁄⁄V W

strVariant
⁄⁄X b
,
⁄⁄b c
	strWeight
⁄⁄d m
,
⁄⁄m n
strSize
⁄⁄o v
,
⁄⁄v w
	strFamily⁄⁄x Å
)⁄⁄Å Ç
;⁄⁄Ç É
strShortcut
€€ 
=
€€ 
string
€€  
.
€€  !
Format
€€! '
(
€€' (
$str
€€( 2
,
€€2 3
strProperties
€€4 A
.
€€A B
Trim
€€B F
(
€€F G
)
€€G H
)
€€H I
;
€€I J
string
‹‹ 
strNewBlock
‹‹ 
=
‹‹  
re
‹‹! #
.
‹‹# $
Replace
‹‹$ +
(
‹‹+ ,
	InputText
‹‹, 5
,
‹‹5 6
$str
‹‹7 9
)
‹‹9 :
;
‹‹: ;
strNewBlock
›› 
=
›› 
strNewBlock
›› %
.
››% &
Insert
››& ,
(
››, -
$num
››- .
,
››. /
strShortcut
››0 ;
)
››; <
;
››< =
return
ﬁﬁ 
strNewBlock
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 	
private
‡‡ 
static
‡‡ 
string
‡‡ *
ShortHandBackGroundReplaceV2
‡‡ :
(
‡‡: ;
MatchCollection
‡‡; J
mcProperySet
‡‡K W
,
‡‡W X
Regex
‡‡Y ^
re
‡‡_ a
,
‡‡a b
string
‡‡c i
	InputText
‡‡j s
)
‡‡s t
{
·· 	
string
ÂÂ 
strColor
ÂÂ 
,
ÂÂ 
strImage
ÂÂ %
,
ÂÂ% &
	strRepeat
ÂÂ' 0
,
ÂÂ0 1
strAttachment
ÂÂ2 ?
,
ÂÂ? @
strPosition
ÂÂA L
;
ÂÂL M
strColor
ÊÊ 
=
ÊÊ 
string
ÊÊ 
.
ÊÊ 
Empty
ÊÊ #
;
ÊÊ# $
strImage
ÁÁ 
=
ÁÁ 
string
ÁÁ 
.
ÁÁ 
Empty
ÁÁ #
;
ÁÁ# $
	strRepeat
ËË 
=
ËË 
string
ËË 
.
ËË 
Empty
ËË $
;
ËË$ %
strAttachment
ÈÈ 
=
ÈÈ 
string
ÈÈ "
.
ÈÈ" #
Empty
ÈÈ# (
;
ÈÈ( )
strPosition
ÍÍ 
=
ÍÍ 
string
ÍÍ  
.
ÍÍ  !
Empty
ÍÍ! &
;
ÍÍ& '
foreach
ÎÎ 
(
ÎÎ 
Match
ÎÎ 
	mProperty
ÎÎ $
in
ÎÎ% '
mcProperySet
ÎÎ( 4
)
ÎÎ4 5
{
ÏÏ 
switch
ÌÌ 
(
ÌÌ 
	mProperty
ÌÌ !
.
ÌÌ! "
Groups
ÌÌ" (
[
ÌÌ( )
$str
ÌÌ) 3
]
ÌÌ3 4
.
ÌÌ4 5
Value
ÌÌ5 :
)
ÌÌ: ;
{
ÓÓ 
case
ÔÔ 
$str
ÔÔ  
:
ÔÔ  !
if
 
(
 
	mProperty
 %
.
% &
Groups
& ,
[
, -
$str
- 3
]
3 4
.
4 5
Value
5 :
!=
; =
$str
> K
)
K L
{
ÒÒ 
strColor
ÚÚ $
=
ÚÚ% &
string
ÚÚ' -
.
ÚÚ- .
Format
ÚÚ. 4
(
ÚÚ4 5
$str
ÚÚ5 ;
,
ÚÚ; <
	mProperty
ÚÚ= F
.
ÚÚF G
Groups
ÚÚG M
[
ÚÚM N
$str
ÚÚN T
]
ÚÚT U
.
ÚÚU V
Value
ÚÚV [
)
ÚÚ[ \
;
ÚÚ\ ]
}
ÛÛ 
break
ÙÙ 
;
ÙÙ 
case
ıı 
$str
ıı  
:
ıı  !
if
ˆˆ 
(
ˆˆ 
	mProperty
ˆˆ %
.
ˆˆ% &
Groups
ˆˆ& ,
[
ˆˆ, -
$str
ˆˆ- 3
]
ˆˆ3 4
.
ˆˆ4 5
Value
ˆˆ5 :
!=
ˆˆ; =
$str
ˆˆ> D
)
ˆˆD E
{
˜˜ 
strImage
¯¯ $
=
¯¯% &
string
¯¯' -
.
¯¯- .
Format
¯¯. 4
(
¯¯4 5
$str
¯¯5 ;
,
¯¯; <
	mProperty
¯¯= F
.
¯¯F G
Groups
¯¯G M
[
¯¯M N
$str
¯¯N T
]
¯¯T U
.
¯¯U V
Value
¯¯V [
)
¯¯[ \
;
¯¯\ ]
}
˘˘ 
break
˙˙ 
;
˙˙ 
case
˚˚ 
$str
˚˚ !
:
˚˚! "
if
¸¸ 
(
¸¸ 
	mProperty
¸¸ %
.
¸¸% &
Groups
¸¸& ,
[
¸¸, -
$str
¸¸- 3
]
¸¸3 4
.
¸¸4 5
Value
¸¸5 :
!=
¸¸; =
$str
¸¸> F
)
¸¸F G
{
˝˝ 
	strRepeat
˛˛ %
=
˛˛& '
string
˛˛( .
.
˛˛. /
Format
˛˛/ 5
(
˛˛5 6
$str
˛˛6 <
,
˛˛< =
	mProperty
˛˛> G
.
˛˛G H
Groups
˛˛H N
[
˛˛N O
$str
˛˛O U
]
˛˛U V
.
˛˛V W
Value
˛˛W \
)
˛˛\ ]
;
˛˛] ^
}
ˇˇ 
break
ˇˇ 
;
ˇˇ  
case
ÄÄ 
$str
ÄÄ %
:
ÄÄ% &
if
ÅÅ 
(
ÅÅ 
	mProperty
ÅÅ %
.
ÅÅ% &
Groups
ÅÅ& ,
[
ÅÅ, -
$str
ÅÅ- 3
]
ÅÅ3 4
.
ÅÅ4 5
Value
ÅÅ5 :
!=
ÅÅ; =
$str
ÅÅ> F
)
ÅÅF G
{
ÇÇ 
strAttachment
ÉÉ )
=
ÉÉ* +
string
ÉÉ, 2
.
ÉÉ2 3
Format
ÉÉ3 9
(
ÉÉ9 :
$str
ÉÉ: @
,
ÉÉ@ A
	mProperty
ÉÉB K
.
ÉÉK L
Groups
ÉÉL R
[
ÉÉR S
$str
ÉÉS Y
]
ÉÉY Z
.
ÉÉZ [
Value
ÉÉ[ `
)
ÉÉ` a
;
ÉÉa b
}
ÑÑ 
break
ÖÖ 
;
ÖÖ 
case
ÜÜ 
$str
ÜÜ #
:
ÜÜ# $
if
áá 
(
áá 
	mProperty
áá %
.
áá% &
Groups
áá& ,
[
áá, -
$str
áá- 3
]
áá3 4
.
áá4 5
Value
áá5 :
!=
áá; =
$str
áá> E
)
ááE F
{
àà 
strPosition
ââ '
=
ââ( )
string
ââ* 0
.
ââ0 1
Format
ââ1 7
(
ââ7 8
$str
ââ8 >
,
ââ> ?
	mProperty
ââ@ I
.
ââI J
Groups
ââJ P
[
ââP Q
$str
ââQ W
]
ââW X
.
ââX Y
Value
ââY ^
)
ââ^ _
;
ââ_ `
}
ää 
break
ãã 
;
ãã 
}
åå 
}
çç 
string
èè 
strShortcut
èè 
;
èè 
string
êê 
strProperties
êê  
=
êê! "
string
êê# )
.
êê) *
Format
êê* 0
(
êê0 1
$str
êê1 C
,
êêC D
strColor
êêE M
,
êêM N
strImage
êêO W
,
êêW X
	strRepeat
êêY b
,
êêb c
strAttachment
êêd q
,
êêq r
strPosition
êês ~
)
êê~ 
;êê Ä
strShortcut
ëë 
=
ëë 
string
ëë  
.
ëë  !
Format
ëë! '
(
ëë' (
$str
ëë( 8
,
ëë8 9
strProperties
ëë: G
.
ëëG H
Trim
ëëH L
(
ëëL M
)
ëëM N
)
ëëN O
;
ëëO P
string
íí 
strNewBlock
íí 
=
íí  
re
íí! #
.
íí# $
Replace
íí$ +
(
íí+ ,
	InputText
íí, 5
,
íí5 6
$str
íí7 9
)
íí9 :
;
íí: ;
strNewBlock
ìì 
=
ìì 
strNewBlock
ìì %
.
ìì% &
Insert
ìì& ,
(
ìì, -
$num
ìì- .
,
ìì. /
strShortcut
ìì0 ;
)
ìì; <
;
ìì< =
return
îî 
strNewBlock
îî 
;
îî 
}
ïï 	
private
ññ 
static
ññ 
string
ññ  
ShortHandReplaceV2
ññ 0
(
ññ0 1
MatchCollection
ññ1 @
mcProperySet
ññA M
,
ññM N
Regex
ññO T
reTRBL1
ññU \
,
ññ\ ]
string
ññ^ d
	InputText
ññe n
)
ññn o
{
óó 	
string
ôô 
strTop
ôô 
,
ôô 
strRight
ôô #
,
ôô# $
	strBottom
ôô% .
,
ôô. /
strLeft
ôô0 7
;
ôô7 8
strTop
öö 
=
öö 
string
öö 
.
öö 
Empty
öö !
;
öö! "
strRight
õõ 
=
õõ 
string
õõ 
.
õõ 
Empty
õõ #
;
õõ# $
	strBottom
úú 
=
úú 
string
úú 
.
úú 
Empty
úú $
;
úú$ %
strLeft
ùù 
=
ùù 
string
ùù 
.
ùù 
Empty
ùù "
;
ùù" #
string
ûû 
strProperty
ûû 
;
ûû 
strProperty
üü 
=
üü 
string
üü  
.
üü  !
Format
üü! '
(
üü' (
$str
üü( 0
,
üü0 1
mcProperySet
üü2 >
[
üü> ?
$num
üü? @
]
üü@ A
.
üüA B
Groups
üüB H
[
üüH I
$str
üüI S
]
üüS T
.
üüT U
Value
üüU Z
,
üüZ [
mcProperySet
üü\ h
[
üüh i
$num
üüi j
]
üüj k
.
üük l
Groups
üül r
[
üür s
$str
üüs ~
]
üü~ 
.üü Ä
ValueüüÄ Ö
)üüÖ Ü
;üüÜ á
foreach
†† 
(
†† 
Match
†† 
	mProperty
†† $
in
††% '
mcProperySet
††( 4
)
††4 5
{
°° 
switch
¢¢ 
(
¢¢ 
	mProperty
¢¢ !
.
¢¢! "
Groups
¢¢" (
[
¢¢( )
$str
¢¢) 3
]
¢¢3 4
.
¢¢4 5
Value
¢¢5 :
)
¢¢: ;
{
££ 
case
§§ 
$str
§§ 
:
§§ 
strTop
•• 
=
••  
	mProperty
••! *
.
••* +
Groups
••+ 1
[
••1 2
$str
••2 8
]
••8 9
.
••9 :
Value
••: ?
;
••? @
break
¶¶ 
;
¶¶ 
case
ßß 
$str
ßß  
:
ßß  !
strRight
®®  
=
®®! "
	mProperty
®®# ,
.
®®, -
Groups
®®- 3
[
®®3 4
$str
®®4 :
]
®®: ;
.
®®; <
Value
®®< A
;
®®A B
break
©© 
;
©© 
case
™™ 
$str
™™ !
:
™™! "
	strBottom
´´ !
=
´´" #
	mProperty
´´$ -
.
´´- .
Groups
´´. 4
[
´´4 5
$str
´´5 ;
]
´´; <
.
´´< =
Value
´´= B
;
´´B C
break
¨¨ 
;
¨¨ 
case
≠≠ 
$str
≠≠ 
:
≠≠  
strLeft
ÆÆ 
=
ÆÆ  !
	mProperty
ÆÆ" +
.
ÆÆ+ ,
Groups
ÆÆ, 2
[
ÆÆ2 3
$str
ÆÆ3 9
]
ÆÆ9 :
.
ÆÆ: ;
Value
ÆÆ; @
;
ÆÆ@ A
break
ØØ 
;
ØØ 
}
∞∞ 
}
≤≤ 
string
¥¥ 
strShortcut
¥¥ 
=
¥¥  
string
¥¥! '
.
¥¥' (
Format
¥¥( .
(
¥¥. /
$str
¥¥/ E
,
¥¥E F
strProperty
¥¥G R
,
¥¥R S
strTop
¥¥T Z
,
¥¥Z [
strRight
¥¥\ d
,
¥¥d e
	strBottom
¥¥f o
,
¥¥o p
strLeft
¥¥q x
)
¥¥x y
;
¥¥y z
string
µµ 
strNewBlock
µµ 
=
µµ  
reTRBL1
µµ! (
.
µµ( )
Replace
µµ) 0
(
µµ0 1
	InputText
µµ1 :
,
µµ: ;
$str
µµ< >
)
µµ> ?
;
µµ? @
strNewBlock
∂∂ 
=
∂∂ 
strNewBlock
∂∂ %
.
∂∂% &
Insert
∂∂& ,
(
∂∂, -
$num
∂∂- .
,
∂∂. /
strShortcut
∂∂0 ;
)
∂∂; <
;
∂∂< =
return
∑∑ 
strNewBlock
∑∑ 
;
∑∑ 
}
∏∏ 	
private
ππ 
static
ππ 
string
ππ $
ShortHandListReplaceV2
ππ 4
(
ππ4 5
MatchCollection
ππ5 D
mcProperySet
ππE Q
,
ππQ R
Regex
ππS X
re
ππY [
,
ππ[ \
string
ππ] c
	InputText
ππd m
)
ππm n
{
∫∫ 	
string
ææ 
strType
ææ 
,
ææ 
strPosition
ææ '
,
ææ' (
strImage
ææ) 1
;
ææ1 2
strType
øø 
=
øø 
string
øø 
.
øø 
Empty
øø "
;
øø" #
strPosition
¿¿ 
=
¿¿ 
string
¿¿  
.
¿¿  !
Empty
¿¿! &
;
¿¿& '
strImage
¡¡ 
=
¡¡ 
string
¡¡ 
.
¡¡ 
Empty
¡¡ #
;
¡¡# $
foreach
¬¬ 
(
¬¬ 
Match
¬¬ 
	mProperty
¬¬ $
in
¬¬% '
mcProperySet
¬¬( 4
)
¬¬4 5
{
√√ 
switch
ƒƒ 
(
ƒƒ 
	mProperty
ƒƒ !
.
ƒƒ! "
Groups
ƒƒ" (
[
ƒƒ( )
$str
ƒƒ) 0
]
ƒƒ0 1
.
ƒƒ1 2
Value
ƒƒ2 7
)
ƒƒ7 8
{
≈≈ 
case
∆∆ 
$str
∆∆ 
:
∆∆  
if
«« 
(
«« 
	mProperty
«« %
.
««% &
Groups
««& ,
[
««, -
$str
««- 3
]
««3 4
.
««4 5
Value
««5 :
!=
««; =
$str
««> D
)
««D E
{
»» 
strType
…… #
=
……$ %
	mProperty
……& /
.
……/ 0
Groups
……0 6
[
……6 7
$str
……7 =
]
……= >
.
……> ?
Value
……? D
;
……D E
}
   
break
ÀÀ 
;
ÀÀ 
case
ÃÃ 
$str
ÃÃ #
:
ÃÃ# $
if
ÕÕ 
(
ÕÕ 
	mProperty
ÕÕ %
.
ÕÕ% &
Groups
ÕÕ& ,
[
ÕÕ, -
$str
ÕÕ- 3
]
ÕÕ3 4
.
ÕÕ4 5
Value
ÕÕ5 :
!=
ÕÕ; =
$str
ÕÕ> G
)
ÕÕG H
{
ŒŒ 
strPosition
œœ '
=
œœ( )
string
œœ* 0
.
œœ0 1
Format
œœ1 7
(
œœ7 8
$str
œœ8 >
,
œœ> ?
	mProperty
œœ@ I
.
œœI J
Groups
œœJ P
[
œœP Q
$str
œœQ W
]
œœW X
.
œœX Y
Value
œœY ^
)
œœ^ _
;
œœ_ `
}
–– 
break
—— 
;
—— 
case
““ 
$str
““  
:
““  !
if
”” 
(
”” 
	mProperty
”” %
.
””% &
Groups
””& ,
[
””, -
$str
””- 3
]
””3 4
.
””4 5
Value
””5 :
!=
””; =
$str
””> D
)
””D E
{
‘‘ 
strImage
’’ $
=
’’% &
string
’’' -
.
’’- .
Format
’’. 4
(
’’4 5
$str
’’5 ;
,
’’; <
	mProperty
’’= F
.
’’F G
Groups
’’G M
[
’’M N
$str
’’N T
]
’’T U
.
’’U V
Value
’’V [
)
’’[ \
;
’’\ ]
}
÷÷ 
break
◊◊ 
;
◊◊ 
}
ÿÿ 
}
⁄⁄ 
string
‹‹ 
strShortcut
‹‹ 
=
‹‹  
string
‹‹! '
.
‹‹' (
Format
‹‹( .
(
‹‹. /
$str
‹‹/ F
,
‹‹F G
strType
‹‹H O
,
‹‹O P
strPosition
‹‹Q \
,
‹‹\ ]
strImage
‹‹^ f
)
‹‹f g
;
‹‹g h
string
›› 
strNewBlock
›› 
=
››  
re
››! #
.
››# $
Replace
››$ +
(
››+ ,
	InputText
››, 5
,
››5 6
$str
››7 9
)
››9 :
;
››: ;
strNewBlock
ﬁﬁ 
=
ﬁﬁ 
strNewBlock
ﬁﬁ %
.
ﬁﬁ% &
Insert
ﬁﬁ& ,
(
ﬁﬁ, -
$num
ﬁﬁ- .
,
ﬁﬁ. /
strShortcut
ﬁﬁ0 ;
)
ﬁﬁ; <
;
ﬁﬁ< =
return
ﬂﬂ 
strNewBlock
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 	
}
·· 
}´	´	 „Ó
ÉD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\CultureHelpers\PersianDateHelper.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public		 

class		 
PersianDateHelper		 "
{

 
public 
PersianDateHelper  
(  !
)! "
{ 	
} 	
public 
string 

ChangeDate  
(  !
string! '
PersionDate( 3
,3 4
int5 8
Days9 =
)= >
{ 	
DateTime 
aDate 
= 
ShtoM "
(" #
PersionDate# .
). /
;/ 0
if 
( 
Days 
>= 
$num 
) 
{ 
aDate 
= 
aDate 
. 
AddDays %
(% &
Days& *
)* +
;+ ,
} 
else 
{ 
System 
. 
TimeSpan 
days  $
=% &
new' *
TimeSpan+ 3
(3 4
Days4 8
,8 9
$num: ;
,; <
$num= >
,> ?
$num@ A
,A B
$numC D
)D E
;E F
aDate   
=   
aDate   
.   
Subtract   &
(  & '
-  ' (
days  ( ,
)  , -
;  - .
}!! 
PersionDate"" 
="" 
this"" 
."" 
MtoSh"" $
(""$ %
aDate""% *
)""* +
;""+ ,
return## 
PersionDate## 
;## 
}$$ 	
public&& 
string&& 
ToDay&& 
(&& 
)&& 
{'' 	
return(( 
MtoSh(( 
((( 
DateTime(( !
.((! "
Today((" '
)((' (
;((( )
})) 	
public** 
DateTime** 
StringShToDateM** '
(**' (
string**( .
Ddate**/ 4
)**4 5
{++ 	
DateTime,, 
dt,, 
=,, 
new,, 
DateTime,, &
(,,& '
),,' (
;,,( )
try-- 
{.. 
return11 
dt11 
;11 
}22 
catch33 
{44 
return55 
dt55 
;55 
}66 
}99 	
public:: 
DateTime:: 
ShtoM:: 
(:: 
string:: $
strd::% )
)::) *
{;; 	
System<< 
.<< 
DateTime<< 
dt<< 
=<<  
new<<! $
DateTime<<% -
(<<- .
)<<. /
;<</ 0
try== 
{>> 
if@@ 
(@@ 
strd@@ 
.@@ 
Length@@ 
==@@  "
$num@@# $
)@@$ %
strdAA 
=AA 
$strAA 
+AA  !
strdAA" &
;AA& '
ifBB 
(BB 
strdBB 
.BB 
LengthBB 
==BB  "
$numBB# $
)BB$ %
strdCC 
=CC 
strdCC 
.CC  
TrimCC  $
(CC$ %
)CC% &
.CC& '
	SubstringCC' 0
(CC0 1
$numCC1 2
,CC2 3
$numCC4 5
)CC5 6
+CC7 8
$strCC9 <
+CC= >
strdCC? C
.CCC D
TrimCCD H
(CCH I
)CCI J
.CCJ K
	SubstringCCK T
(CCT U
$numCCU V
,CCV W
$numCCX Y
)CCY Z
+CC[ \
$strCC] `
+CCa b
strdCCc g
.CCg h
TrimCCh l
(CCl m
)CCm n
.CCn o
	SubstringCCo x
(CCx y
$numCCy z
,CCz {
$numCC| }
)CC} ~
;CC~ 
stringDD 
tt1DD 
,DD 
tt2DD 
,DD  
tt3DD! $
;DD$ %
intEE 
btEE 
,EE 
atEE 
,EE 
ctEE 
,EE 
STEE  "
=EE# $
$numEE% &
;EE& '
ifGG 
(GG 
strdGG 
==GG 
$strGG (
||GG) +
strdGG, 0
==GG1 3
$strGG4 @
)GG@ A
returnHH 
dtHH 
;HH 
tt1II 
=II 
strdII 
.II 
TrimII 
(II  
)II  !
.II! "
	SubstringII" +
(II+ ,
$numII, -
,II- .
$numII/ 0
)II0 1
;II1 2
tt2JJ 
=JJ 
strdJJ 
.JJ 
TrimJJ 
(JJ  
)JJ  !
.JJ! "
	SubstringJJ" +
(JJ+ ,
$numJJ, -
,JJ- .
$numJJ/ 0
)JJ0 1
;JJ1 2
tt3KK 
=KK 
strdKK 
.KK 
TrimKK 
(KK  
)KK  !
.KK! "
	SubstringKK" +
(KK+ ,
$numKK, -
,KK- .
$numKK/ 0
)KK0 1
;KK1 2
intLL 
tmpttLL 
;LL 
tmpttMM 
=MM 
(MM 
intMM 
.MM 
ParseMM "
(MM" #
tt1MM# &
)MM& '
+MM( )
$numMM* -
)MM- .
;MM. /
tt1NN 
=NN 
tmpttNN 
.NN 
ToStringNN $
(NN$ %
)NN% &
;NN& '
ifOO 
(OO 
intOO 
.OO 
ParseOO 
(OO 
tt1OO !
)OO! "
>OO# $
$numOO% )
&&OO* ,
intOO- 0
.OO0 1
ParseOO1 6
(OO6 7
tt1OO7 :
)OO: ;
%OO< =
$numOO> ?
==OO@ B
$numOOC D
)OOD E
dtPP 
=PP 
newPP 
DateTimePP %
(PP% &
intPP& )
.PP) *
ParsePP* /
(PP/ 0
tt1PP0 3
)PP3 4
,PP4 5
$numPP6 7
,PP7 8
$numPP9 ;
)PP; <
;PP< =
elseQQ 
dtRR 
=RR 
newRR 
DateTimeRR %
(RR% &
intRR& )
.RR) *
ParseRR* /
(RR/ 0
tt1RR0 3
)RR3 4
,RR4 5
$numRR6 7
,RR7 8
$numRR9 ;
)RR; <
;RR< =
atSS 
=SS 
intSS 
.SS 
ParseSS 
(SS 
tt1SS "
)SS" #
;SS# $
btTT 
=TT 
intTT 
.TT 
ParseTT 
(TT 
tt2TT "
)TT" #
;TT# $
ctUU 
=UU 
intUU 
.UU 
ParseUU 
(UU 
tt3UU "
)UU" #
;UU# $
switchVV 
(VV 
btVV 
)VV 
{WW 
caseXX 
$numXX 
:XX 
caseYY 
$numYY 
:YY 
caseZZ 
$numZZ 
:ZZ 
case[[ 
$num[[ 
:[[ 
case\\ 
$num\\ 
:\\ 
case]] 
$num]] 
:]] 
ST^^ 
=^^ 
(^^ 
(^^ 
bt^^ !
-^^" #
$num^^$ %
)^^% &
*^^' (
$num^^) +
)^^+ ,
+^^- .
ct^^/ 1
;^^1 2
break__ 
;__ 
case`` 
$num`` 
:`` 
caseaa 
$numaa 
:aa 
casebb 
$numbb 
:bb 
casecc 
$numcc 
:cc 
casedd 
$numdd 
:dd 
caseee 
$numee 
:ee 
STff 
=ff 
(ff 
$numff 
*ff  !
$numff" $
)ff$ %
+ff& '
(ff( )
(ff) *
btff* ,
-ff- .
$numff/ 0
)ff0 1
*ff2 3
$numff4 6
)ff6 7
+ff8 9
ctff: <
;ff< =
breakgg 
;gg 
}hh 
dtjj 
=jj 
dtjj 
.jj 
AddDaysjj 
(jj  
STjj  "
-jj# $
$numjj% &
)jj& '
;jj' (
returnll 
dtll 
;ll 
}mm 
catchnn 
{oo 
returnpp 
dtpp 
;pp 
}qq 
}rr 	
publictt 
stringtt 
MtoShtt 
(tt 
Systemtt "
.tt" #
DateTimett# +
ddattt, 0
)tt0 1
{uu 	
tryvv 
{ww 
intxx 
daxx 
,xx 
moxx 
,xx 
yexx 
,xx 
ldxx  "
;xx" #
stringyy 
tt1yy 
,yy 
tt2yy 
,yy  
tt3yy! $
;yy$ %
int{{ 
[{{ 
]{{ 
buf1{{ 
,{{ 
buf2{{  
;{{  !
buf1|| 
=|| 
new|| 
int|| 
[|| 
$num|| !
]||! "
;||" #
buf2}} 
=}} 
new}} 
int}} 
[}} 
$num}} !
]}}! "
;}}" #
buf1~~ 
[~~ 
$num~~ 
]~~ 
=~~ 
$num~~ 
;~~ 
buf1 
[ 
$num 
] 
= 
$num 
; 
buf1
ÄÄ 
[
ÄÄ 
$num
ÄÄ 
]
ÄÄ 
=
ÄÄ 
$num
ÄÄ 
;
ÄÄ 
buf1
ÅÅ 
[
ÅÅ 
$num
ÅÅ 
]
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
buf1
ÇÇ 
[
ÇÇ 
$num
ÇÇ 
]
ÇÇ 
=
ÇÇ 
$num
ÇÇ 
;
ÇÇ 
buf1
ÉÉ 
[
ÉÉ 
$num
ÉÉ 
]
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
;
ÉÉ 
buf1
ÑÑ 
[
ÑÑ 
$num
ÑÑ 
]
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
buf1
ÖÖ 
[
ÖÖ 
$num
ÖÖ 
]
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
buf1
ÜÜ 
[
ÜÜ 
$num
ÜÜ 
]
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
buf1
áá 
[
áá 
$num
áá 
]
áá 
=
áá 
$num
áá 
;
áá 
buf1
àà 
[
àà 
$num
àà 
]
àà 
=
àà 
$num
àà 
;
àà 
buf1
ââ 
[
ââ 
$num
ââ 
]
ââ 
=
ââ 
$num
ââ 
;
ââ 
buf2
ãã 
[
ãã 
$num
ãã 
]
ãã 
=
ãã 
$num
ãã 
;
ãã 
buf2
åå 
[
åå 
$num
åå 
]
åå 
=
åå 
$num
åå 
;
åå 
buf2
çç 
[
çç 
$num
çç 
]
çç 
=
çç 
$num
çç 
;
çç 
buf2
éé 
[
éé 
$num
éé 
]
éé 
=
éé 
$num
éé 
;
éé 
buf2
èè 
[
èè 
$num
èè 
]
èè 
=
èè 
$num
èè 
;
èè 
buf2
êê 
[
êê 
$num
êê 
]
êê 
=
êê 
$num
êê 
;
êê 
buf2
ëë 
[
ëë 
$num
ëë 
]
ëë 
=
ëë 
$num
ëë 
;
ëë 
buf2
íí 
[
íí 
$num
íí 
]
íí 
=
íí 
$num
íí 
;
íí 
buf2
ìì 
[
ìì 
$num
ìì 
]
ìì 
=
ìì 
$num
ìì 
;
ìì 
buf2
îî 
[
îî 
$num
îî 
]
îî 
=
îî 
$num
îî 
;
îî 
buf2
ïï 
[
ïï 
$num
ïï 
]
ïï 
=
ïï 
$num
ïï 
;
ïï 
buf2
ññ 
[
ññ 
$num
ññ 
]
ññ 
=
ññ 
$num
ññ 
;
ññ 
if
öö 
(
öö 
(
öö 
ddat
öö 
.
öö 
Year
öö 
%
öö  
$num
öö! "
)
öö" #
!=
öö$ &
$num
öö' (
)
öö( )
{
õõ 
da
úú 
=
úú 
buf1
úú 
[
úú 
ddat
úú "
.
úú" #
Month
úú# (
-
úú) *
$num
úú+ ,
]
úú, -
+
úú. /
ddat
úú0 4
.
úú4 5
Day
úú5 8
;
úú8 9
if
ùù 
(
ùù 
da
ùù 
>
ùù 
$num
ùù 
)
ùù  
{
ûû 
da
üü 
=
üü 
da
üü 
-
üü  !
$num
üü" $
;
üü$ %
if
†† 
(
†† 
da
†† 
<=
†† !
$num
††" %
)
††% &
{
°° 
switch
¢¢ "
(
¢¢# $
da
¢¢$ &
%
¢¢' (
$num
¢¢) +
)
¢¢+ ,
{
££ 
case
§§  $
$num
§§% &
:
§§& '
mo
••$ &
=
••' (
da
••) +
/
••, -
$num
••. 0
;
••0 1
da
¶¶$ &
=
¶¶' (
$num
¶¶) +
;
¶¶+ ,
break
ßß$ )
;
ßß) *
default
®®  '
:
®®' (
mo
©©$ &
=
©©' (
(
©©) *
int
©©* -
)
©©- .
(
©©. /
da
©©/ 1
/
©©2 3
$num
©©4 6
)
©©6 7
+
©©8 9
$num
©©: ;
;
©©; <
da
™™$ &
=
™™' (
da
™™) +
%
™™, -
$num
™™. 0
;
™™0 1
break
´´$ )
;
´´) *
}
¨¨ 
ye
≠≠ 
=
≠≠  
ddat
≠≠! %
.
≠≠% &
Year
≠≠& *
-
≠≠+ ,
$num
≠≠- 0
;
≠≠0 1
}
ÆÆ 
else
ØØ 
{
∞∞ 
da
±± 
=
±±  
da
±±! #
-
±±$ %
$num
±±& )
;
±±) *
switch
≤≤ "
(
≤≤# $
da
≤≤$ &
%
≤≤' (
$num
≤≤) +
)
≤≤+ ,
{
≥≥ 
case
¥¥  $
$num
¥¥% &
:
¥¥& '
mo
µµ$ &
=
µµ' (
(
µµ) *
da
µµ* ,
/
µµ- .
$num
µµ/ 1
)
µµ1 2
+
µµ3 4
$num
µµ5 6
;
µµ6 7
da
∂∂$ &
=
∂∂' (
$num
∂∂) +
;
∂∂+ ,
break
∑∑$ )
;
∑∑) *
default
∏∏  '
:
∏∏' (
mo
ππ$ &
=
ππ' (
(
ππ) *
int
ππ* -
)
ππ- .
(
ππ. /
da
ππ/ 1
/
ππ2 3
$num
ππ4 6
)
ππ6 7
+
ππ8 9
$num
ππ: ;
;
ππ; <
da
∫∫$ &
=
∫∫' (
da
∫∫) +
%
∫∫, -
$num
∫∫. 0
;
∫∫0 1
break
ªª$ )
;
ªª) *
}
ºº 
ye
ΩΩ 
=
ΩΩ  
ddat
ΩΩ! %
.
ΩΩ% &
Year
ΩΩ& *
-
ΩΩ+ ,
$num
ΩΩ- 0
;
ΩΩ0 1
}
ææ 
}
øø 
else
¿¿ 
{
¡¡ 
if
¬¬ 
(
¬¬ 
ddat
¬¬  
.
¬¬  !
Year
¬¬! %
>
¬¬& '
$num
¬¬( ,
&&
¬¬- /
(
¬¬0 1
ddat
¬¬1 5
.
¬¬5 6
Year
¬¬6 :
%
¬¬; <
$num
¬¬= >
)
¬¬> ?
==
¬¬@ B
$num
¬¬C D
)
¬¬D E
ld
ƒƒ 
=
ƒƒ  
$num
ƒƒ! #
;
ƒƒ# $
else
≈≈ 
ld
∆∆ 
=
∆∆  
$num
∆∆! #
;
∆∆# $
da
«« 
=
«« 
da
«« 
+
««  !
ld
««" $
;
««$ %
switch
»» 
(
»»  
da
»»  "
%
»»# $
$num
»»% '
)
»»' (
{
…… 
case
    
$num
  ! "
:
  " #
mo
ÀÀ  "
=
ÀÀ# $
(
ÀÀ% &
da
ÀÀ& (
/
ÀÀ) *
$num
ÀÀ+ -
)
ÀÀ- .
+
ÀÀ/ 0
$num
ÀÀ1 2
;
ÀÀ2 3
da
ÃÃ  "
=
ÃÃ# $
$num
ÃÃ% '
;
ÃÃ' (
break
ÕÕ  %
;
ÕÕ% &
default
ŒŒ #
:
ŒŒ# $
mo
œœ  "
=
œœ# $
(
œœ% &
int
œœ& )
)
œœ) *
(
œœ* +
da
œœ+ -
/
œœ. /
$num
œœ0 2
)
œœ2 3
+
œœ4 5
$num
œœ6 8
;
œœ8 9
da
––  "
=
––# $
da
––% '
%
––( )
$num
––* ,
;
––, -
break
——  %
;
——% &
}
““ 
ye
”” 
=
”” 
ddat
”” !
.
””! "
Year
””" &
-
””' (
$num
””) ,
;
””, -
}
‘‘ 
}
’’ 
else
÷÷ 
{
◊◊ 
da
ÿÿ 
=
ÿÿ 
buf2
ÿÿ 
[
ÿÿ 
ddat
ÿÿ "
.
ÿÿ" #
Month
ÿÿ# (
-
ÿÿ) *
$num
ÿÿ+ ,
]
ÿÿ, -
+
ÿÿ. /
ddat
ÿÿ0 4
.
ÿÿ4 5
Day
ÿÿ5 8
;
ÿÿ8 9
if
ŸŸ 
(
ŸŸ 
ddat
ŸŸ 
.
ŸŸ 
Year
ŸŸ !
>=
ŸŸ" $
$num
ŸŸ% )
)
ŸŸ) *
ld
⁄⁄ 
=
⁄⁄ 
$num
⁄⁄ 
;
⁄⁄  
else
€€ 
ld
‹‹ 
=
‹‹ 
$num
‹‹ 
;
‹‹  
if
›› 
(
›› 
da
›› 
>
›› 
ld
›› 
)
››  
{
ﬁﬁ 
da
ﬂﬂ 
=
ﬂﬂ 
da
ﬂﬂ 
-
ﬂﬂ  !
ld
ﬂﬂ" $
;
ﬂﬂ$ %
if
‡‡ 
(
‡‡ 
da
‡‡ 
<=
‡‡ !
$num
‡‡" %
)
‡‡% &
{
·· 
switch
‚‚ "
(
‚‚# $
da
‚‚$ &
%
‚‚' (
$num
‚‚) +
)
‚‚+ ,
{
„„ 
case
‰‰  $
$num
‰‰% &
:
‰‰& '
mo
ÂÂ$ &
=
ÂÂ' (
da
ÂÂ) +
/
ÂÂ, -
$num
ÂÂ. 0
;
ÂÂ0 1
da
ÊÊ$ &
=
ÊÊ' (
$num
ÊÊ) +
;
ÊÊ+ ,
break
ÁÁ$ )
;
ÁÁ) *
default
ËË  '
:
ËË' (
mo
ÈÈ$ &
=
ÈÈ' (
(
ÈÈ) *
int
ÈÈ* -
)
ÈÈ- .
(
ÈÈ. /
da
ÈÈ/ 1
/
ÈÈ2 3
$num
ÈÈ4 6
)
ÈÈ6 7
+
ÈÈ8 9
$num
ÈÈ: ;
;
ÈÈ; <
da
ÍÍ$ &
=
ÍÍ' (
da
ÍÍ) +
%
ÍÍ, -
$num
ÍÍ. 0
;
ÍÍ0 1
break
ÎÎ$ )
;
ÎÎ) *
}
ÏÏ 
ye
ÌÌ 
=
ÌÌ  
ddat
ÌÌ! %
.
ÌÌ% &
Year
ÌÌ& *
-
ÌÌ+ ,
$num
ÌÌ- 0
;
ÌÌ0 1
}
ÓÓ 
else
ÔÔ 
{
 
da
ÒÒ 
=
ÒÒ  
da
ÒÒ! #
-
ÒÒ$ %
$num
ÒÒ& )
;
ÒÒ) *
switch
ÚÚ "
(
ÚÚ# $
da
ÚÚ$ &
%
ÚÚ' (
$num
ÚÚ) +
)
ÚÚ+ ,
{
ÛÛ 
case
ÙÙ  $
$num
ÙÙ% &
:
ÙÙ& '
mo
ıı$ &
=
ıı' (
(
ıı) *
da
ıı* ,
/
ıı- .
$num
ıı/ 1
)
ıı1 2
+
ıı3 4
$num
ıı5 6
;
ıı6 7
da
ˆˆ$ &
=
ˆˆ' (
$num
ˆˆ) +
;
ˆˆ+ ,
break
˜˜$ )
;
˜˜) *
default
¯¯  '
:
¯¯' (
mo
˘˘$ &
=
˘˘' (
(
˘˘) *
int
˘˘* -
)
˘˘- .
(
˘˘. /
da
˘˘/ 1
/
˘˘2 3
$num
˘˘4 6
)
˘˘6 7
+
˘˘8 9
$num
˘˘: ;
;
˘˘; <
da
˙˙$ &
=
˙˙' (
da
˙˙) +
%
˙˙, -
$num
˙˙. 0
;
˙˙0 1
break
˚˚$ )
;
˚˚) *
}
¸¸ 
ye
˝˝ 
=
˝˝  
ddat
˝˝! %
.
˝˝% &
Year
˝˝& *
-
˝˝+ ,
$num
˝˝- 0
;
˝˝0 1
}
˛˛ 
}
ˇˇ 
else
ÄÄ 
{
ÅÅ 
da
ÇÇ 
=
ÇÇ 
da
ÇÇ 
+
ÇÇ  !
$num
ÇÇ" $
;
ÇÇ$ %
switch
ÉÉ 
(
ÉÉ  
da
ÉÉ  "
%
ÉÉ# $
$num
ÉÉ% '
)
ÉÉ' (
{
ÑÑ 
case
ÖÖ  
$num
ÖÖ! "
:
ÖÖ" #
mo
ÜÜ  "
=
ÜÜ# $
(
ÜÜ% &
da
ÜÜ& (
/
ÜÜ) *
$num
ÜÜ+ -
)
ÜÜ- .
+
ÜÜ/ 0
$num
ÜÜ1 2
;
ÜÜ2 3
da
áá  "
=
áá# $
$num
áá% '
;
áá' (
break
àà  %
;
àà% &
default
ââ #
:
ââ# $
mo
ää  "
=
ää# $
(
ää% &
int
ää& )
)
ää) *
(
ää* +
da
ää+ -
/
ää. /
$num
ää0 2
)
ää2 3
+
ää4 5
$num
ää6 8
;
ää8 9
da
ãã  "
=
ãã# $
da
ãã% '
%
ãã( )
$num
ãã* ,
;
ãã, -
break
åå  %
;
åå% &
}
çç 
ye
éé 
=
éé 
ddat
éé !
.
éé! "
Year
éé" &
-
éé' (
$num
éé) ,
;
éé, -
}
èè 
}
êê 
tt1
ëë 
=
ëë 
ye
ëë 
.
ëë 
ToString
ëë !
(
ëë! "
)
ëë" #
.
ëë# $
Trim
ëë$ (
(
ëë( )
)
ëë) *
;
ëë* +
tt2
íí 
=
íí 
mo
íí 
.
íí 
ToString
íí !
(
íí! "
)
íí" #
.
íí# $
Trim
íí$ (
(
íí( )
)
íí) *
;
íí* +
if
ìì 
(
ìì 
tt2
ìì 
.
ìì 
Length
ìì 
==
ìì !
$num
ìì" #
)
ìì# $
tt2
îî 
=
îî 
$str
îî 
+
îî 
tt2
îî  #
;
îî# $
tt3
ïï 
=
ïï 
da
ïï 
.
ïï 
ToString
ïï !
(
ïï! "
)
ïï" #
.
ïï# $
Trim
ïï$ (
(
ïï( )
)
ïï) *
;
ïï* +
if
ññ 
(
ññ 
tt3
ññ 
.
ññ 
Length
ññ 
==
ññ !
$num
ññ" #
)
ññ# $
tt3
óó 
=
óó 
$str
óó 
+
óó 
tt3
óó  #
;
óó# $
return
ôô 
(
ôô 
tt1
ôô 
+
ôô 
$str
ôô !
+
ôô" #
tt2
ôô$ '
+
ôô( )
$str
ôô* -
+
ôô. /
tt3
ôô0 3
)
ôô3 4
;
ôô4 5
}
öö 
catch
õõ 
(
õõ 
System
õõ 
.
õõ 
	Exception
õõ #
)
õõ# $
{
úú 
return
ùù 
string
ùù 
.
ùù 
Empty
ùù #
;
ùù# $
}
ûû 
}
üü 	
public
°° 
int
°° 
GetPersianMonth
°° "
(
°°" #
System
°°# )
.
°°) *
DateTime
°°* 2
ddat
°°3 7
)
°°7 8
{
¢¢ 	
try
££ 
{
§§ 
int
•• 
da
•• 
,
•• 
mo
•• 
,
•• 
ye
•• 
,
•• 
ld
••  "
;
••" #
int
ßß 
[
ßß 
]
ßß 
buf1
ßß 
,
ßß 
buf2
ßß  
;
ßß  !
buf1
®® 
=
®® 
new
®® 
int
®® 
[
®® 
$num
®® !
]
®®! "
;
®®" #
buf2
©© 
=
©© 
new
©© 
int
©© 
[
©© 
$num
©© !
]
©©! "
;
©©" #
buf1
™™ 
[
™™ 
$num
™™ 
]
™™ 
=
™™ 
$num
™™ 
;
™™ 
buf1
´´ 
[
´´ 
$num
´´ 
]
´´ 
=
´´ 
$num
´´ 
;
´´ 
buf1
¨¨ 
[
¨¨ 
$num
¨¨ 
]
¨¨ 
=
¨¨ 
$num
¨¨ 
;
¨¨ 
buf1
≠≠ 
[
≠≠ 
$num
≠≠ 
]
≠≠ 
=
≠≠ 
$num
≠≠ 
;
≠≠ 
buf1
ÆÆ 
[
ÆÆ 
$num
ÆÆ 
]
ÆÆ 
=
ÆÆ 
$num
ÆÆ 
;
ÆÆ 
buf1
ØØ 
[
ØØ 
$num
ØØ 
]
ØØ 
=
ØØ 
$num
ØØ 
;
ØØ 
buf1
∞∞ 
[
∞∞ 
$num
∞∞ 
]
∞∞ 
=
∞∞ 
$num
∞∞ 
;
∞∞ 
buf1
±± 
[
±± 
$num
±± 
]
±± 
=
±± 
$num
±± 
;
±± 
buf1
≤≤ 
[
≤≤ 
$num
≤≤ 
]
≤≤ 
=
≤≤ 
$num
≤≤ 
;
≤≤ 
buf1
≥≥ 
[
≥≥ 
$num
≥≥ 
]
≥≥ 
=
≥≥ 
$num
≥≥ 
;
≥≥ 
buf1
¥¥ 
[
¥¥ 
$num
¥¥ 
]
¥¥ 
=
¥¥ 
$num
¥¥ 
;
¥¥ 
buf1
µµ 
[
µµ 
$num
µµ 
]
µµ 
=
µµ 
$num
µµ 
;
µµ 
buf2
∑∑ 
[
∑∑ 
$num
∑∑ 
]
∑∑ 
=
∑∑ 
$num
∑∑ 
;
∑∑ 
buf2
∏∏ 
[
∏∏ 
$num
∏∏ 
]
∏∏ 
=
∏∏ 
$num
∏∏ 
;
∏∏ 
buf2
ππ 
[
ππ 
$num
ππ 
]
ππ 
=
ππ 
$num
ππ 
;
ππ 
buf2
∫∫ 
[
∫∫ 
$num
∫∫ 
]
∫∫ 
=
∫∫ 
$num
∫∫ 
;
∫∫ 
buf2
ªª 
[
ªª 
$num
ªª 
]
ªª 
=
ªª 
$num
ªª 
;
ªª 
buf2
ºº 
[
ºº 
$num
ºº 
]
ºº 
=
ºº 
$num
ºº 
;
ºº 
buf2
ΩΩ 
[
ΩΩ 
$num
ΩΩ 
]
ΩΩ 
=
ΩΩ 
$num
ΩΩ 
;
ΩΩ 
buf2
ææ 
[
ææ 
$num
ææ 
]
ææ 
=
ææ 
$num
ææ 
;
ææ 
buf2
øø 
[
øø 
$num
øø 
]
øø 
=
øø 
$num
øø 
;
øø 
buf2
¿¿ 
[
¿¿ 
$num
¿¿ 
]
¿¿ 
=
¿¿ 
$num
¿¿ 
;
¿¿ 
buf2
¡¡ 
[
¡¡ 
$num
¡¡ 
]
¡¡ 
=
¡¡ 
$num
¡¡ 
;
¡¡ 
buf2
¬¬ 
[
¬¬ 
$num
¬¬ 
]
¬¬ 
=
¬¬ 
$num
¬¬ 
;
¬¬ 
if
∆∆ 
(
∆∆ 
(
∆∆ 
ddat
∆∆ 
.
∆∆ 
Year
∆∆ 
%
∆∆  
$num
∆∆! "
)
∆∆" #
!=
∆∆$ &
$num
∆∆' (
)
∆∆( )
{
«« 
da
»» 
=
»» 
buf1
»» 
[
»» 
ddat
»» "
.
»»" #
Month
»»# (
-
»») *
$num
»»+ ,
]
»», -
+
»». /
ddat
»»0 4
.
»»4 5
Day
»»5 8
;
»»8 9
if
…… 
(
…… 
da
…… 
>
…… 
$num
…… 
)
……  
{
   
da
ÀÀ 
=
ÀÀ 
da
ÀÀ 
-
ÀÀ  !
$num
ÀÀ" $
;
ÀÀ$ %
if
ÃÃ 
(
ÃÃ 
da
ÃÃ 
<=
ÃÃ !
$num
ÃÃ" %
)
ÃÃ% &
{
ÕÕ 
switch
ŒŒ "
(
ŒŒ# $
da
ŒŒ$ &
%
ŒŒ' (
$num
ŒŒ) +
)
ŒŒ+ ,
{
œœ 
case
––  $
$num
––% &
:
––& '
mo
——$ &
=
——' (
da
——) +
/
——, -
$num
——. 0
;
——0 1
da
““$ &
=
““' (
$num
““) +
;
““+ ,
break
””$ )
;
””) *
default
‘‘  '
:
‘‘' (
mo
’’$ &
=
’’' (
(
’’) *
int
’’* -
)
’’- .
(
’’. /
da
’’/ 1
/
’’2 3
$num
’’4 6
)
’’6 7
+
’’8 9
$num
’’: ;
;
’’; <
da
÷÷$ &
=
÷÷' (
da
÷÷) +
%
÷÷, -
$num
÷÷. 0
;
÷÷0 1
break
◊◊$ )
;
◊◊) *
}
ÿÿ 
ye
ŸŸ 
=
ŸŸ  
ddat
ŸŸ! %
.
ŸŸ% &
Year
ŸŸ& *
-
ŸŸ+ ,
$num
ŸŸ- 0
;
ŸŸ0 1
}
⁄⁄ 
else
€€ 
{
‹‹ 
da
›› 
=
››  
da
››! #
-
››$ %
$num
››& )
;
››) *
switch
ﬁﬁ "
(
ﬁﬁ# $
da
ﬁﬁ$ &
%
ﬁﬁ' (
$num
ﬁﬁ) +
)
ﬁﬁ+ ,
{
ﬂﬂ 
case
‡‡  $
$num
‡‡% &
:
‡‡& '
mo
··$ &
=
··' (
(
··) *
da
··* ,
/
··- .
$num
··/ 1
)
··1 2
+
··3 4
$num
··5 6
;
··6 7
da
‚‚$ &
=
‚‚' (
$num
‚‚) +
;
‚‚+ ,
break
„„$ )
;
„„) *
default
‰‰  '
:
‰‰' (
mo
ÂÂ$ &
=
ÂÂ' (
(
ÂÂ) *
int
ÂÂ* -
)
ÂÂ- .
(
ÂÂ. /
da
ÂÂ/ 1
/
ÂÂ2 3
$num
ÂÂ4 6
)
ÂÂ6 7
+
ÂÂ8 9
$num
ÂÂ: ;
;
ÂÂ; <
da
ÊÊ$ &
=
ÊÊ' (
da
ÊÊ) +
%
ÊÊ, -
$num
ÊÊ. 0
;
ÊÊ0 1
break
ÁÁ$ )
;
ÁÁ) *
}
ËË 
ye
ÈÈ 
=
ÈÈ  
ddat
ÈÈ! %
.
ÈÈ% &
Year
ÈÈ& *
-
ÈÈ+ ,
$num
ÈÈ- 0
;
ÈÈ0 1
}
ÍÍ 
}
ÎÎ 
else
ÏÏ 
{
ÌÌ 
if
ÓÓ 
(
ÓÓ 
ddat
ÓÓ  
.
ÓÓ  !
Year
ÓÓ! %
>
ÓÓ& '
$num
ÓÓ( ,
&&
ÓÓ- /
(
ÓÓ0 1
ddat
ÓÓ1 5
.
ÓÓ5 6
Year
ÓÓ6 :
%
ÓÓ; <
$num
ÓÓ= >
)
ÓÓ> ?
==
ÓÓ@ B
$num
ÓÓC D
)
ÓÓD E
ld
 
=
  
$num
! #
;
# $
else
ÒÒ 
ld
ÚÚ 
=
ÚÚ  
$num
ÚÚ! #
;
ÚÚ# $
da
ÛÛ 
=
ÛÛ 
da
ÛÛ 
+
ÛÛ  !
ld
ÛÛ" $
;
ÛÛ$ %
switch
ÙÙ 
(
ÙÙ  
da
ÙÙ  "
%
ÙÙ# $
$num
ÙÙ% '
)
ÙÙ' (
{
ıı 
case
ˆˆ  
$num
ˆˆ! "
:
ˆˆ" #
mo
˜˜  "
=
˜˜# $
(
˜˜% &
da
˜˜& (
/
˜˜) *
$num
˜˜+ -
)
˜˜- .
+
˜˜/ 0
$num
˜˜1 2
;
˜˜2 3
da
¯¯  "
=
¯¯# $
$num
¯¯% '
;
¯¯' (
break
˘˘  %
;
˘˘% &
default
˙˙ #
:
˙˙# $
mo
˚˚  "
=
˚˚# $
(
˚˚% &
int
˚˚& )
)
˚˚) *
(
˚˚* +
da
˚˚+ -
/
˚˚. /
$num
˚˚0 2
)
˚˚2 3
+
˚˚4 5
$num
˚˚6 8
;
˚˚8 9
da
¸¸  "
=
¸¸# $
da
¸¸% '
%
¸¸( )
$num
¸¸* ,
;
¸¸, -
break
˝˝  %
;
˝˝% &
}
˛˛ 
ye
ˇˇ 
=
ˇˇ 
ddat
ˇˇ !
.
ˇˇ! "
Year
ˇˇ" &
-
ˇˇ' (
$num
ˇˇ) ,
;
ˇˇ, -
}
ÄÄ 
}
ÅÅ 
else
ÇÇ 
{
ÉÉ 
da
ÑÑ 
=
ÑÑ 
buf2
ÑÑ 
[
ÑÑ 
ddat
ÑÑ "
.
ÑÑ" #
Month
ÑÑ# (
-
ÑÑ) *
$num
ÑÑ+ ,
]
ÑÑ, -
+
ÑÑ. /
ddat
ÑÑ0 4
.
ÑÑ4 5
Day
ÑÑ5 8
;
ÑÑ8 9
if
ÖÖ 
(
ÖÖ 
ddat
ÖÖ 
.
ÖÖ 
Year
ÖÖ !
>=
ÖÖ" $
$num
ÖÖ% )
)
ÖÖ) *
ld
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ  
else
áá 
ld
àà 
=
àà 
$num
àà 
;
àà  
if
ââ 
(
ââ 
da
ââ 
>
ââ 
ld
ââ 
)
ââ  
{
ää 
da
ãã 
=
ãã 
da
ãã 
-
ãã  !
ld
ãã" $
;
ãã$ %
if
åå 
(
åå 
da
åå 
<=
åå !
$num
åå" %
)
åå% &
{
çç 
switch
éé "
(
éé# $
da
éé$ &
%
éé' (
$num
éé) +
)
éé+ ,
{
èè 
case
êê  $
$num
êê% &
:
êê& '
mo
ëë$ &
=
ëë' (
da
ëë) +
/
ëë, -
$num
ëë. 0
;
ëë0 1
da
íí$ &
=
íí' (
$num
íí) +
;
íí+ ,
break
ìì$ )
;
ìì) *
default
îî  '
:
îî' (
mo
ïï$ &
=
ïï' (
(
ïï) *
int
ïï* -
)
ïï- .
(
ïï. /
da
ïï/ 1
/
ïï2 3
$num
ïï4 6
)
ïï6 7
+
ïï8 9
$num
ïï: ;
;
ïï; <
da
ññ$ &
=
ññ' (
da
ññ) +
%
ññ, -
$num
ññ. 0
;
ññ0 1
break
óó$ )
;
óó) *
}
òò 
ye
ôô 
=
ôô  
ddat
ôô! %
.
ôô% &
Year
ôô& *
-
ôô+ ,
$num
ôô- 0
;
ôô0 1
}
öö 
else
õõ 
{
úú 
da
ùù 
=
ùù  
da
ùù! #
-
ùù$ %
$num
ùù& )
;
ùù) *
switch
ûû "
(
ûû# $
da
ûû$ &
%
ûû' (
$num
ûû) +
)
ûû+ ,
{
üü 
case
††  $
$num
††% &
:
††& '
mo
°°$ &
=
°°' (
(
°°) *
da
°°* ,
/
°°- .
$num
°°/ 1
)
°°1 2
+
°°3 4
$num
°°5 6
;
°°6 7
da
¢¢$ &
=
¢¢' (
$num
¢¢) +
;
¢¢+ ,
break
££$ )
;
££) *
default
§§  '
:
§§' (
mo
••$ &
=
••' (
(
••) *
int
••* -
)
••- .
(
••. /
da
••/ 1
/
••2 3
$num
••4 6
)
••6 7
+
••8 9
$num
••: ;
;
••; <
da
¶¶$ &
=
¶¶' (
da
¶¶) +
%
¶¶, -
$num
¶¶. 0
;
¶¶0 1
break
ßß$ )
;
ßß) *
}
®® 
ye
©© 
=
©©  
ddat
©©! %
.
©©% &
Year
©©& *
-
©©+ ,
$num
©©- 0
;
©©0 1
}
™™ 
}
´´ 
else
¨¨ 
{
≠≠ 
da
ÆÆ 
=
ÆÆ 
da
ÆÆ 
+
ÆÆ  !
$num
ÆÆ" $
;
ÆÆ$ %
switch
ØØ 
(
ØØ  
da
ØØ  "
%
ØØ# $
$num
ØØ% '
)
ØØ' (
{
∞∞ 
case
±±  
$num
±±! "
:
±±" #
mo
≤≤  "
=
≤≤# $
(
≤≤% &
da
≤≤& (
/
≤≤) *
$num
≤≤+ -
)
≤≤- .
+
≤≤/ 0
$num
≤≤1 2
;
≤≤2 3
da
≥≥  "
=
≥≥# $
$num
≥≥% '
;
≥≥' (
break
¥¥  %
;
¥¥% &
default
µµ #
:
µµ# $
mo
∂∂  "
=
∂∂# $
(
∂∂% &
int
∂∂& )
)
∂∂) *
(
∂∂* +
da
∂∂+ -
/
∂∂. /
$num
∂∂0 2
)
∂∂2 3
+
∂∂4 5
$num
∂∂6 8
;
∂∂8 9
da
∑∑  "
=
∑∑# $
da
∑∑% '
%
∑∑( )
$num
∑∑* ,
;
∑∑, -
break
∏∏  %
;
∏∏% &
}
ππ 
ye
∫∫ 
=
∫∫ 
ddat
∫∫ !
.
∫∫! "
Year
∫∫" &
-
∫∫' (
$num
∫∫) ,
;
∫∫, -
}
ªª 
}
ºº 
return
«« 
mo
«« 
;
«« 
}
»» 
catch
…… 
(
…… 
System
…… 
.
…… 
	Exception
…… #
)
……# $
{
   
return
ÀÀ 
ddat
ÀÀ 
.
ÀÀ 
Month
ÀÀ !
;
ÀÀ! "
}
ÃÃ 
}
ÕÕ 	
public
œœ 
int
œœ 
GetPersianYear
œœ !
(
œœ! "
System
œœ" (
.
œœ( )
DateTime
œœ) 1
ddat
œœ2 6
)
œœ6 7
{
–– 	
try
—— 
{
““ 
int
”” 
da
”” 
,
”” 
mo
”” 
,
”” 
ye
”” 
,
”” 
ld
””  "
;
””" #
int
’’ 
[
’’ 
]
’’ 
buf1
’’ 
,
’’ 
buf2
’’  
;
’’  !
buf1
÷÷ 
=
÷÷ 
new
÷÷ 
int
÷÷ 
[
÷÷ 
$num
÷÷ !
]
÷÷! "
;
÷÷" #
buf2
◊◊ 
=
◊◊ 
new
◊◊ 
int
◊◊ 
[
◊◊ 
$num
◊◊ !
]
◊◊! "
;
◊◊" #
buf1
ÿÿ 
[
ÿÿ 
$num
ÿÿ 
]
ÿÿ 
=
ÿÿ 
$num
ÿÿ 
;
ÿÿ 
buf1
ŸŸ 
[
ŸŸ 
$num
ŸŸ 
]
ŸŸ 
=
ŸŸ 
$num
ŸŸ 
;
ŸŸ 
buf1
⁄⁄ 
[
⁄⁄ 
$num
⁄⁄ 
]
⁄⁄ 
=
⁄⁄ 
$num
⁄⁄ 
;
⁄⁄ 
buf1
€€ 
[
€€ 
$num
€€ 
]
€€ 
=
€€ 
$num
€€ 
;
€€ 
buf1
‹‹ 
[
‹‹ 
$num
‹‹ 
]
‹‹ 
=
‹‹ 
$num
‹‹ 
;
‹‹ 
buf1
›› 
[
›› 
$num
›› 
]
›› 
=
›› 
$num
›› 
;
›› 
buf1
ﬁﬁ 
[
ﬁﬁ 
$num
ﬁﬁ 
]
ﬁﬁ 
=
ﬁﬁ 
$num
ﬁﬁ 
;
ﬁﬁ 
buf1
ﬂﬂ 
[
ﬂﬂ 
$num
ﬂﬂ 
]
ﬂﬂ 
=
ﬂﬂ 
$num
ﬂﬂ 
;
ﬂﬂ 
buf1
‡‡ 
[
‡‡ 
$num
‡‡ 
]
‡‡ 
=
‡‡ 
$num
‡‡ 
;
‡‡ 
buf1
·· 
[
·· 
$num
·· 
]
·· 
=
·· 
$num
·· 
;
·· 
buf1
‚‚ 
[
‚‚ 
$num
‚‚ 
]
‚‚ 
=
‚‚ 
$num
‚‚ 
;
‚‚ 
buf1
„„ 
[
„„ 
$num
„„ 
]
„„ 
=
„„ 
$num
„„ 
;
„„ 
buf2
ÂÂ 
[
ÂÂ 
$num
ÂÂ 
]
ÂÂ 
=
ÂÂ 
$num
ÂÂ 
;
ÂÂ 
buf2
ÊÊ 
[
ÊÊ 
$num
ÊÊ 
]
ÊÊ 
=
ÊÊ 
$num
ÊÊ 
;
ÊÊ 
buf2
ÁÁ 
[
ÁÁ 
$num
ÁÁ 
]
ÁÁ 
=
ÁÁ 
$num
ÁÁ 
;
ÁÁ 
buf2
ËË 
[
ËË 
$num
ËË 
]
ËË 
=
ËË 
$num
ËË 
;
ËË 
buf2
ÈÈ 
[
ÈÈ 
$num
ÈÈ 
]
ÈÈ 
=
ÈÈ 
$num
ÈÈ 
;
ÈÈ 
buf2
ÍÍ 
[
ÍÍ 
$num
ÍÍ 
]
ÍÍ 
=
ÍÍ 
$num
ÍÍ 
;
ÍÍ 
buf2
ÎÎ 
[
ÎÎ 
$num
ÎÎ 
]
ÎÎ 
=
ÎÎ 
$num
ÎÎ 
;
ÎÎ 
buf2
ÏÏ 
[
ÏÏ 
$num
ÏÏ 
]
ÏÏ 
=
ÏÏ 
$num
ÏÏ 
;
ÏÏ 
buf2
ÌÌ 
[
ÌÌ 
$num
ÌÌ 
]
ÌÌ 
=
ÌÌ 
$num
ÌÌ 
;
ÌÌ 
buf2
ÓÓ 
[
ÓÓ 
$num
ÓÓ 
]
ÓÓ 
=
ÓÓ 
$num
ÓÓ 
;
ÓÓ 
buf2
ÔÔ 
[
ÔÔ 
$num
ÔÔ 
]
ÔÔ 
=
ÔÔ 
$num
ÔÔ 
;
ÔÔ 
buf2
 
[
 
$num
 
]
 
=
 
$num
 
;
 
if
ÙÙ 
(
ÙÙ 
(
ÙÙ 
ddat
ÙÙ 
.
ÙÙ 
Year
ÙÙ 
%
ÙÙ  
$num
ÙÙ! "
)
ÙÙ" #
!=
ÙÙ$ &
$num
ÙÙ' (
)
ÙÙ( )
{
ıı 
da
ˆˆ 
=
ˆˆ 
buf1
ˆˆ 
[
ˆˆ 
ddat
ˆˆ "
.
ˆˆ" #
Month
ˆˆ# (
-
ˆˆ) *
$num
ˆˆ+ ,
]
ˆˆ, -
+
ˆˆ. /
ddat
ˆˆ0 4
.
ˆˆ4 5
Day
ˆˆ5 8
;
ˆˆ8 9
if
˜˜ 
(
˜˜ 
da
˜˜ 
>
˜˜ 
$num
˜˜ 
)
˜˜  
{
¯¯ 
da
˘˘ 
=
˘˘ 
da
˘˘ 
-
˘˘  !
$num
˘˘" $
;
˘˘$ %
if
˙˙ 
(
˙˙ 
da
˙˙ 
<=
˙˙ !
$num
˙˙" %
)
˙˙% &
{
˚˚ 
switch
¸¸ "
(
¸¸# $
da
¸¸$ &
%
¸¸' (
$num
¸¸) +
)
¸¸+ ,
{
˝˝ 
case
˛˛  $
$num
˛˛% &
:
˛˛& '
mo
ˇˇ$ &
=
ˇˇ' (
da
ˇˇ) +
/
ˇˇ, -
$num
ˇˇ. 0
;
ˇˇ0 1
da
ÄÄ$ &
=
ÄÄ' (
$num
ÄÄ) +
;
ÄÄ+ ,
break
ÅÅ$ )
;
ÅÅ) *
default
ÇÇ  '
:
ÇÇ' (
mo
ÉÉ$ &
=
ÉÉ' (
(
ÉÉ) *
int
ÉÉ* -
)
ÉÉ- .
(
ÉÉ. /
da
ÉÉ/ 1
/
ÉÉ2 3
$num
ÉÉ4 6
)
ÉÉ6 7
+
ÉÉ8 9
$num
ÉÉ: ;
;
ÉÉ; <
da
ÑÑ$ &
=
ÑÑ' (
da
ÑÑ) +
%
ÑÑ, -
$num
ÑÑ. 0
;
ÑÑ0 1
break
ÖÖ$ )
;
ÖÖ) *
}
ÜÜ 
ye
áá 
=
áá  
ddat
áá! %
.
áá% &
Year
áá& *
-
áá+ ,
$num
áá- 0
;
áá0 1
}
àà 
else
ââ 
{
ää 
da
ãã 
=
ãã  
da
ãã! #
-
ãã$ %
$num
ãã& )
;
ãã) *
switch
åå "
(
åå# $
da
åå$ &
%
åå' (
$num
åå) +
)
åå+ ,
{
çç 
case
éé  $
$num
éé% &
:
éé& '
mo
èè$ &
=
èè' (
(
èè) *
da
èè* ,
/
èè- .
$num
èè/ 1
)
èè1 2
+
èè3 4
$num
èè5 6
;
èè6 7
da
êê$ &
=
êê' (
$num
êê) +
;
êê+ ,
break
ëë$ )
;
ëë) *
default
íí  '
:
íí' (
mo
ìì$ &
=
ìì' (
(
ìì) *
int
ìì* -
)
ìì- .
(
ìì. /
da
ìì/ 1
/
ìì2 3
$num
ìì4 6
)
ìì6 7
+
ìì8 9
$num
ìì: ;
;
ìì; <
da
îî$ &
=
îî' (
da
îî) +
%
îî, -
$num
îî. 0
;
îî0 1
break
ïï$ )
;
ïï) *
}
ññ 
ye
óó 
=
óó  
ddat
óó! %
.
óó% &
Year
óó& *
-
óó+ ,
$num
óó- 0
;
óó0 1
}
òò 
}
ôô 
else
öö 
{
õõ 
if
úú 
(
úú 
ddat
úú  
.
úú  !
Year
úú! %
>
úú& '
$num
úú( ,
&&
úú- /
(
úú0 1
ddat
úú1 5
.
úú5 6
Year
úú6 :
%
úú; <
$num
úú= >
)
úú> ?
==
úú@ B
$num
úúC D
)
úúD E
ld
ûû 
=
ûû  
$num
ûû! #
;
ûû# $
else
üü 
ld
†† 
=
††  
$num
††! #
;
††# $
da
°° 
=
°° 
da
°° 
+
°°  !
ld
°°" $
;
°°$ %
switch
¢¢ 
(
¢¢  
da
¢¢  "
%
¢¢# $
$num
¢¢% '
)
¢¢' (
{
££ 
case
§§  
$num
§§! "
:
§§" #
mo
••  "
=
••# $
(
••% &
da
••& (
/
••) *
$num
••+ -
)
••- .
+
••/ 0
$num
••1 2
;
••2 3
da
¶¶  "
=
¶¶# $
$num
¶¶% '
;
¶¶' (
break
ßß  %
;
ßß% &
default
®® #
:
®®# $
mo
©©  "
=
©©# $
(
©©% &
int
©©& )
)
©©) *
(
©©* +
da
©©+ -
/
©©. /
$num
©©0 2
)
©©2 3
+
©©4 5
$num
©©6 8
;
©©8 9
da
™™  "
=
™™# $
da
™™% '
%
™™( )
$num
™™* ,
;
™™, -
break
´´  %
;
´´% &
}
¨¨ 
ye
≠≠ 
=
≠≠ 
ddat
≠≠ !
.
≠≠! "
Year
≠≠" &
-
≠≠' (
$num
≠≠) ,
;
≠≠, -
}
ÆÆ 
}
ØØ 
else
∞∞ 
{
±± 
da
≤≤ 
=
≤≤ 
buf2
≤≤ 
[
≤≤ 
ddat
≤≤ "
.
≤≤" #
Month
≤≤# (
-
≤≤) *
$num
≤≤+ ,
]
≤≤, -
+
≤≤. /
ddat
≤≤0 4
.
≤≤4 5
Day
≤≤5 8
;
≤≤8 9
if
≥≥ 
(
≥≥ 
ddat
≥≥ 
.
≥≥ 
Year
≥≥ !
>=
≥≥" $
$num
≥≥% )
)
≥≥) *
ld
¥¥ 
=
¥¥ 
$num
¥¥ 
;
¥¥  
else
µµ 
ld
∂∂ 
=
∂∂ 
$num
∂∂ 
;
∂∂  
if
∑∑ 
(
∑∑ 
da
∑∑ 
>
∑∑ 
ld
∑∑ 
)
∑∑  
{
∏∏ 
da
ππ 
=
ππ 
da
ππ 
-
ππ  !
ld
ππ" $
;
ππ$ %
if
∫∫ 
(
∫∫ 
da
∫∫ 
<=
∫∫ !
$num
∫∫" %
)
∫∫% &
{
ªª 
switch
ºº "
(
ºº# $
da
ºº$ &
%
ºº' (
$num
ºº) +
)
ºº+ ,
{
ΩΩ 
case
ææ  $
$num
ææ% &
:
ææ& '
mo
øø$ &
=
øø' (
da
øø) +
/
øø, -
$num
øø. 0
;
øø0 1
da
¿¿$ &
=
¿¿' (
$num
¿¿) +
;
¿¿+ ,
break
¡¡$ )
;
¡¡) *
default
¬¬  '
:
¬¬' (
mo
√√$ &
=
√√' (
(
√√) *
int
√√* -
)
√√- .
(
√√. /
da
√√/ 1
/
√√2 3
$num
√√4 6
)
√√6 7
+
√√8 9
$num
√√: ;
;
√√; <
da
ƒƒ$ &
=
ƒƒ' (
da
ƒƒ) +
%
ƒƒ, -
$num
ƒƒ. 0
;
ƒƒ0 1
break
≈≈$ )
;
≈≈) *
}
∆∆ 
ye
«« 
=
««  
ddat
««! %
.
««% &
Year
««& *
-
««+ ,
$num
««- 0
;
««0 1
}
»» 
else
…… 
{
   
da
ÀÀ 
=
ÀÀ  
da
ÀÀ! #
-
ÀÀ$ %
$num
ÀÀ& )
;
ÀÀ) *
switch
ÃÃ "
(
ÃÃ# $
da
ÃÃ$ &
%
ÃÃ' (
$num
ÃÃ) +
)
ÃÃ+ ,
{
ÕÕ 
case
ŒŒ  $
$num
ŒŒ% &
:
ŒŒ& '
mo
œœ$ &
=
œœ' (
(
œœ) *
da
œœ* ,
/
œœ- .
$num
œœ/ 1
)
œœ1 2
+
œœ3 4
$num
œœ5 6
;
œœ6 7
da
––$ &
=
––' (
$num
––) +
;
––+ ,
break
——$ )
;
——) *
default
““  '
:
““' (
mo
””$ &
=
””' (
(
””) *
int
””* -
)
””- .
(
””. /
da
””/ 1
/
””2 3
$num
””4 6
)
””6 7
+
””8 9
$num
””: ;
;
””; <
da
‘‘$ &
=
‘‘' (
da
‘‘) +
%
‘‘, -
$num
‘‘. 0
;
‘‘0 1
break
’’$ )
;
’’) *
}
÷÷ 
ye
◊◊ 
=
◊◊  
ddat
◊◊! %
.
◊◊% &
Year
◊◊& *
-
◊◊+ ,
$num
◊◊- 0
;
◊◊0 1
}
ÿÿ 
}
ŸŸ 
else
⁄⁄ 
{
€€ 
da
‹‹ 
=
‹‹ 
da
‹‹ 
+
‹‹  !
$num
‹‹" $
;
‹‹$ %
switch
›› 
(
››  
da
››  "
%
››# $
$num
››% '
)
››' (
{
ﬁﬁ 
case
ﬂﬂ  
$num
ﬂﬂ! "
:
ﬂﬂ" #
mo
‡‡  "
=
‡‡# $
(
‡‡% &
da
‡‡& (
/
‡‡) *
$num
‡‡+ -
)
‡‡- .
+
‡‡/ 0
$num
‡‡1 2
;
‡‡2 3
da
··  "
=
··# $
$num
··% '
;
··' (
break
‚‚  %
;
‚‚% &
default
„„ #
:
„„# $
mo
‰‰  "
=
‰‰# $
(
‰‰% &
int
‰‰& )
)
‰‰) *
(
‰‰* +
da
‰‰+ -
/
‰‰. /
$num
‰‰0 2
)
‰‰2 3
+
‰‰4 5
$num
‰‰6 8
;
‰‰8 9
da
ÂÂ  "
=
ÂÂ# $
da
ÂÂ% '
%
ÂÂ( )
$num
ÂÂ* ,
;
ÂÂ, -
break
ÊÊ  %
;
ÊÊ% &
}
ÁÁ 
ye
ËË 
=
ËË 
ddat
ËË !
.
ËË! "
Year
ËË" &
-
ËË' (
$num
ËË) ,
;
ËË, -
}
ÈÈ 
}
ÍÍ 
return
ıı 
ye
ıı 
;
ıı 
}
ˆˆ 
catch
˜˜ 
(
˜˜ 
System
˜˜ 
.
˜˜ 
	Exception
˜˜ #
)
˜˜# $
{
¯¯ 
return
˘˘ 
ddat
˘˘ 
.
˘˘ 
Month
˘˘ !
;
˘˘! "
}
˙˙ 
}
˚˚ 	
public
˝˝ 
string
˝˝ 
MtoSh
˝˝ 
(
˝˝ 
string
˝˝ "
strdat
˝˝# )
)
˝˝) *
{
˛˛ 	
try
ˇˇ 
{
ÄÄ 
System
ÅÅ 
.
ÅÅ 
DateTime
ÅÅ 
ddat
ÅÅ  $
=
ÅÅ% &
new
ÅÅ' *
DateTime
ÅÅ+ 3
(
ÅÅ3 4
int
ÅÅ4 7
.
ÅÅ7 8
Parse
ÅÅ8 =
(
ÅÅ= >
strdat
ÅÅ> D
.
ÅÅD E
	Substring
ÅÅE N
(
ÅÅN O
$num
ÅÅO P
,
ÅÅP Q
$num
ÅÅR S
)
ÅÅS T
)
ÅÅT U
,
ÅÅU V
int
ÅÅW Z
.
ÅÅZ [
Parse
ÅÅ[ `
(
ÅÅ` a
strdat
ÅÅa g
.
ÅÅg h
	Substring
ÅÅh q
(
ÅÅq r
$num
ÅÅr s
,
ÅÅs t
$num
ÅÅu v
)
ÅÅv w
)
ÅÅw x
,
ÅÅx y
int
ÅÅz }
.
ÅÅ} ~
ParseÅÅ~ É
(ÅÅÉ Ñ
strdatÅÅÑ ä
.ÅÅä ã
	SubstringÅÅã î
(ÅÅî ï
$numÅÅï ñ
,ÅÅñ ó
$numÅÅò ô
)ÅÅô ö
)ÅÅö õ
)ÅÅõ ú
;ÅÅú ù
int
ÇÇ 
da
ÇÇ 
,
ÇÇ 
mo
ÇÇ 
,
ÇÇ 
ye
ÇÇ 
,
ÇÇ 
ld
ÇÇ  "
;
ÇÇ" #
string
ÉÉ 
tt1
ÉÉ 
,
ÉÉ 
tt2
ÉÉ 
,
ÉÉ  
tt3
ÉÉ! $
;
ÉÉ$ %
int
ÖÖ 
[
ÖÖ 
]
ÖÖ 
buf1
ÖÖ 
,
ÖÖ 
buf2
ÖÖ  
;
ÖÖ  !
buf1
ÜÜ 
=
ÜÜ 
new
ÜÜ 
int
ÜÜ 
[
ÜÜ 
$num
ÜÜ !
]
ÜÜ! "
;
ÜÜ" #
buf2
áá 
=
áá 
new
áá 
int
áá 
[
áá 
$num
áá !
]
áá! "
;
áá" #
buf1
àà 
[
àà 
$num
àà 
]
àà 
=
àà 
$num
àà 
;
àà 
buf1
ââ 
[
ââ 
$num
ââ 
]
ââ 
=
ââ 
$num
ââ 
;
ââ 
buf1
ää 
[
ää 
$num
ää 
]
ää 
=
ää 
$num
ää 
;
ää 
buf1
ãã 
[
ãã 
$num
ãã 
]
ãã 
=
ãã 
$num
ãã 
;
ãã 
buf1
åå 
[
åå 
$num
åå 
]
åå 
=
åå 
$num
åå 
;
åå 
buf1
çç 
[
çç 
$num
çç 
]
çç 
=
çç 
$num
çç 
;
çç 
buf1
éé 
[
éé 
$num
éé 
]
éé 
=
éé 
$num
éé 
;
éé 
buf1
èè 
[
èè 
$num
èè 
]
èè 
=
èè 
$num
èè 
;
èè 
buf1
êê 
[
êê 
$num
êê 
]
êê 
=
êê 
$num
êê 
;
êê 
buf1
ëë 
[
ëë 
$num
ëë 
]
ëë 
=
ëë 
$num
ëë 
;
ëë 
buf1
íí 
[
íí 
$num
íí 
]
íí 
=
íí 
$num
íí 
;
íí 
buf1
ìì 
[
ìì 
$num
ìì 
]
ìì 
=
ìì 
$num
ìì 
;
ìì 
buf2
ïï 
[
ïï 
$num
ïï 
]
ïï 
=
ïï 
$num
ïï 
;
ïï 
buf2
ññ 
[
ññ 
$num
ññ 
]
ññ 
=
ññ 
$num
ññ 
;
ññ 
buf2
óó 
[
óó 
$num
óó 
]
óó 
=
óó 
$num
óó 
;
óó 
buf2
òò 
[
òò 
$num
òò 
]
òò 
=
òò 
$num
òò 
;
òò 
buf2
ôô 
[
ôô 
$num
ôô 
]
ôô 
=
ôô 
$num
ôô 
;
ôô 
buf2
öö 
[
öö 
$num
öö 
]
öö 
=
öö 
$num
öö 
;
öö 
buf2
õõ 
[
õõ 
$num
õõ 
]
õõ 
=
õõ 
$num
õõ 
;
õõ 
buf2
úú 
[
úú 
$num
úú 
]
úú 
=
úú 
$num
úú 
;
úú 
buf2
ùù 
[
ùù 
$num
ùù 
]
ùù 
=
ùù 
$num
ùù 
;
ùù 
buf2
ûû 
[
ûû 
$num
ûû 
]
ûû 
=
ûû 
$num
ûû 
;
ûû 
buf2
üü 
[
üü 
$num
üü 
]
üü 
=
üü 
$num
üü 
;
üü 
buf2
†† 
[
†† 
$num
†† 
]
†† 
=
†† 
$num
†† 
;
†† 
if
§§ 
(
§§ 
(
§§ 
ddat
§§ 
.
§§ 
Year
§§ 
%
§§  
$num
§§! "
)
§§" #
!=
§§$ &
$num
§§' (
)
§§( )
{
•• 
da
¶¶ 
=
¶¶ 
buf1
¶¶ 
[
¶¶ 
ddat
¶¶ "
.
¶¶" #
Month
¶¶# (
-
¶¶) *
$num
¶¶+ ,
]
¶¶, -
+
¶¶. /
ddat
¶¶0 4
.
¶¶4 5
Day
¶¶5 8
;
¶¶8 9
if
ßß 
(
ßß 
da
ßß 
>
ßß 
$num
ßß 
)
ßß  
{
®® 
da
©© 
=
©© 
da
©© 
-
©©  !
$num
©©" $
;
©©$ %
if
™™ 
(
™™ 
da
™™ 
<=
™™ !
$num
™™" %
)
™™% &
{
´´ 
switch
¨¨ "
(
¨¨# $
da
¨¨$ &
%
¨¨' (
$num
¨¨) +
)
¨¨+ ,
{
≠≠ 
case
ÆÆ  $
$num
ÆÆ% &
:
ÆÆ& '
mo
ØØ$ &
=
ØØ' (
da
ØØ) +
/
ØØ, -
$num
ØØ. 0
;
ØØ0 1
da
∞∞$ &
=
∞∞' (
$num
∞∞) +
;
∞∞+ ,
break
±±$ )
;
±±) *
default
≤≤  '
:
≤≤' (
mo
≥≥$ &
=
≥≥' (
(
≥≥) *
int
≥≥* -
)
≥≥- .
(
≥≥. /
da
≥≥/ 1
/
≥≥2 3
$num
≥≥4 6
)
≥≥6 7
+
≥≥8 9
$num
≥≥: ;
;
≥≥; <
da
¥¥$ &
=
¥¥' (
da
¥¥) +
%
¥¥, -
$num
¥¥. 0
;
¥¥0 1
break
µµ$ )
;
µµ) *
}
∂∂ 
ye
∑∑ 
=
∑∑  
ddat
∑∑! %
.
∑∑% &
Year
∑∑& *
-
∑∑+ ,
$num
∑∑- 0
;
∑∑0 1
}
∏∏ 
else
ππ 
{
∫∫ 
da
ªª 
=
ªª  
da
ªª! #
-
ªª$ %
$num
ªª& )
;
ªª) *
switch
ºº "
(
ºº# $
da
ºº$ &
%
ºº' (
$num
ºº) +
)
ºº+ ,
{
ΩΩ 
case
ææ  $
$num
ææ% &
:
ææ& '
mo
øø$ &
=
øø' (
(
øø) *
da
øø* ,
/
øø- .
$num
øø/ 1
)
øø1 2
+
øø3 4
$num
øø5 6
;
øø6 7
da
¿¿$ &
=
¿¿' (
$num
¿¿) +
;
¿¿+ ,
break
¡¡$ )
;
¡¡) *
default
¬¬  '
:
¬¬' (
mo
√√$ &
=
√√' (
(
√√) *
int
√√* -
)
√√- .
(
√√. /
da
√√/ 1
/
√√2 3
$num
√√4 6
)
√√6 7
+
√√8 9
$num
√√: ;
;
√√; <
da
ƒƒ$ &
=
ƒƒ' (
da
ƒƒ) +
%
ƒƒ, -
$num
ƒƒ. 0
;
ƒƒ0 1
break
≈≈$ )
;
≈≈) *
}
∆∆ 
ye
«« 
=
««  
ddat
««! %
.
««% &
Year
««& *
-
««+ ,
$num
««- 0
;
««0 1
}
»» 
}
…… 
else
   
{
ÀÀ 
if
ÃÃ 
(
ÃÃ 
ddat
ÃÃ  
.
ÃÃ  !
Year
ÃÃ! %
>
ÃÃ& '
$num
ÃÃ( ,
&&
ÃÃ- /
(
ÃÃ0 1
ddat
ÃÃ1 5
.
ÃÃ5 6
Year
ÃÃ6 :
%
ÃÃ; <
$num
ÃÃ= >
)
ÃÃ> ?
==
ÃÃ@ B
$num
ÃÃC D
)
ÃÃD E
ld
ŒŒ 
=
ŒŒ  
$num
ŒŒ! #
;
ŒŒ# $
else
œœ 
ld
–– 
=
––  
$num
––! #
;
––# $
da
—— 
=
—— 
da
—— 
+
——  !
ld
——" $
;
——$ %
switch
““ 
(
““  
da
““  "
%
““# $
$num
““% '
)
““' (
{
”” 
case
‘‘  
$num
‘‘! "
:
‘‘" #
mo
’’  "
=
’’# $
(
’’% &
da
’’& (
/
’’) *
$num
’’+ -
)
’’- .
+
’’/ 0
$num
’’1 2
;
’’2 3
da
÷÷  "
=
÷÷# $
$num
÷÷% '
;
÷÷' (
break
◊◊  %
;
◊◊% &
default
ÿÿ #
:
ÿÿ# $
mo
ŸŸ  "
=
ŸŸ# $
(
ŸŸ% &
int
ŸŸ& )
)
ŸŸ) *
(
ŸŸ* +
da
ŸŸ+ -
/
ŸŸ. /
$num
ŸŸ0 2
)
ŸŸ2 3
+
ŸŸ4 5
$num
ŸŸ6 8
;
ŸŸ8 9
da
⁄⁄  "
=
⁄⁄# $
da
⁄⁄% '
%
⁄⁄( )
$num
⁄⁄* ,
;
⁄⁄, -
break
€€  %
;
€€% &
}
‹‹ 
ye
›› 
=
›› 
ddat
›› !
.
››! "
Year
››" &
-
››' (
$num
››) ,
;
››, -
}
ﬁﬁ 
}
ﬂﬂ 
else
‡‡ 
{
·· 
da
‚‚ 
=
‚‚ 
buf2
‚‚ 
[
‚‚ 
ddat
‚‚ "
.
‚‚" #
Month
‚‚# (
-
‚‚) *
$num
‚‚+ ,
]
‚‚, -
+
‚‚. /
ddat
‚‚0 4
.
‚‚4 5
Day
‚‚5 8
;
‚‚8 9
if
„„ 
(
„„ 
ddat
„„ 
.
„„ 
Year
„„ !
>=
„„" $
$num
„„% )
)
„„) *
ld
‰‰ 
=
‰‰ 
$num
‰‰ 
;
‰‰  
else
ÂÂ 
ld
ÊÊ 
=
ÊÊ 
$num
ÊÊ 
;
ÊÊ  
if
ÁÁ 
(
ÁÁ 
da
ÁÁ 
>
ÁÁ 
ld
ÁÁ 
)
ÁÁ  
{
ËË 
da
ÈÈ 
=
ÈÈ 
da
ÈÈ 
-
ÈÈ  !
ld
ÈÈ" $
;
ÈÈ$ %
if
ÍÍ 
(
ÍÍ 
da
ÍÍ 
<=
ÍÍ !
$num
ÍÍ" %
)
ÍÍ% &
{
ÎÎ 
switch
ÏÏ "
(
ÏÏ# $
da
ÏÏ$ &
%
ÏÏ' (
$num
ÏÏ) +
)
ÏÏ+ ,
{
ÌÌ 
case
ÓÓ  $
$num
ÓÓ% &
:
ÓÓ& '
mo
ÔÔ$ &
=
ÔÔ' (
da
ÔÔ) +
/
ÔÔ, -
$num
ÔÔ. 0
;
ÔÔ0 1
da
$ &
=
' (
$num
) +
;
+ ,
break
ÒÒ$ )
;
ÒÒ) *
default
ÚÚ  '
:
ÚÚ' (
mo
ÛÛ$ &
=
ÛÛ' (
(
ÛÛ) *
int
ÛÛ* -
)
ÛÛ- .
(
ÛÛ. /
da
ÛÛ/ 1
/
ÛÛ2 3
$num
ÛÛ4 6
)
ÛÛ6 7
+
ÛÛ8 9
$num
ÛÛ: ;
;
ÛÛ; <
da
ÙÙ$ &
=
ÙÙ' (
da
ÙÙ) +
%
ÙÙ, -
$num
ÙÙ. 0
;
ÙÙ0 1
break
ıı$ )
;
ıı) *
}
ˆˆ 
ye
˜˜ 
=
˜˜  
ddat
˜˜! %
.
˜˜% &
Year
˜˜& *
-
˜˜+ ,
$num
˜˜- 0
;
˜˜0 1
}
¯¯ 
else
˘˘ 
{
˙˙ 
da
˚˚ 
=
˚˚  
da
˚˚! #
-
˚˚$ %
$num
˚˚& )
;
˚˚) *
switch
¸¸ "
(
¸¸# $
da
¸¸$ &
%
¸¸' (
$num
¸¸) +
)
¸¸+ ,
{
˝˝ 
case
˛˛  $
$num
˛˛% &
:
˛˛& '
mo
ˇˇ$ &
=
ˇˇ' (
(
ˇˇ) *
da
ˇˇ* ,
/
ˇˇ- .
$num
ˇˇ/ 1
)
ˇˇ1 2
+
ˇˇ3 4
$num
ˇˇ5 6
;
ˇˇ6 7
da
ÄÄ$ &
=
ÄÄ' (
$num
ÄÄ) +
;
ÄÄ+ ,
break
ÅÅ$ )
;
ÅÅ) *
default
ÇÇ  '
:
ÇÇ' (
mo
ÉÉ$ &
=
ÉÉ' (
(
ÉÉ) *
int
ÉÉ* -
)
ÉÉ- .
(
ÉÉ. /
da
ÉÉ/ 1
/
ÉÉ2 3
$num
ÉÉ4 6
)
ÉÉ6 7
+
ÉÉ8 9
$num
ÉÉ: ;
;
ÉÉ; <
da
ÑÑ$ &
=
ÑÑ' (
da
ÑÑ) +
%
ÑÑ, -
$num
ÑÑ. 0
;
ÑÑ0 1
break
ÖÖ$ )
;
ÖÖ) *
}
ÜÜ 
ye
áá 
=
áá  
ddat
áá! %
.
áá% &
Year
áá& *
-
áá+ ,
$num
áá- 0
;
áá0 1
}
àà 
}
ââ 
else
ää 
{
ãã 
da
åå 
=
åå 
da
åå 
+
åå  !
$num
åå" $
;
åå$ %
switch
çç 
(
çç  
da
çç  "
%
çç# $
$num
çç% '
)
çç' (
{
éé 
case
èè  
$num
èè! "
:
èè" #
mo
êê  "
=
êê# $
(
êê% &
da
êê& (
/
êê) *
$num
êê+ -
)
êê- .
+
êê/ 0
$num
êê1 2
;
êê2 3
da
ëë  "
=
ëë# $
$num
ëë% '
;
ëë' (
break
íí  %
;
íí% &
default
ìì #
:
ìì# $
mo
îî  "
=
îî# $
(
îî% &
int
îî& )
)
îî) *
(
îî* +
da
îî+ -
/
îî. /
$num
îî0 2
)
îî2 3
+
îî4 5
$num
îî6 8
;
îî8 9
da
ïï  "
=
ïï# $
da
ïï% '
%
ïï( )
$num
ïï* ,
;
ïï, -
break
ññ  %
;
ññ% &
}
óó 
ye
òò 
=
òò 
ddat
òò !
.
òò! "
Year
òò" &
-
òò' (
$num
òò) ,
;
òò, -
}
ôô 
}
öö 
tt1
õõ 
=
õõ 
ye
õõ 
.
õõ 
ToString
õõ !
(
õõ! "
)
õõ" #
.
õõ# $
Trim
õõ$ (
(
õõ( )
)
õõ) *
;
õõ* +
tt2
úú 
=
úú 
mo
úú 
.
úú 
ToString
úú !
(
úú! "
)
úú" #
.
úú# $
Trim
úú$ (
(
úú( )
)
úú) *
;
úú* +
if
ùù 
(
ùù 
tt2
ùù 
.
ùù 
Length
ùù 
==
ùù !
$num
ùù" #
)
ùù# $
tt2
ûû 
=
ûû 
$str
ûû 
+
ûû 
tt2
ûû  #
;
ûû# $
tt3
üü 
=
üü 
da
üü 
.
üü 
ToString
üü !
(
üü! "
)
üü" #
.
üü# $
Trim
üü$ (
(
üü( )
)
üü) *
;
üü* +
if
†† 
(
†† 
tt3
†† 
.
†† 
Length
†† 
==
†† !
$num
††" #
)
††# $
tt3
°° 
=
°° 
$str
°° 
+
°° 
tt3
°°  #
;
°°# $
return
££ 
(
££ 
tt1
££ 
+
££ 
$str
££ !
+
££" #
tt2
££$ '
+
££( )
$str
££* -
+
££. /
tt3
££0 3
)
££3 4
;
££4 5
}
§§ 
catch
•• 
{
¶¶ 
return
ßß 
$str
ßß 
;
ßß 
}
®® 
}
©© 	
public
™™ 
int
™™ 
GetWeek
™™ 
(
™™ 
string
™™ !
strdat
™™" (
)
™™( )
{
´´ 	
int
¨¨ 
W
¨¨ 
=
¨¨ 
$num
¨¨ 
;
¨¨ 
int
≠≠ 
dys
≠≠ 
=
≠≠ 
$num
≠≠ 
;
≠≠ 
int
ÆÆ 
Week1
ÆÆ 
=
ÆÆ 
$num
ÆÆ 
;
ÆÆ 
string
ØØ 
[
ØØ 
]
ØØ 
str
ØØ 
=
ØØ 
strdat
ØØ !
.
ØØ! "
Split
ØØ" '
(
ØØ' (
$char
ØØ( +
)
ØØ+ ,
;
ØØ, -
DateTime
∞∞ 
FirstDayOfYear
∞∞ #
=
∞∞$ %
this
∞∞& *
.
∞∞* +
ShtoM
∞∞+ 0
(
∞∞0 1
str
∞∞1 4
[
∞∞4 5
$num
∞∞5 6
]
∞∞6 7
.
∞∞7 8
ToString
∞∞8 @
(
∞∞@ A
)
∞∞A B
+
∞∞C D
$str
∞∞E M
)
∞∞M N
;
∞∞N O
switch
±± 
(
±± 
FirstDayOfYear
±± "
.
±±" #
	DayOfWeek
±±# ,
)
±±, -
{
≤≤ 
case
≥≥ 
	DayOfWeek
≥≥ 
.
≥≥ 
Saturday
≥≥ '
:
≥≥' (
Week1
¥¥ 
=
¥¥ 
$num
¥¥ 
;
¥¥ 
break
µµ 
;
µµ 
case
∂∂ 
	DayOfWeek
∂∂ 
.
∂∂ 
Sunday
∂∂ %
:
∂∂% &
Week1
∑∑ 
=
∑∑ 
$num
∑∑ 
;
∑∑ 
break
∏∏ 
;
∏∏ 
case
ππ 
	DayOfWeek
ππ 
.
ππ 
Monday
ππ %
:
ππ% &
Week1
∫∫ 
=
∫∫ 
$num
∫∫ 
;
∫∫ 
break
ªª 
;
ªª 
case
ºº 
	DayOfWeek
ºº 
.
ºº 
Tuesday
ºº &
:
ºº& '
Week1
ΩΩ 
=
ΩΩ 
$num
ΩΩ 
;
ΩΩ 
break
ææ 
;
ææ 
case
øø 
	DayOfWeek
øø 
.
øø 
	Wednesday
øø (
:
øø( )
Week1
¿¿ 
=
¿¿ 
$num
¿¿ 
;
¿¿ 
break
¡¡ 
;
¡¡ 
case
¬¬ 
	DayOfWeek
¬¬ 
.
¬¬ 
Thursday
¬¬ '
:
¬¬' (
Week1
√√ 
=
√√ 
$num
√√ 
;
√√ 
break
ƒƒ 
;
ƒƒ 
case
≈≈ 
	DayOfWeek
≈≈ 
.
≈≈ 
Friday
≈≈ %
:
≈≈% &
Week1
∆∆ 
=
∆∆ 
$num
∆∆ 
;
∆∆ 
break
«« 
;
«« 
}
»» 
int
ÀÀ 
m
ÀÀ 
=
ÀÀ 
int
ÀÀ 
.
ÀÀ 
Parse
ÀÀ 
(
ÀÀ 
str
ÀÀ !
[
ÀÀ! "
$num
ÀÀ" #
]
ÀÀ# $
.
ÀÀ$ %
ToString
ÀÀ% -
(
ÀÀ- .
)
ÀÀ. /
)
ÀÀ/ 0
;
ÀÀ0 1
int
ÃÃ 
d
ÃÃ 
=
ÃÃ 
int
ÃÃ 
.
ÃÃ 
Parse
ÃÃ 
(
ÃÃ 
str
ÃÃ !
[
ÃÃ! "
$num
ÃÃ" #
]
ÃÃ# $
.
ÃÃ$ %
ToString
ÃÃ% -
(
ÃÃ- .
)
ÃÃ. /
)
ÃÃ/ 0
;
ÃÃ0 1
if
ÕÕ 
(
ÕÕ 
m
ÕÕ 
<
ÕÕ 
$num
ÕÕ 
)
ÕÕ 
{
ŒŒ 
m
œœ 
--
œœ 
;
œœ 
dys
–– 
=
–– 
m
–– 
*
–– 
$num
–– 
+
–– 
d
––  
;
––  !
}
—— 
else
““ 
{
”” 
if
’’ 
(
’’ 
m
’’ 
==
’’ 
$num
’’ 
)
’’ 
{
÷÷ 
dys
◊◊ 
=
◊◊ 
$num
◊◊ 
*
◊◊ 
$num
◊◊  
+
◊◊! "
$num
◊◊# $
*
◊◊% &
$num
◊◊' )
+
◊◊* +
d
◊◊, -
;
◊◊- .
}
ÿÿ 
else
ŸŸ 
{
⁄⁄ 
m
€€ 
--
€€ 
;
€€ 
dys
‹‹ 
=
‹‹ 
m
‹‹ 
*
‹‹ 
$num
‹‹  
+
‹‹! "
d
‹‹# $
;
‹‹$ %
}
›› 
}
ﬁﬁ 
int
ﬂﬂ 
Rem
ﬂﬂ 
=
ﬂﬂ 
$num
ﬂﬂ 
;
ﬂﬂ 
Math
‡‡ 
.
‡‡ 
DivRem
‡‡ 
(
‡‡ 
(
‡‡ 
dys
‡‡ 
-
‡‡ 
Week1
‡‡ $
)
‡‡$ %
,
‡‡% &
$num
‡‡' (
,
‡‡( )
out
‡‡* -
Rem
‡‡. 1
)
‡‡1 2
;
‡‡2 3
if
·· 
(
·· 
Rem
·· 
>
·· 
$num
·· 
)
·· 
{
‚‚ 
W
„„ 
=
„„ 
(
„„ 
(
„„ 
dys
„„ 
-
„„ 
Week1
„„ !
)
„„! "
/
„„# $
$num
„„% &
)
„„& '
+
„„( )
$num
„„* +
;
„„+ ,
}
‰‰ 
else
ÂÂ 
{
ÊÊ 
W
ÁÁ 
=
ÁÁ 
(
ÁÁ 
(
ÁÁ 
dys
ÁÁ 
-
ÁÁ 
Week1
ÁÁ !
)
ÁÁ! "
/
ÁÁ# $
$num
ÁÁ% &
)
ÁÁ& '
+
ÁÁ( )
$num
ÁÁ* +
;
ÁÁ+ ,
}
ËË 
return
ÈÈ 
W
ÈÈ 
;
ÈÈ 
}
ÍÍ 	
public
ÎÎ 
int
ÎÎ 
GetYear
ÎÎ 
(
ÎÎ 
string
ÎÎ !
strdat
ÎÎ" (
)
ÎÎ( )
{
ÏÏ 	
string
ÌÌ 
[
ÌÌ 
]
ÌÌ 
str
ÌÌ 
=
ÌÌ 
new
ÌÌ 
string
ÌÌ %
[
ÌÌ% &
$num
ÌÌ& '
]
ÌÌ' (
;
ÌÌ( )
str
ÓÓ 
=
ÓÓ 
strdat
ÓÓ 
.
ÓÓ 
Split
ÓÓ 
(
ÓÓ 
$char
ÓÓ "
)
ÓÓ" #
;
ÓÓ# $
return
ÔÔ 
int
ÔÔ 
.
ÔÔ 
Parse
ÔÔ 
(
ÔÔ 
str
ÔÔ  
[
ÔÔ  !
$num
ÔÔ! "
]
ÔÔ" #
.
ÔÔ# $
ToString
ÔÔ$ ,
(
ÔÔ, -
)
ÔÔ- .
)
ÔÔ. /
;
ÔÔ/ 0
}
 	
public
ÒÒ 
string
ÒÒ 
GetDate
ÒÒ 
(
ÒÒ 
int
ÒÒ !
Year
ÒÒ" &
,
ÒÒ& '
int
ÒÒ( +
Week
ÒÒ, 0
,
ÒÒ0 1
int
ÒÒ2 5
	DayInWeek
ÒÒ6 ?
)
ÒÒ? @
{
ÚÚ 	
int
ÛÛ 
Day
ÛÛ 
=
ÛÛ 
$num
ÛÛ 
;
ÛÛ 
int
ÙÙ 
	DayInMoth
ÙÙ 
=
ÙÙ 
$num
ÙÙ 
;
ÙÙ 
int
ıı 
month
ıı 
=
ıı 
$num
ıı 
;
ıı 
int
ˆˆ 
Week1
ˆˆ 
=
ˆˆ 
$num
ˆˆ 
;
ˆˆ 
string
˜˜ 
	startDate
˜˜ 
=
˜˜ 
$str
˜˜  
;
˜˜  !
DateTime
¯¯ 
FirstDayOfYear
¯¯ #
=
¯¯$ %
this
¯¯& *
.
¯¯* +
ShtoM
¯¯+ 0
(
¯¯0 1
Year
¯¯1 5
.
¯¯5 6
ToString
¯¯6 >
(
¯¯> ?
)
¯¯? @
+
¯¯@ A
$str
¯¯A I
)
¯¯I J
;
¯¯J K
switch
˘˘ 
(
˘˘ 
FirstDayOfYear
˘˘ "
.
˘˘" #
	DayOfWeek
˘˘# ,
)
˘˘, -
{
˙˙ 
case
˚˚ 
	DayOfWeek
˚˚ 
.
˚˚ 
Saturday
˚˚ '
:
˚˚' (
Week1
¸¸ 
=
¸¸ 
$num
¸¸ 
;
¸¸ 
break
˝˝ 
;
˝˝ 
case
˛˛ 
	DayOfWeek
˛˛ 
.
˛˛ 
Sunday
˛˛ %
:
˛˛% &
Week1
ˇˇ 
=
ˇˇ 
$num
ˇˇ 
;
ˇˇ 
break
ÄÄ 
;
ÄÄ 
case
ÅÅ 
	DayOfWeek
ÅÅ 
.
ÅÅ 
Monday
ÅÅ %
:
ÅÅ% &
Week1
ÇÇ 
=
ÇÇ 
$num
ÇÇ 
;
ÇÇ 
break
ÉÉ 
;
ÉÉ 
case
ÑÑ 
	DayOfWeek
ÑÑ 
.
ÑÑ 
Tuesday
ÑÑ &
:
ÑÑ& '
Week1
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
break
ÜÜ 
;
ÜÜ 
case
áá 
	DayOfWeek
áá 
.
áá 
	Wednesday
áá (
:
áá( )
Week1
àà 
=
àà 
$num
àà 
;
àà 
break
ââ 
;
ââ 
case
ää 
	DayOfWeek
ää 
.
ää 
Thursday
ää '
:
ää' (
Week1
ãã 
=
ãã 
$num
ãã 
;
ãã 
break
åå 
;
åå 
case
çç 
	DayOfWeek
çç 
.
çç 
Friday
çç %
:
çç% &
Week1
éé 
=
éé 
$num
éé 
;
éé 
break
èè 
;
èè 
}
êê 
Day
ëë 
=
ëë 
(
ëë 
Week
ëë 
-
ëë 
$num
ëë 
)
ëë 
*
ëë 
$num
ëë 
+
ëë  
	DayInWeek
ëë! *
+
ëë* +
Week1
ëë+ 0
;
ëë0 1
if
íí 
(
íí 
Day
íí 
<=
íí 
$num
íí 
)
íí 
{
ìì 
month
îî 
=
îî 
(
îî 
Day
îî 
/
îî 
$num
îî !
)
îî! "
+
îî# $
$num
îî% &
;
îî& '
	DayInMoth
ïï 
=
ïï 
Day
ïï 
%
ïï  !
$num
ïï" $
;
ïï$ %
if
ññ 
(
ññ 
	DayInMoth
ññ 
==
ññ  
$num
ññ! "
)
ññ" #
{
óó 
month
òò 
--
òò 
;
òò 
	DayInMoth
ôô 
=
ôô 
$num
ôô  "
;
ôô" #
}
öö 
}
õõ 
else
úú 
{
ùù 
Day
ûû 
-=
ûû 
$num
ûû 
;
ûû 
month
üü 
=
üü 
(
üü 
Day
üü 
/
üü 
$num
üü !
)
üü! "
+
üü# $
$num
üü% &
;
üü& '
	DayInMoth
†† 
=
†† 
Day
†† 
%
††  !
$num
††" $
;
††$ %
if
°° 
(
°° 
	DayInMoth
°° 
==
°°  
$num
°°! "
)
°°" #
{
¢¢ 
month
££ 
--
££ 
;
££ 
	DayInMoth
§§ 
=
§§ 
$num
§§  "
;
§§" #
}
•• 
}
¶¶ 
if
ßß 
(
ßß 
month
ßß 
>
ßß 
$num
ßß 
&&
ßß 
	DayInMoth
ßß &
>
ßß' (
$num
ßß) *
)
ßß* +
	startDate
®® 
=
®® 
Year
®®  
.
®®  !
ToString
®®! )
(
®®) *
)
®®* +
+
®®, -
$str
®®. 1
+
®®2 3
month
®®4 9
.
®®9 :
ToString
®®: B
(
®®B C
)
®®C D
+
®®E F
$str
®®G J
+
®®K L
	DayInMoth
®®M V
.
®®V W
ToString
®®W _
(
®®_ `
)
®®` a
;
®®a b
if
©© 
(
©© 
month
©© 
<
©© 
$num
©© 
&&
©© 
	DayInMoth
©© '
>
©©( )
$num
©©* +
)
©©+ ,
	startDate
™™ 
=
™™ 
Year
™™  
.
™™  !
ToString
™™! )
(
™™) *
)
™™* +
+
™™, -
$str
™™. 2
+
™™3 4
month
™™5 :
.
™™: ;
ToString
™™; C
(
™™C D
)
™™D E
+
™™F G
$str
™™H K
+
™™L M
	DayInMoth
™™N W
.
™™W X
ToString
™™X `
(
™™` a
)
™™a b
;
™™b c
if
´´ 
(
´´ 
month
´´ 
>
´´ 
$num
´´ 
&&
´´ 
	DayInMoth
´´ &
<
´´' (
$num
´´) +
)
´´+ ,
	startDate
¨¨ 
=
¨¨ 
Year
¨¨  
.
¨¨  !
ToString
¨¨! )
(
¨¨) *
)
¨¨* +
+
¨¨, -
$str
¨¨. 1
+
¨¨2 3
month
¨¨4 9
.
¨¨9 :
ToString
¨¨: B
(
¨¨B C
)
¨¨C D
+
¨¨E F
$str
¨¨G K
+
¨¨L M
	DayInMoth
¨¨N W
.
¨¨W X
ToString
¨¨X `
(
¨¨` a
)
¨¨a b
;
¨¨b c
if
≠≠ 
(
≠≠ 
month
≠≠ 
<
≠≠ 
$num
≠≠ 
&&
≠≠ 
	DayInMoth
≠≠ '
<
≠≠( )
$num
≠≠* ,
)
≠≠, -
	startDate
ÆÆ 
=
ÆÆ 
Year
ÆÆ  
.
ÆÆ  !
ToString
ÆÆ! )
(
ÆÆ) *
)
ÆÆ* +
+
ÆÆ, -
$str
ÆÆ. 2
+
ÆÆ3 4
month
ÆÆ5 :
.
ÆÆ: ;
ToString
ÆÆ; C
(
ÆÆC D
)
ÆÆD E
+
ÆÆF G
$str
ÆÆH L
+
ÆÆM N
	DayInMoth
ÆÆO X
.
ÆÆX Y
ToString
ÆÆY a
(
ÆÆa b
)
ÆÆb c
;
ÆÆc d
return
ØØ 
	startDate
ØØ 
;
ØØ 
}
∞∞ 	
}
±± 
}≤≤ Ëb
D:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\CultureHelpers\CultureHelper.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public 

static 
class 
CultureHelper %
{ 
public 
static 
CultureInfo !
GetPersianCulture" 3
(3 4
)4 5
{ 	
CultureInfo 
persianCulture &
=' (
new) ,
CultureInfo- 8
(8 9
$str9 @
)@ A
;A B
DateTimeFormatInfo 
info #
=$ %
persianCulture& 4
.4 5
DateTimeFormat5 C
;C D
info 
. 
DayNames 
= 
new 
string  &
[& '
]' (
{) *
$str+ 3
,3 4
$str5 =
,= >
$str? G
,G H
$strI S
,S T
$strU ^
,^ _
$str` f
,f g
$strh n
}o p
;p q
info 
. 
AbbreviatedDayNames $
=% &
new' *
string+ 1
[1 2
]2 3
{4 5
$str6 9
,9 :
$str; >
,> ?
$str@ C
,C D
$strE H
,H I
$strJ M
,M N
$strO R
,R S
$strT W
}X Y
;Y Z
info 
. 

MonthNames 
= 
new !
string" (
[( )
]) *
{+ ,
$str- 6
,6 7
$str8 B
,B C
$strD K
,K L
$strM R
,R S
$strT [
,[ \
$str] e
,e f
$strg l
,l m
$strn t
,t u
$strv {
,{ |
$str	} Å
,
Å Ç
$str
É â
,
â ä
$str
ã í
,
í ì
$str
î ñ
}
ó ò
;
ò ô
info 
. !
AbbreviatedMonthNames &
=' (
new) ,
string- 3
[3 4
]4 5
{6 7
$str8 A
,A B
$strC M
,M N
$strO V
,V W
$strX ]
,] ^
$str_ f
,f g
$strh p
,p q
$strr w
,w x
$stry 
,	 Ä
$str
Å Ü
,
Ü á
$str
à å
,
å ç
$str
é î
,
î ï
$str
ñ ù
,
ù û
$str
ü °
}
¢ £
;
£ §
info 
. 
MonthGenitiveNames #
=$ %
new& )
string* 0
[0 1
]1 2
{3 4
$str5 >
,> ?
$str@ J
,J K
$strL S
,S T
$strU Z
,Z [
$str\ c
,c d
$stre m
,m n
$stro t
,t u
$strv |
,| }
$str	~ É
,
É Ñ
$str
Ö â
,
â ä
$str
ã ë
,
ë í
$str
ì ö
,
ö õ
$str
ú û
}
ü †
;
† °
info   
.   )
AbbreviatedMonthGenitiveNames   .
=  / 0
new  1 4
string  5 ;
[  ; <
]  < =
{  > ?
$str  @ I
,  I J
$str  K U
,  U V
$str  W ^
,  ^ _
$str  ` e
,  e f
$str  g n
,  n o
$str  p x
,  x y
$str  z 
,	   Ä
$str
  Å á
,
  á à
$str
  â é
,
  é è
$str
  ê î
,
  î ï
$str
  ñ ú
,
  ú ù
$str
  û •
,
  • ¶
$str
  ß ©
}
  ™ ´
;
  ´ ¨
info"" 
."" 
AMDesignator"" 
="" 
$str""  %
;""% &
info## 
.## 
PMDesignator## 
=## 
$str##  %
;##% &
info$$ 
.$$ 
ShortDatePattern$$ !
=$$" #
$str$$$ 0
;$$0 1
info%% 
.%% 
LongDatePattern%%  
=%%! "
$str%%# 6
;%%6 7
info&& 
.&& 
FullDateTimePattern&& $
=&&% &
$str&&' D
;&&D E
info'' 
.'' 
FirstDayOfWeek'' 
=''  !
	DayOfWeek''" +
.''+ ,
Saturday'', 4
;''4 5
PersianCalendar(( 
cal(( 
=((  !
new((" %
PersianCalendar((& 5
(((5 6
)((6 7
;((7 8
if++ 
(++ 
ConfigHelper++ 
.++ 
GetBoolProperty++ ,
(++, -
$str++- D
,++D E
false++F K
)++K L
)++L M
{,, 
typeof-- 
(-- 
DateTimeFormatInfo-- )
)--) *
.--* +
GetField--+ 3
(--3 4
$str--4 >
,--> ?
BindingFlags--@ L
.--L M
Public--M S
|--T U
BindingFlags--V b
.--b c
Instance--c k
|--l m
BindingFlags--n z
.--z {
	NonPublic	--{ Ñ
)
--Ñ Ö
.
--Ö Ü
SetValue
--Ü é
(
--é è
info
--è ì
,
--ì î
cal
--ï ò
)
--ò ô
;
--ô ö
object.. 
obj.. 
=.. 
typeof.. #
(..# $
DateTimeFormatInfo..$ 6
)..6 7
...7 8
GetField..8 @
(..@ A
$str..A W
,..W X
BindingFlags00  
.00  !
Public00! '
|00( )
BindingFlags00* 6
.006 7
Instance007 ?
|00@ A
BindingFlags00B N
.00N O
	NonPublic00O X
)00X Y
.00Y Z
GetValue00Z b
(00b c
info00c g
)00g h
;00h i
obj22 
.22 
GetType22 
(22 
)22 
.22 
	GetMethod22 '
(22' (
$str22( <
,22< =
BindingFlags33  
.33  !
	NonPublic33! *
|33+ ,
BindingFlags33- 9
.339 :
Instance33: B
)33B C
.33C D
Invoke33D J
(33J K
obj33K N
,33N O
new33P S
object33T Z
[33Z [
]33[ \
{33] ^
cal33_ b
.33b c
GetType33c j
(33j k
)33k l
.33l m
GetProperty33m x
(33x y
$str33y }
,33} ~
BindingFlags	33 ã
.
33ã å
Instance
33å î
|
33ï ñ
BindingFlags
33ó £
.
33£ §
	NonPublic
33§ ≠
)
33≠ Æ
.
33Æ Ø
GetValue
33Ø ∑
(
33∑ ∏
cal
33∏ ª
,
33ª º
null
33Ω ¡
)
33¡ ¬
}
33√ ƒ
)
33ƒ ≈
;
33≈ ∆
}77 
typeof99 
(99 
DateTimeFormatInfo99 %
)99% &
.99& '
GetField99' /
(99/ 0
$str990 :
,99: ;
BindingFlags99< H
.99H I
Public99I O
|99P Q
BindingFlags99R ^
.99^ _
Instance99_ g
|99h i
BindingFlags99j v
.99v w
	NonPublic	99w Ä
)
99Ä Å
.
99Å Ç
SetValue
99Ç ä
(
99ä ã
info
99ã è
,
99è ê
cal
99ë î
)
99î ï
;
99ï ñ
typeof:: 
(:: 
CultureInfo:: 
):: 
.::  
GetField::  (
(::( )
$str::) 3
,::3 4
(::5 6
BindingFlags::6 B
.::B C
	NonPublic::C L
|::M N
(::O P
BindingFlags::P \
.::\ ]
Public::] c
|::d e
BindingFlags::f r
.::r s
Instance::s {
)::{ |
)::| }
)::} ~
.::~ 
SetValue	:: á
(
::á à
persianCulture
::à ñ
,
::ñ ó
cal
::ò õ
)
::õ ú
;
::ú ù
persianCulture<< 
.<< 
DateTimeFormat<< )
=<<* +
info<<, 0
;<<0 1
persianCulture== 
.== 
NumberFormat== '
.==' (!
CurrencyDecimalDigits==( =
===> ?
$num==@ A
;==A B
return>> 
persianCulture>> !
;>>! "
}FF 	
publicWW 
staticWW 
stringWW 
ToLocalStringWW *
(WW* +
thisWW+ /
intWW0 3
iWW4 5
)WW5 6
{XX 	
switchYY 
(YY 
CultureInfoYY 
.YY  
CurrentCultureYY  .
.YY. /$
TwoLetterISOLanguageNameYY/ G
)YYG H
{ZZ 
case[[ 
$str[[ 
:[[ 
return\\ "
SubstituteArabicDigits\\ 1
(\\1 2
i\\2 3
.\\3 4
ToString\\4 <
(\\< =
)\\= >
)\\> ?
;\\? @
default^^ 
:^^ 
return__ 
i__ 
.__ 
ToString__ %
(__% &
)__& '
;__' (
}aa 
}cc 	
publickk 
statickk 
stringkk "
SubstituteArabicDigitskk 3
(kk3 4
stringkk4 :
inputkk; @
)kk@ A
{ll 	
ifmm 
(mm 
stringmm 
.mm 
IsNullOrEmptymm $
(mm$ %
inputmm% *
)mm* +
)mm+ ,
{mm- .
returnmm/ 5
inputmm6 ;
;mm; <
}mm= >
Encodingoo 
utf8oo 
=oo 
newoo 
UTF8Encodingoo  ,
(oo, -
)oo- .
;oo. /
Decoderpp 
utf8Decoderpp 
=pp  !
utf8pp" &
.pp& '

GetDecoderpp' 1
(pp1 2
)pp2 3
;pp3 4
StringBuilderqq 
resultqq  
=qq! "
newqq# &
StringBuilderqq' 4
(qq4 5
)qq5 6
;qq6 7
Charss 
[ss 
]ss 
translatedCharsss "
=ss# $
newss% (
Charss) -
[ss- .
$numss. /
]ss/ 0
;ss0 1
Chartt 
[tt 
]tt 

inputCharstt 
=tt 
inputtt  %
.tt% &
ToCharArraytt& 1
(tt1 2
)tt2 3
;tt3 4
Byteuu 
[uu 
]uu 
bytesuu 
=uu 
{uu 
$numuu  
,uu  !
$numuu" %
}uu& '
;uu' (
foreachww 
(ww 
Charww 
cww 
inww 

inputCharsww )
)ww) *
{xx 
ifyy 
(yy 
Charyy 
.yy 
IsDigityy  
(yy  !
cyy! "
)yy" #
)yy# $
{zz 
bytes}} 
[}} 
$num}} 
]}} 
=}} 
Convert}} &
.}}& '
ToByte}}' -
(}}- .
$num}}. 1
+}}2 3
Convert}}4 ;
.}}; <
ToInt32}}< C
(}}C D
char}}D H
.}}H I
GetNumericValue}}I X
(}}X Y
c}}Y Z
)}}Z [
)}}[ \
)}}\ ]
;}}] ^
utf8Decoder~~ 
.~~  
GetChars~~  (
(~~( )
bytes~~) .
,~~. /
$num~~0 1
,~~1 2
$num~~3 4
,~~4 5
translatedChars~~6 E
,~~E F
$num~~G H
)~~H I
;~~I J
result 
. 
Append !
(! "
translatedChars" 1
[1 2
$num2 3
]3 4
)4 5
;5 6
}
ÄÄ 
else
ÅÅ 
{
ÇÇ 
result
ÉÉ 
.
ÉÉ 
Append
ÉÉ !
(
ÉÉ! "
c
ÉÉ" #
)
ÉÉ# $
;
ÉÉ$ %
}
ÑÑ 
}
ÖÖ 
return
áá 
result
áá 
.
áá 
ToString
áá "
(
áá" #
)
áá# $
;
áá$ %
}
àà 	
}
çç 
}éé ÿ#
qD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\CurrencyHelper.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public 

class 
CurrencyHelper 
{ 
static 

Dictionary 
< 
string  
,  !
CultureInfo" -
>- . 
_currencyCultureInfo/ C
;C D
static 
CurrencyHelper 
( 
) 
{ 	 
_currencyCultureInfo  
=! "
new# &

Dictionary' 1
<1 2
string2 8
,8 9
CultureInfo: E
>E F
(F G
)G H
;H I
CultureInfo 
[ 
] 
	_cultures #
=$ %
CultureInfo& 1
.1 2
GetCultures2 =
(= >
CultureTypes> J
.J K
SpecificCulturesK [
)[ \
;\ ]
foreach 
( 
CultureInfo  
ci! #
in$ &
	_cultures' 0
)0 1
{ 
try 
{ 

RegionInfo 
ri !
=" #
new$ '

RegionInfo( 2
(2 3
ci3 5
.5 6
LCID6 :
): ;
;; <
if"" 
("" 
!""  
_currencyCultureInfo"" -
.""- .
ContainsKey"". 9
(""9 :
ri"": <
.""< =
ISOCurrencySymbol""= N
)""N O
)""O P 
_currencyCultureInfo## ,
.##, -
Add##- 0
(##0 1
ri##1 3
.##3 4
ISOCurrencySymbol##4 E
,##E F
ci##G I
)##I J
;##J K
}$$ 
catch%% 
(%% 
ArgumentException%% (
)%%( )
{%%* +
}%%, -
}&& 
}'' 	
static.. 
public.. 
CultureInfo.. !&
CultureInfoFromCurrencyISO.." <
(..< =
string..= C
isoCode..D K
)..K L
{// 	
if00 
(00  
_currencyCultureInfo00 $
.00$ %
ContainsKey00% 0
(000 1
isoCode001 8
)008 9
)009 :
return11  
_currencyCultureInfo11 +
[11+ ,
isoCode11, 3
]113 4
;114 5
else22 
return33 
null33 
;33 
}44 	
static<< 
public<< 
string<< 
FormatCurrency<< +
(<<+ ,
decimal<<, 3
amount<<4 :
,<<: ;
string<<< B
currencyISO<<C N
)<<N O
{== 	
CultureInfo>> 
c>> 
=>> &
CultureInfoFromCurrencyISO>> 6
(>>6 7
currencyISO>>7 B
)>>B C
;>>C D
if?? 
(?? 
c?? 
==?? 
null?? 
)?? 
{@@ 
cDD 
=DD 
CultureInfoDD 
.DD  !
CreateSpecificCultureDD  5
(DD5 6
$strDD6 =
)DD= >
;DD> ?
cEE 
.EE 
NumberFormatEE 
.EE 
CurrencySymbolEE -
=EE. /
$strEE0 2
;EE2 3
cFF 
.FF 
NumberFormatFF 
.FF !
CurrencyDecimalDigitsFF 4
=FF5 6
$numFF7 8
;FF8 9
cGG 
.GG 
NumberFormatGG 
.GG $
CurrencyDecimalSeparatorGG 7
=GG8 9
$strGG: =
;GG= >
cHH 
.HH 
NumberFormatHH 
.HH "
CurrencyGroupSeparatorHH 5
=HH6 7
$strHH8 ;
;HH; <
returnJJ 
StringJJ 
.JJ 
FormatJJ $
(JJ$ %
$strJJ% .
,JJ. /
currencyISOJJ0 ;
,JJ; <
amountJJ= C
.JJC D
ToStringJJD L
(JJL M
$strJJM P
,JJP Q
cJJR S
.JJS T
NumberFormatJJT `
)JJ` a
)JJa b
;JJb c
}KK 
elseLL 
returnMM 
amountMM 
.MM 
ToStringMM &
(MM& '
$strMM' *
,MM* +
cMM, -
.MM- .
NumberFormatMM. :
)MM: ;
;MM; <
}NN 	
}QQ 
}RR Ó∆
qD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\DateTimeHelper.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public 

static 
class 
DateTimeHelper &
{ 
private 
static 
readonly 
ILog !
log" %
=& '

LogManager( 2
.2 3
	GetLogger3 <
(< =
typeof= C
(C D
DateTimeHelperD R
)R S
)S T
;T U
public)) 
const)) 
string)) #
AfghanistanStandardTime)) 3
=))4 5
$str	))6 ù
;
))ù û
public** 
const** 
string** 
AlaskanStandardTime** /
=**0 1
$str	**2 ó
;
**ó ò
public++ 
const++ 
string++ 
ArabianStandardTime++ /
=++0 1
$str	++2 ô
;
++ô ö
public,, 
const,, 
string,, 
ArabicStandardTime,, .
=,,/ 0
$str	,,1 ì
;
,,ì î
public-- 
const-- 
string-- 
ArabStandardTime-- ,
=--- .
$str	--/ ä
;
--ä ã
public.. 
const.. 
string.. !
ArgentinaStandardTime.. 1
=..2 3
$str	..4 ı
;
..ı ˆ
public// 
const// 
string//  
AtlanticStandardTime// 0
=//1 2
$str	//3 ´
;
//´ ¨
public00 
const00 
string00 "
AUSCentralStandardTime00 2
=003 4
$str	005 ù
;
00ù û
public11 
const11 
string11 "
AUSEasternStandardTime11 2
=113 4
$str	115 ∫
;
11∫ ª
public22 
const22 
string22 "
AzerbaijanStandardTime22 2
=223 4
$str	225 ‹
;
22‹ ›
public33 
const33 
string33 
AzoresStandardTime33 .
=33/ 0
$str	331 Œ
;
33Œ œ
public44 
const44 
string44 %
CanadaCentralStandardTime44 5
=446 7
$str	448 ∞
;
44∞ ±
public55 
const55 
string55 !
CapeVerdeStandardTime55 1
=552 3
$str	554 °
;
55° ¢
public66 
const66 
string66  
CaucasusStandardTime66 0
=661 2
$str	663 ◊
;
66◊ ÿ
public77 
const77 
string77 $
CenAustraliaStandardTime77 4
=775 6
$str	777 ≤
;
77≤ ≥
public88 
const88 
string88 &
CentralAmericaStandardTime88 6
=887 8
$str	889 ∑
;
88∑ ∏
public99 
const99 
string99 #
CentralAsiaStandardTime99 3
=994 5
$str	996 ®
;
99® ©
public:: 
const:: 
string:: $
CentralBrazilianStandard:: 4
=::5 6
$str	::7 Œ
;
::Œ œ
public;; 
const;; 
string;; '
CentralEuropeanStandardTime;; 7
=;;8 9
$str	;;: é
;
;;é è
public<< 
const<< 
string<< %
CentralEuropeStandardTime<< 5
=<<6 7
$str	<<8 ó
;
<<ó ò
public== 
const== 
string== &
CentralPacificStandardTime== 6
===7 8
$str	==9  
;
==  À
public>> 
const>> 
string>> 
CentralStandardTime>> /
=>>0 1
$str	>>2 ´
;
>>´ ¨
public?? 
const?? 
string?? %
CentralStandardTimeMexico?? 5
=??6 7
$str	??8 ë
;
??ë í
public@@ 
const@@ 
string@@ 
ChinaStandardTime@@ -
=@@. /
$str	@@0 •
;
@@• ¶
publicAA 
constAA 
stringAA  
DatelineStandardTimeAA 0
=AA1 2
$str	AA3 ©
;
AA© ™
publicBB 
constBB 
stringBB 
EAfricaStandardTimeBB /
=BB0 1
$str	BB2 ï
;
BBï ñ
publicCC 
constCC 
stringCC "
EAustraliaStandardTimeCC 2
=CC3 4
$str	CC5 ¢
;
CC¢ £
publicDD 
constDD 
stringDD 
EEuropeStandardTimeDD /
=DD0 1
$str	DD2 ◊
;
DD◊ ÿ
publicEE 
constEE 
stringEE %
ESouthAmericaStandardTimeEE 5
=EE6 7
$str	EE8 Œ
;
EEŒ œ
publicFF 
constFF 
stringFF 
EasternStandardTimeFF /
=FF0 1
$str	FF2 ´
;
FF´ ¨
publicGG 
constGG 
stringGG 
EgyptStandardTimeGG -
=GG. /
$str	GG0 ø
;
GGø ¿
publicHH 
constHH 
stringHH $
EkaterinburgStandardTimeHH 4
=HH5 6
$str	HH7 Ï
;
HHÏ Ì
publicII 
constII 
stringII 
FijiStandardTimeII ,
=II- .
$str	II/ ô
;
IIô ö
publicJJ 
constJJ 
stringJJ 
FLEStandardTimeJJ +
=JJ, -
$str	JJ. È
;
JJÈ Í
publicKK 
constKK 
stringKK  
GeorgianStandardTimeKK 0
=KK1 2
$str	KK3 ì
;
KKì î
publicLL 
constLL 
stringLL 
GMTStandardTimeLL +
=LL, -
$str	LL. Î
;
LLÎ Ï
publicMM 
constMM 
stringMM !
GreenlandStandardTimeMM 1
=MM2 3
$str	MM4 ﬁ
;
MMﬁ ﬂ
publicNN 
constNN 
stringNN !
GreenwichStandardTimeNN 1
=NN2 3
$str	NN4 õ
;
NNõ ú
publicOO 
constOO 
stringOO 
GTBStandardTimeOO +
=OO, -
$str	OO. ◊
;
OO◊ ÿ
publicPP 
constPP 
stringPP  
HawaiianStandardTimePP 0
=PP1 2
$str	PP3 ì
;
PPì î
publicQQ 
constQQ 
stringQQ 
IndiaStandardTimeQQ -
=QQ. /
$str	QQ0 £
;
QQ£ §
publicRR 
constRR 
stringRR 
IranStandardTimeRR ,
=RR- .
$str	RR/ €
;
RR€ ‹
publicSS 
constSS 
stringSS 
IsraelStandardTimeSS .
=SS/ 0
$str	SS1 –

;
SS–
 —

publicTT 
constTT 
stringTT 
JordanStandardTimeTT .
=TT/ 0
$str	TT1 î
;
TTî ï
publicUU 
constUU 
stringUU 
KoreaStandardTimeUU -
=UU. /
$str	UU0 Ö
;
UUÖ Ü
publicVV 
constVV 
stringVV !
MauritiusStandardTimeVV 1
=VV2 3
$str	VV4 ¢
;
VV¢ £
publicWW 
constWW 
stringWW #
MidAtlanticStandardTimeWW 3
=WW4 5
$str	WW6 Î
;
WWÎ Ï
publicXX 
constXX 
stringXX "
MiddleEastStandardTimeXX 2
=XX3 4
$str	XX5 ·
;
XX· ‚
publicYY 
constYY 
stringYY "
MontevideoStandardTimeYY 2
=YY3 4
$str	YY5 ¶
;
YY¶ ß
publicZZ 
constZZ 
stringZZ 
MoroccoStandardTimeZZ /
=ZZ0 1
$str	ZZ2 ’
;
ZZ’ ÷
public[[ 
const[[ 
string[[  
MountainStandardTime[[ 0
=[[1 2
$str	[[3 ∞
;
[[∞ ±
public\\ 
const\\ 
string\\ &
MountainStandardTimeMexico\\ 6
=\\7 8
$str	\\9 ç
;
\\ç é
public]] 
const]] 
string]] 
MyanmarStandardTime]] /
=]]0 1
$str	]]2 ò
;
]]ò ô
public^^ 
const^^ 
string^^ $
NCentralAsiaStandardTime^^ 4
=^^5 6
$str	^^7 ¸
;
^^¸ ˝
public__ 
const__ 
string__ 
NamibiaStandardTime__ /
=__0 1
$str	__2 ‘
;
__‘ ’
public`` 
const`` 
string`` 
NepalStandardTime`` -
=``. /
$str	``0 â
;
``â ä
publicaa 
constaa 
stringaa $
NewfoundlandStandardTimeaa 4
=aa5 6
$str	aa7 ±
;
aa± ≤
publicbb 
constbb 
stringbb "
NewZealandStandardTimebb 2
=bb3 4
$str	bb5 ı
;
bbı ˆ
publiccc 
constcc 
stringcc %
NorthAsiaEastStandardTimecc 5
=cc6 7
$str	cc8 ˇ
;
ccˇ Ä
publicdd 
constdd 
stringdd !
NorthAsiaStandardTimedd 1
=dd2 3
$str	dd4 ‚
;
dd‚ „
publicee 
constee 
stringee !
PacificSAStandardTimeee 1
=ee2 3
$str	ee4 Ä
;
eeÄ Å
publicff 
constff 
stringff 
PacificStandardTimeff /
=ff0 1
$str	ff2 ´
;
ff´ ¨
publicgg 
constgg 
stringgg %
PacificStandardTimeMexicogg 5
=gg6 7
$str	gg8 Ü
;
ggÜ á
publichh 
consthh 
stringhh  
PakistanStandardTimehh 0
=hh1 2
$str	hh3 Í
;
hhÍ Î
publicii 
constii 
stringii 
RomanceStandardTimeii /
=ii0 1
$str	ii2 Ó
;
iiÓ Ô
publicjj 
constjj 
stringjj 
RussianStandardTimejj /
=jj0 1
$str	jj2 Ì
;
jjÌ Ó
publickk 
constkk 
stringkk !
SAEasternStandardTimekk 1
=kk2 3
$str	kk4 û
;
kkû ü
publicll 
constll 
stringll 
SamoaStandardTimell -
=ll. /
$str	ll0 ï
;
llï ñ
publicmm 
constmm 
stringmm !
SAPacificStandardTimemm 1
=mm2 3
$str	mm4 ≥
;
mm≥ ¥
publicnn 
constnn 
stringnn !
SAWesternStandardTimenn 1
=nn2 3
$str	nn4 ö
;
nnö õ
publicoo 
constoo 
stringoo 
SEAsiaStandardTimeoo .
=oo/ 0
$str	oo1 û
;
ooû ü
publicpp 
constpp 
stringpp !
SingaporeStandardTimepp 1
=pp2 3
$str	pp4 ≥
;
pp≥ ¥
publicqq 
constqq 
stringqq #
SouthAfricaStandardTimeqq 3
=qq4 5
$str	qq6 ´
;
qq´ ¨
publicrr 
constrr 
stringrr  
SriLankaStandardTimerr 0
=rr1 2
$str	rr3 ¢
;
rr¢ £
publicss 
constss 
stringss 
TaipeiStandardTimess .
=ss/ 0
$str	ss1 ä
;
ssä ã
publictt 
consttt 
stringtt  
TasmaniaStandardTimett 0
=tt1 2
$str	tt3 ö
;
ttö õ
publicuu 
constuu 
stringuu 
TokyoStandardTimeuu -
=uu. /
$str	uu0 ï
;
uuï ñ
publicvv 
constvv 
stringvv 
TongaStandardTimevv -
=vv. /
$str	vv0 ä
;
vvä ã
publicww 
constww 
stringww !
USEasternStandardTimeww 1
=ww2 3
$str	ww4 ¢
;
ww¢ £
publicxx 
constxx 
stringxx "
USMountainStandardTimexx 2
=xx3 4
$str	xx5 ü
;
xxü †
publicyy 
constyy 
stringyy !
VenezuelaStandardTimeyy 1
=yy2 3
$str	yy4 ò
;
yyò ô
publiczz 
constzz 
stringzz #
VladivostokStandardTimezz 3
=zz4 5
$str	zz6 Á
;
zzÁ Ë
public{{ 
const{{ 
string{{ "
WAustraliaStandardTime{{ 2
={{3 4
$str	{{5 £
;
{{£ §
public|| 
const|| 
string|| &
WCentralAfricaStandardTime|| 6
=||7 8
$str	||9 ø
;
||ø ¿
public}} 
const}} 
string}} 
WEuropeStandardTime}} /
=}}0 1
$str	}}2 Å
;
}}Å Ç
public~~ 
const~~ 
string~~  
WestAsiaStandardTime~~ 0
=~~1 2
$str	~~3 ó
;
~~ó ò
public 
const 
string #
WestPacificStandardTime 3
=4 5
$str	6 ≠
;
≠ Æ
public
ÄÄ 
const
ÄÄ 
string
ÄÄ !
YakutskStandardTime
ÄÄ /
=
ÄÄ0 1
$strÄÄ2 ”
;ÄÄ” ‘
public
ÎÎ 
static
ÎÎ 
List
ÎÎ 
<
ÎÎ 
TimeZoneInfo
ÎÎ '
>
ÎÎ' (
GetTimeZoneList
ÎÎ) 8
(
ÎÎ8 9
)
ÎÎ9 :
{
ÏÏ 	
List
ÌÌ 
<
ÌÌ 
TimeZoneInfo
ÌÌ 
>
ÌÌ 
	timeZones
ÌÌ (
=
ÌÌ) *
new
ÌÌ+ .
List
ÌÌ/ 3
<
ÌÌ3 4
TimeZoneInfo
ÌÌ4 @
>
ÌÌ@ A
(
ÌÌA B
)
ÌÌB C
;
ÌÌC D
	timeZones
ÔÔ 
.
ÔÔ 
Add
ÔÔ 
(
ÔÔ 
TimeZoneInfo
ÔÔ &
.
ÔÔ& '"
FromSerializedString
ÔÔ' ;
(
ÔÔ; <%
AfghanistanStandardTime
ÔÔ< S
)
ÔÔS T
)
ÔÔT U
;
ÔÔU V
	timeZones
 
.
 
Add
 
(
 
TimeZoneInfo
 &
.
& '"
FromSerializedString
' ;
(
; <!
AlaskanStandardTime
< O
)
O P
)
P Q
;
Q R
	timeZones
ÒÒ 
.
ÒÒ 
Add
ÒÒ 
(
ÒÒ 
TimeZoneInfo
ÒÒ &
.
ÒÒ& '"
FromSerializedString
ÒÒ' ;
(
ÒÒ; <!
ArabianStandardTime
ÒÒ< O
)
ÒÒO P
)
ÒÒP Q
;
ÒÒQ R
	timeZones
ÚÚ 
.
ÚÚ 
Add
ÚÚ 
(
ÚÚ 
TimeZoneInfo
ÚÚ &
.
ÚÚ& '"
FromSerializedString
ÚÚ' ;
(
ÚÚ; < 
ArabicStandardTime
ÚÚ< N
)
ÚÚN O
)
ÚÚO P
;
ÚÚP Q
	timeZones
ÛÛ 
.
ÛÛ 
Add
ÛÛ 
(
ÛÛ 
TimeZoneInfo
ÛÛ &
.
ÛÛ& '"
FromSerializedString
ÛÛ' ;
(
ÛÛ; <
ArabStandardTime
ÛÛ< L
)
ÛÛL M
)
ÛÛM N
;
ÛÛN O
	timeZones
ÙÙ 
.
ÙÙ 
Add
ÙÙ 
(
ÙÙ 
TimeZoneInfo
ÙÙ &
.
ÙÙ& '"
FromSerializedString
ÙÙ' ;
(
ÙÙ; <#
ArgentinaStandardTime
ÙÙ< Q
)
ÙÙQ R
)
ÙÙR S
;
ÙÙS T
	timeZones
ıı 
.
ıı 
Add
ıı 
(
ıı 
TimeZoneInfo
ıı &
.
ıı& '"
FromSerializedString
ıı' ;
(
ıı; <"
AtlanticStandardTime
ıı< P
)
ııP Q
)
ııQ R
;
ııR S
	timeZones
ˆˆ 
.
ˆˆ 
Add
ˆˆ 
(
ˆˆ 
TimeZoneInfo
ˆˆ &
.
ˆˆ& '"
FromSerializedString
ˆˆ' ;
(
ˆˆ; <$
AUSCentralStandardTime
ˆˆ< R
)
ˆˆR S
)
ˆˆS T
;
ˆˆT U
	timeZones
˜˜ 
.
˜˜ 
Add
˜˜ 
(
˜˜ 
TimeZoneInfo
˜˜ &
.
˜˜& '"
FromSerializedString
˜˜' ;
(
˜˜; <$
AUSEasternStandardTime
˜˜< R
)
˜˜R S
)
˜˜S T
;
˜˜T U
	timeZones
¯¯ 
.
¯¯ 
Add
¯¯ 
(
¯¯ 
TimeZoneInfo
¯¯ &
.
¯¯& '"
FromSerializedString
¯¯' ;
(
¯¯; <$
AzerbaijanStandardTime
¯¯< R
)
¯¯R S
)
¯¯S T
;
¯¯T U
	timeZones
˘˘ 
.
˘˘ 
Add
˘˘ 
(
˘˘ 
TimeZoneInfo
˘˘ &
.
˘˘& '"
FromSerializedString
˘˘' ;
(
˘˘; < 
AzoresStandardTime
˘˘< N
)
˘˘N O
)
˘˘O P
;
˘˘P Q
	timeZones
˙˙ 
.
˙˙ 
Add
˙˙ 
(
˙˙ 
TimeZoneInfo
˙˙ &
.
˙˙& '"
FromSerializedString
˙˙' ;
(
˙˙; <'
CanadaCentralStandardTime
˙˙< U
)
˙˙U V
)
˙˙V W
;
˙˙W X
	timeZones
˚˚ 
.
˚˚ 
Add
˚˚ 
(
˚˚ 
TimeZoneInfo
˚˚ &
.
˚˚& '"
FromSerializedString
˚˚' ;
(
˚˚; <#
CapeVerdeStandardTime
˚˚< Q
)
˚˚Q R
)
˚˚R S
;
˚˚S T
	timeZones
¸¸ 
.
¸¸ 
Add
¸¸ 
(
¸¸ 
TimeZoneInfo
¸¸ &
.
¸¸& '"
FromSerializedString
¸¸' ;
(
¸¸; <"
CaucasusStandardTime
¸¸< P
)
¸¸P Q
)
¸¸Q R
;
¸¸R S
	timeZones
˝˝ 
.
˝˝ 
Add
˝˝ 
(
˝˝ 
TimeZoneInfo
˝˝ &
.
˝˝& '"
FromSerializedString
˝˝' ;
(
˝˝; <&
CenAustraliaStandardTime
˝˝< T
)
˝˝T U
)
˝˝U V
;
˝˝V W
	timeZones
˛˛ 
.
˛˛ 
Add
˛˛ 
(
˛˛ 
TimeZoneInfo
˛˛ &
.
˛˛& '"
FromSerializedString
˛˛' ;
(
˛˛; <(
CentralAmericaStandardTime
˛˛< V
)
˛˛V W
)
˛˛W X
;
˛˛X Y
	timeZones
ˇˇ 
.
ˇˇ 
Add
ˇˇ 
(
ˇˇ 
TimeZoneInfo
ˇˇ &
.
ˇˇ& '"
FromSerializedString
ˇˇ' ;
(
ˇˇ; <%
CentralAsiaStandardTime
ˇˇ< S
)
ˇˇS T
)
ˇˇT U
;
ˇˇU V
	timeZones
ÄÄ 
.
ÄÄ 
Add
ÄÄ 
(
ÄÄ 
TimeZoneInfo
ÄÄ &
.
ÄÄ& '"
FromSerializedString
ÄÄ' ;
(
ÄÄ; <&
CentralBrazilianStandard
ÄÄ< T
)
ÄÄT U
)
ÄÄU V
;
ÄÄV W
	timeZones
ÅÅ 
.
ÅÅ 
Add
ÅÅ 
(
ÅÅ 
TimeZoneInfo
ÅÅ &
.
ÅÅ& '"
FromSerializedString
ÅÅ' ;
(
ÅÅ; <)
CentralEuropeanStandardTime
ÅÅ< W
)
ÅÅW X
)
ÅÅX Y
;
ÅÅY Z
	timeZones
ÇÇ 
.
ÇÇ 
Add
ÇÇ 
(
ÇÇ 
TimeZoneInfo
ÇÇ &
.
ÇÇ& '"
FromSerializedString
ÇÇ' ;
(
ÇÇ; <'
CentralEuropeStandardTime
ÇÇ< U
)
ÇÇU V
)
ÇÇV W
;
ÇÇW X
	timeZones
ÉÉ 
.
ÉÉ 
Add
ÉÉ 
(
ÉÉ 
TimeZoneInfo
ÉÉ &
.
ÉÉ& '"
FromSerializedString
ÉÉ' ;
(
ÉÉ; <(
CentralPacificStandardTime
ÉÉ< V
)
ÉÉV W
)
ÉÉW X
;
ÉÉX Y
	timeZones
ÑÑ 
.
ÑÑ 
Add
ÑÑ 
(
ÑÑ 
TimeZoneInfo
ÑÑ &
.
ÑÑ& '"
FromSerializedString
ÑÑ' ;
(
ÑÑ; <!
CentralStandardTime
ÑÑ< O
)
ÑÑO P
)
ÑÑP Q
;
ÑÑQ R
	timeZones
ÖÖ 
.
ÖÖ 
Add
ÖÖ 
(
ÖÖ 
TimeZoneInfo
ÖÖ &
.
ÖÖ& '"
FromSerializedString
ÖÖ' ;
(
ÖÖ; <'
CentralStandardTimeMexico
ÖÖ< U
)
ÖÖU V
)
ÖÖV W
;
ÖÖW X
	timeZones
ÜÜ 
.
ÜÜ 
Add
ÜÜ 
(
ÜÜ 
TimeZoneInfo
ÜÜ &
.
ÜÜ& '"
FromSerializedString
ÜÜ' ;
(
ÜÜ; <
ChinaStandardTime
ÜÜ< M
)
ÜÜM N
)
ÜÜN O
;
ÜÜO P
	timeZones
áá 
.
áá 
Add
áá 
(
áá 
TimeZoneInfo
áá &
.
áá& '"
FromSerializedString
áá' ;
(
áá; <"
DatelineStandardTime
áá< P
)
ááP Q
)
ááQ R
;
ááR S
	timeZones
àà 
.
àà 
Add
àà 
(
àà 
TimeZoneInfo
àà &
.
àà& '"
FromSerializedString
àà' ;
(
àà; <!
EAfricaStandardTime
àà< O
)
ààO P
)
ààP Q
;
ààQ R
	timeZones
ââ 
.
ââ 
Add
ââ 
(
ââ 
TimeZoneInfo
ââ &
.
ââ& '"
FromSerializedString
ââ' ;
(
ââ; <$
EAustraliaStandardTime
ââ< R
)
ââR S
)
ââS T
;
ââT U
	timeZones
ää 
.
ää 
Add
ää 
(
ää 
TimeZoneInfo
ää &
.
ää& '"
FromSerializedString
ää' ;
(
ää; <!
EEuropeStandardTime
ää< O
)
ääO P
)
ääP Q
;
ääQ R
	timeZones
ãã 
.
ãã 
Add
ãã 
(
ãã 
TimeZoneInfo
ãã &
.
ãã& '"
FromSerializedString
ãã' ;
(
ãã; <'
ESouthAmericaStandardTime
ãã< U
)
ããU V
)
ããV W
;
ããW X
	timeZones
åå 
.
åå 
Add
åå 
(
åå 
TimeZoneInfo
åå &
.
åå& '"
FromSerializedString
åå' ;
(
åå; <!
EasternStandardTime
åå< O
)
ååO P
)
ååP Q
;
ååQ R
	timeZones
çç 
.
çç 
Add
çç 
(
çç 
TimeZoneInfo
çç &
.
çç& '"
FromSerializedString
çç' ;
(
çç; <
EgyptStandardTime
çç< M
)
ççM N
)
ççN O
;
ççO P
	timeZones
éé 
.
éé 
Add
éé 
(
éé 
TimeZoneInfo
éé &
.
éé& '"
FromSerializedString
éé' ;
(
éé; <&
EkaterinburgStandardTime
éé< T
)
ééT U
)
ééU V
;
ééV W
	timeZones
èè 
.
èè 
Add
èè 
(
èè 
TimeZoneInfo
èè &
.
èè& '"
FromSerializedString
èè' ;
(
èè; <
FijiStandardTime
èè< L
)
èèL M
)
èèM N
;
èèN O
	timeZones
êê 
.
êê 
Add
êê 
(
êê 
TimeZoneInfo
êê &
.
êê& '"
FromSerializedString
êê' ;
(
êê; <
FLEStandardTime
êê< K
)
êêK L
)
êêL M
;
êêM N
	timeZones
ëë 
.
ëë 
Add
ëë 
(
ëë 
TimeZoneInfo
ëë &
.
ëë& '"
FromSerializedString
ëë' ;
(
ëë; <"
GeorgianStandardTime
ëë< P
)
ëëP Q
)
ëëQ R
;
ëëR S
	timeZones
íí 
.
íí 
Add
íí 
(
íí 
TimeZoneInfo
íí &
.
íí& '"
FromSerializedString
íí' ;
(
íí; <
GMTStandardTime
íí< K
)
ííK L
)
ííL M
;
ííM N
	timeZones
ìì 
.
ìì 
Add
ìì 
(
ìì 
TimeZoneInfo
ìì &
.
ìì& '"
FromSerializedString
ìì' ;
(
ìì; <#
GreenlandStandardTime
ìì< Q
)
ììQ R
)
ììR S
;
ììS T
	timeZones
îî 
.
îî 
Add
îî 
(
îî 
TimeZoneInfo
îî &
.
îî& '"
FromSerializedString
îî' ;
(
îî; <#
GreenwichStandardTime
îî< Q
)
îîQ R
)
îîR S
;
îîS T
	timeZones
ïï 
.
ïï 
Add
ïï 
(
ïï 
TimeZoneInfo
ïï &
.
ïï& '"
FromSerializedString
ïï' ;
(
ïï; <
GTBStandardTime
ïï< K
)
ïïK L
)
ïïL M
;
ïïM N
	timeZones
ññ 
.
ññ 
Add
ññ 
(
ññ 
TimeZoneInfo
ññ &
.
ññ& '"
FromSerializedString
ññ' ;
(
ññ; <"
HawaiianStandardTime
ññ< P
)
ññP Q
)
ññQ R
;
ññR S
	timeZones
óó 
.
óó 
Add
óó 
(
óó 
TimeZoneInfo
óó &
.
óó& '"
FromSerializedString
óó' ;
(
óó; <
IndiaStandardTime
óó< M
)
óóM N
)
óóN O
;
óóO P
	timeZones
òò 
.
òò 
Add
òò 
(
òò 
TimeZoneInfo
òò &
.
òò& '"
FromSerializedString
òò' ;
(
òò; <
IranStandardTime
òò< L
)
òòL M
)
òòM N
;
òòN O
	timeZones
ôô 
.
ôô 
Add
ôô 
(
ôô 
TimeZoneInfo
ôô &
.
ôô& '"
FromSerializedString
ôô' ;
(
ôô; < 
IsraelStandardTime
ôô< N
)
ôôN O
)
ôôO P
;
ôôP Q
	timeZones
öö 
.
öö 
Add
öö 
(
öö 
TimeZoneInfo
öö &
.
öö& '"
FromSerializedString
öö' ;
(
öö; < 
JordanStandardTime
öö< N
)
ööN O
)
ööO P
;
ööP Q
	timeZones
õõ 
.
õõ 
Add
õõ 
(
õõ 
TimeZoneInfo
õõ &
.
õõ& '"
FromSerializedString
õõ' ;
(
õõ; <
KoreaStandardTime
õõ< M
)
õõM N
)
õõN O
;
õõO P
	timeZones
úú 
.
úú 
Add
úú 
(
úú 
TimeZoneInfo
úú &
.
úú& '"
FromSerializedString
úú' ;
(
úú; <#
MauritiusStandardTime
úú< Q
)
úúQ R
)
úúR S
;
úúS T
	timeZones
ùù 
.
ùù 
Add
ùù 
(
ùù 
TimeZoneInfo
ùù &
.
ùù& '"
FromSerializedString
ùù' ;
(
ùù; <%
MidAtlanticStandardTime
ùù< S
)
ùùS T
)
ùùT U
;
ùùU V
	timeZones
ûû 
.
ûû 
Add
ûû 
(
ûû 
TimeZoneInfo
ûû &
.
ûû& '"
FromSerializedString
ûû' ;
(
ûû; <$
MiddleEastStandardTime
ûû< R
)
ûûR S
)
ûûS T
;
ûûT U
	timeZones
üü 
.
üü 
Add
üü 
(
üü 
TimeZoneInfo
üü &
.
üü& '"
FromSerializedString
üü' ;
(
üü; <$
MontevideoStandardTime
üü< R
)
üüR S
)
üüS T
;
üüT U
	timeZones
†† 
.
†† 
Add
†† 
(
†† 
TimeZoneInfo
†† &
.
††& '"
FromSerializedString
††' ;
(
††; <!
MoroccoStandardTime
††< O
)
††O P
)
††P Q
;
††Q R
	timeZones
°° 
.
°° 
Add
°° 
(
°° 
TimeZoneInfo
°° &
.
°°& '"
FromSerializedString
°°' ;
(
°°; <"
MountainStandardTime
°°< P
)
°°P Q
)
°°Q R
;
°°R S
	timeZones
¢¢ 
.
¢¢ 
Add
¢¢ 
(
¢¢ 
TimeZoneInfo
¢¢ &
.
¢¢& '"
FromSerializedString
¢¢' ;
(
¢¢; <(
MountainStandardTimeMexico
¢¢< V
)
¢¢V W
)
¢¢W X
;
¢¢X Y
	timeZones
££ 
.
££ 
Add
££ 
(
££ 
TimeZoneInfo
££ &
.
££& '"
FromSerializedString
££' ;
(
££; <!
MyanmarStandardTime
££< O
)
££O P
)
££P Q
;
££Q R
	timeZones
§§ 
.
§§ 
Add
§§ 
(
§§ 
TimeZoneInfo
§§ &
.
§§& '"
FromSerializedString
§§' ;
(
§§; <&
NCentralAsiaStandardTime
§§< T
)
§§T U
)
§§U V
;
§§V W
	timeZones
•• 
.
•• 
Add
•• 
(
•• 
TimeZoneInfo
•• &
.
••& '"
FromSerializedString
••' ;
(
••; <!
NamibiaStandardTime
••< O
)
••O P
)
••P Q
;
••Q R
	timeZones
¶¶ 
.
¶¶ 
Add
¶¶ 
(
¶¶ 
TimeZoneInfo
¶¶ &
.
¶¶& '"
FromSerializedString
¶¶' ;
(
¶¶; <
NepalStandardTime
¶¶< M
)
¶¶M N
)
¶¶N O
;
¶¶O P
	timeZones
ßß 
.
ßß 
Add
ßß 
(
ßß 
TimeZoneInfo
ßß &
.
ßß& '"
FromSerializedString
ßß' ;
(
ßß; <&
NewfoundlandStandardTime
ßß< T
)
ßßT U
)
ßßU V
;
ßßV W
	timeZones
®® 
.
®® 
Add
®® 
(
®® 
TimeZoneInfo
®® &
.
®®& '"
FromSerializedString
®®' ;
(
®®; <$
NewZealandStandardTime
®®< R
)
®®R S
)
®®S T
;
®®T U
	timeZones
©© 
.
©© 
Add
©© 
(
©© 
TimeZoneInfo
©© &
.
©©& '"
FromSerializedString
©©' ;
(
©©; <'
NorthAsiaEastStandardTime
©©< U
)
©©U V
)
©©V W
;
©©W X
	timeZones
™™ 
.
™™ 
Add
™™ 
(
™™ 
TimeZoneInfo
™™ &
.
™™& '"
FromSerializedString
™™' ;
(
™™; <#
NorthAsiaStandardTime
™™< Q
)
™™Q R
)
™™R S
;
™™S T
	timeZones
´´ 
.
´´ 
Add
´´ 
(
´´ 
TimeZoneInfo
´´ &
.
´´& '"
FromSerializedString
´´' ;
(
´´; <#
PacificSAStandardTime
´´< Q
)
´´Q R
)
´´R S
;
´´S T
	timeZones
¨¨ 
.
¨¨ 
Add
¨¨ 
(
¨¨ 
TimeZoneInfo
¨¨ &
.
¨¨& '"
FromSerializedString
¨¨' ;
(
¨¨; <!
PacificStandardTime
¨¨< O
)
¨¨O P
)
¨¨P Q
;
¨¨Q R
	timeZones
≠≠ 
.
≠≠ 
Add
≠≠ 
(
≠≠ 
TimeZoneInfo
≠≠ &
.
≠≠& '"
FromSerializedString
≠≠' ;
(
≠≠; <'
PacificStandardTimeMexico
≠≠< U
)
≠≠U V
)
≠≠V W
;
≠≠W X
	timeZones
ÆÆ 
.
ÆÆ 
Add
ÆÆ 
(
ÆÆ 
TimeZoneInfo
ÆÆ &
.
ÆÆ& '"
FromSerializedString
ÆÆ' ;
(
ÆÆ; <"
PakistanStandardTime
ÆÆ< P
)
ÆÆP Q
)
ÆÆQ R
;
ÆÆR S
	timeZones
ØØ 
.
ØØ 
Add
ØØ 
(
ØØ 
TimeZoneInfo
ØØ &
.
ØØ& '"
FromSerializedString
ØØ' ;
(
ØØ; <!
RomanceStandardTime
ØØ< O
)
ØØO P
)
ØØP Q
;
ØØQ R
	timeZones
∞∞ 
.
∞∞ 
Add
∞∞ 
(
∞∞ 
TimeZoneInfo
∞∞ &
.
∞∞& '"
FromSerializedString
∞∞' ;
(
∞∞; <!
RussianStandardTime
∞∞< O
)
∞∞O P
)
∞∞P Q
;
∞∞Q R
	timeZones
±± 
.
±± 
Add
±± 
(
±± 
TimeZoneInfo
±± &
.
±±& '"
FromSerializedString
±±' ;
(
±±; <#
SAEasternStandardTime
±±< Q
)
±±Q R
)
±±R S
;
±±S T
	timeZones
≤≤ 
.
≤≤ 
Add
≤≤ 
(
≤≤ 
TimeZoneInfo
≤≤ &
.
≤≤& '"
FromSerializedString
≤≤' ;
(
≤≤; <
SamoaStandardTime
≤≤< M
)
≤≤M N
)
≤≤N O
;
≤≤O P
	timeZones
≥≥ 
.
≥≥ 
Add
≥≥ 
(
≥≥ 
TimeZoneInfo
≥≥ &
.
≥≥& '"
FromSerializedString
≥≥' ;
(
≥≥; <#
SAPacificStandardTime
≥≥< Q
)
≥≥Q R
)
≥≥R S
;
≥≥S T
	timeZones
¥¥ 
.
¥¥ 
Add
¥¥ 
(
¥¥ 
TimeZoneInfo
¥¥ &
.
¥¥& '"
FromSerializedString
¥¥' ;
(
¥¥; <#
SAWesternStandardTime
¥¥< Q
)
¥¥Q R
)
¥¥R S
;
¥¥S T
	timeZones
µµ 
.
µµ 
Add
µµ 
(
µµ 
TimeZoneInfo
µµ &
.
µµ& '"
FromSerializedString
µµ' ;
(
µµ; < 
SEAsiaStandardTime
µµ< N
)
µµN O
)
µµO P
;
µµP Q
	timeZones
∂∂ 
.
∂∂ 
Add
∂∂ 
(
∂∂ 
TimeZoneInfo
∂∂ &
.
∂∂& '"
FromSerializedString
∂∂' ;
(
∂∂; <#
SingaporeStandardTime
∂∂< Q
)
∂∂Q R
)
∂∂R S
;
∂∂S T
	timeZones
∑∑ 
.
∑∑ 
Add
∑∑ 
(
∑∑ 
TimeZoneInfo
∑∑ &
.
∑∑& '"
FromSerializedString
∑∑' ;
(
∑∑; <%
SouthAfricaStandardTime
∑∑< S
)
∑∑S T
)
∑∑T U
;
∑∑U V
	timeZones
∏∏ 
.
∏∏ 
Add
∏∏ 
(
∏∏ 
TimeZoneInfo
∏∏ &
.
∏∏& '"
FromSerializedString
∏∏' ;
(
∏∏; <"
SriLankaStandardTime
∏∏< P
)
∏∏P Q
)
∏∏Q R
;
∏∏R S
	timeZones
ππ 
.
ππ 
Add
ππ 
(
ππ 
TimeZoneInfo
ππ &
.
ππ& '"
FromSerializedString
ππ' ;
(
ππ; < 
TaipeiStandardTime
ππ< N
)
ππN O
)
ππO P
;
ππP Q
	timeZones
∫∫ 
.
∫∫ 
Add
∫∫ 
(
∫∫ 
TimeZoneInfo
∫∫ &
.
∫∫& '"
FromSerializedString
∫∫' ;
(
∫∫; <"
TasmaniaStandardTime
∫∫< P
)
∫∫P Q
)
∫∫Q R
;
∫∫R S
	timeZones
ªª 
.
ªª 
Add
ªª 
(
ªª 
TimeZoneInfo
ªª &
.
ªª& '"
FromSerializedString
ªª' ;
(
ªª; <
TokyoStandardTime
ªª< M
)
ªªM N
)
ªªN O
;
ªªO P
	timeZones
ºº 
.
ºº 
Add
ºº 
(
ºº 
TimeZoneInfo
ºº &
.
ºº& '"
FromSerializedString
ºº' ;
(
ºº; <
TongaStandardTime
ºº< M
)
ººM N
)
ººN O
;
ººO P
	timeZones
ΩΩ 
.
ΩΩ 
Add
ΩΩ 
(
ΩΩ 
TimeZoneInfo
ΩΩ &
.
ΩΩ& '"
FromSerializedString
ΩΩ' ;
(
ΩΩ; <#
USEasternStandardTime
ΩΩ< Q
)
ΩΩQ R
)
ΩΩR S
;
ΩΩS T
	timeZones
ææ 
.
ææ 
Add
ææ 
(
ææ 
TimeZoneInfo
ææ &
.
ææ& '"
FromSerializedString
ææ' ;
(
ææ; <$
USMountainStandardTime
ææ< R
)
ææR S
)
ææS T
;
ææT U
	timeZones
øø 
.
øø 
Add
øø 
(
øø 
TimeZoneInfo
øø &
.
øø& '"
FromSerializedString
øø' ;
(
øø; <#
VenezuelaStandardTime
øø< Q
)
øøQ R
)
øøR S
;
øøS T
	timeZones
¿¿ 
.
¿¿ 
Add
¿¿ 
(
¿¿ 
TimeZoneInfo
¿¿ &
.
¿¿& '"
FromSerializedString
¿¿' ;
(
¿¿; <%
VladivostokStandardTime
¿¿< S
)
¿¿S T
)
¿¿T U
;
¿¿U V
	timeZones
¡¡ 
.
¡¡ 
Add
¡¡ 
(
¡¡ 
TimeZoneInfo
¡¡ &
.
¡¡& '"
FromSerializedString
¡¡' ;
(
¡¡; <$
WAustraliaStandardTime
¡¡< R
)
¡¡R S
)
¡¡S T
;
¡¡T U
	timeZones
¬¬ 
.
¬¬ 
Add
¬¬ 
(
¬¬ 
TimeZoneInfo
¬¬ &
.
¬¬& '"
FromSerializedString
¬¬' ;
(
¬¬; <(
WCentralAfricaStandardTime
¬¬< V
)
¬¬V W
)
¬¬W X
;
¬¬X Y
	timeZones
√√ 
.
√√ 
Add
√√ 
(
√√ 
TimeZoneInfo
√√ &
.
√√& '"
FromSerializedString
√√' ;
(
√√; <!
WEuropeStandardTime
√√< O
)
√√O P
)
√√P Q
;
√√Q R
	timeZones
ƒƒ 
.
ƒƒ 
Add
ƒƒ 
(
ƒƒ 
TimeZoneInfo
ƒƒ &
.
ƒƒ& '"
FromSerializedString
ƒƒ' ;
(
ƒƒ; <"
WestAsiaStandardTime
ƒƒ< P
)
ƒƒP Q
)
ƒƒQ R
;
ƒƒR S
	timeZones
≈≈ 
.
≈≈ 
Add
≈≈ 
(
≈≈ 
TimeZoneInfo
≈≈ &
.
≈≈& '"
FromSerializedString
≈≈' ;
(
≈≈; <%
WestPacificStandardTime
≈≈< S
)
≈≈S T
)
≈≈T U
;
≈≈U V
	timeZones
∆∆ 
.
∆∆ 
Add
∆∆ 
(
∆∆ 
TimeZoneInfo
∆∆ &
.
∆∆& '"
FromSerializedString
∆∆' ;
(
∆∆; <!
YakutskStandardTime
∆∆< O
)
∆∆O P
)
∆∆P Q
;
∆∆Q R
	timeZones
»» 
.
»» 
Sort
»» 
(
»» 
delegate
»» #
(
»»# $
TimeZoneInfo
»»$ 0
left
»»1 5
,
»»5 6
TimeZoneInfo
»»7 C
right
»»D I
)
»»I J
{
…… 
int
   

comparison
   
=
    
left
  ! %
.
  % &
BaseUtcOffset
  & 3
.
  3 4
	CompareTo
  4 =
(
  = >
right
  > C
.
  C D
BaseUtcOffset
  D Q
)
  Q R
;
  R S
return
ÀÀ 

comparison
ÀÀ !
==
ÀÀ" $
$num
ÀÀ% &
?
ÀÀ' (
string
ÀÀ) /
.
ÀÀ/ 0
CompareOrdinal
ÀÀ0 >
(
ÀÀ> ?
left
ÀÀ? C
.
ÀÀC D
DisplayName
ÀÀD O
,
ÀÀO P
right
ÀÀQ V
.
ÀÀV W
DisplayName
ÀÀW b
)
ÀÀb c
:
ÀÀd e

comparison
ÀÀf p
;
ÀÀp q
}
ÃÃ 
)
ÃÃ 
;
ÃÃ 
return
ŒŒ 
	timeZones
ŒŒ 
;
ŒŒ 
}
–– 	
public
ŸŸ 
static
ŸŸ 
TimeZoneInfo
ŸŸ "
GetTimeZone
ŸŸ# .
(
ŸŸ. /
List
ŸŸ/ 3
<
ŸŸ3 4
TimeZoneInfo
ŸŸ4 @
>
ŸŸ@ A
	timeZones
ŸŸB K
,
ŸŸK L
string
ŸŸM S
id
ŸŸT V
)
ŸŸV W
{
⁄⁄ 	
foreach
€€ 
(
€€ 
TimeZoneInfo
€€ !
t
€€" #
in
€€$ &
	timeZones
€€' 0
)
€€0 1
{
‹‹ 
if
ﬁﬁ 
(
ﬁﬁ 
t
ﬁﬁ 
.
ﬁﬁ 
Id
ﬁﬁ 
==
ﬁﬁ 
id
ﬁﬁ 
)
ﬁﬁ 
{
ﬁﬁ  !
return
ﬁﬁ" (
t
ﬁﬁ) *
;
ﬁﬁ* +
}
ﬁﬁ, -
}
ﬂﬂ 
return
·· 
null
·· 
;
·· 
}
‚‚ 	
public
‰‰ 
static
‰‰ 
double
‰‰ 
GetUtcOffsetHours
‰‰ .
(
‰‰. /
DateTime
‰‰/ 7
localDateTime
‰‰8 E
,
‰‰E F
TimeZoneInfo
‰‰G S
timeZone
‰‰T \
)
‰‰\ ]
{
ÂÂ 	
TimeSpan
ÊÊ 
ts
ÊÊ 
=
ÊÊ 
timeZone
ÊÊ "
.
ÊÊ" #
GetUtcOffset
ÊÊ# /
(
ÊÊ/ 0
localDateTime
ÊÊ0 =
)
ÊÊ= >
;
ÊÊ> ?
return
ÁÁ 
ts
ÁÁ 
.
ÁÁ 

TotalHours
ÁÁ  
;
ÁÁ  !
}
ÈÈ 	
public
ÎÎ 
static
ÎÎ 
string
ÎÎ 
Format
ÎÎ #
(
ÎÎ# $
DateTime
ÎÎ$ ,
utcDate
ÎÎ- 4
,
ÎÎ4 5
TimeZoneInfo
ÎÎ6 B
timeZone
ÎÎC K
,
ÎÎK L
string
ÎÎM S
format
ÎÎT Z
,
ÎÎZ [
double
ÎÎ\ b
legacyOffset
ÎÎc o
)
ÎÎo p
{
ÏÏ 	
if
ÌÌ 
(
ÌÌ 
timeZone
ÌÌ 
!=
ÌÌ 
null
ÌÌ  
)
ÌÌ  !
{
ÓÓ 
Double
ÔÔ 

timeOffset
ÔÔ !
=
ÔÔ" #
timeZone
ÔÔ$ ,
.
ÔÔ, -
GetUtcOffset
ÔÔ- 9
(
ÔÔ9 :
utcDate
ÔÔ: A
)
ÔÔA B
.
ÔÔB C

TotalHours
ÔÔC M
;
ÔÔM N
try
 
{
ÒÒ 
return
ÚÚ 
utcDate
ÚÚ "
.
ÚÚ" #
AddHours
ÚÚ# +
(
ÚÚ+ ,

timeOffset
ÚÚ, 6
)
ÚÚ6 7
.
ÚÚ7 8
ToString
ÚÚ8 @
(
ÚÚ@ A
format
ÚÚA G
)
ÚÚG H
;
ÚÚH I
}
ÛÛ 
catch
ÙÙ 
(
ÙÙ )
ArgumentOutOfRangeException
ÙÙ 2
)
ÙÙ2 3
{
ÙÙ5 6
}
ÙÙ8 9
}
¯¯ 
try
˙˙ 
{
˚˚ 
return
¸¸ 
utcDate
¸¸ 
.
¸¸ 
AddHours
¸¸ '
(
¸¸' (
legacyOffset
¸¸( 4
)
¸¸4 5
.
¸¸5 6
ToString
¸¸6 >
(
¸¸> ?
format
¸¸? E
)
¸¸E F
;
¸¸F G
}
˝˝ 
catch
˛˛ 
(
˛˛ )
ArgumentOutOfRangeException
˛˛ .
)
˛˛. /
{
˛˛0 1
}
˛˛2 3
return
ÄÄ 
utcDate
ÄÄ 
.
ÄÄ 
ToString
ÄÄ #
(
ÄÄ# $
format
ÄÄ$ *
)
ÄÄ* +
;
ÄÄ+ ,
}
ÇÇ 	
public
ÑÑ 
static
ÑÑ 
DateTime
ÑÑ 
FirstDateOfWeek
ÑÑ .
(
ÑÑ. /
int
ÑÑ/ 2
year
ÑÑ3 7
,
ÑÑ7 8
int
ÑÑ9 <

weekOfYear
ÑÑ= G
)
ÑÑG H
{
ÖÖ 	
DateTime
ÜÜ 
jan1
ÜÜ 
=
ÜÜ 
new
ÜÜ 
DateTime
ÜÜ  (
(
ÜÜ( )
year
ÜÜ) -
,
ÜÜ- .
$num
ÜÜ/ 0
,
ÜÜ0 1
$num
ÜÜ2 3
)
ÜÜ3 4
;
ÜÜ4 5
int
àà 

daysOffset
àà 
=
àà 
(
àà 
int
àà !
)
àà! "
CultureInfo
àà" -
.
àà- .
CurrentCulture
àà. <
.
àà< =
DateTimeFormat
àà= K
.
ààK L
FirstDayOfWeek
ààL Z
-
àà[ \
(
àà] ^
int
àà^ a
)
ààa b
jan1
ààb f
.
ààf g
	DayOfWeek
ààg p
;
ààp q
DateTime
ää 
firstMonday
ää  
=
ää! "
jan1
ää# '
.
ää' (
AddDays
ää( /
(
ää/ 0

daysOffset
ää0 :
)
ää: ;
;
ää; <
int
åå 
	firstWeek
åå 
=
åå 
CultureInfo
åå '
.
åå' (
CurrentCulture
åå( 6
.
åå6 7
Calendar
åå7 ?
.
åå? @
GetWeekOfYear
åå@ M
(
ååM N
jan1
ååN R
,
ååR S
CultureInfo
ååT _
.
åå_ `
CurrentCulture
åå` n
.
åån o
DateTimeFormat
ååo }
.
åå} ~
CalendarWeekRuleåå~ é
,ååé è
CultureInfoååê õ
.ååõ ú
CurrentCultureååú ™
.åå™ ´
DateTimeFormatåå´ π
.ååπ ∫
FirstDayOfWeekåå∫ »
)åå» …
;åå…  
if
éé 
(
éé 
	firstWeek
éé 
<=
éé 
$num
éé 
)
éé 
{
èè 

weekOfYear
êê 
-=
êê 
$num
êê 
;
êê  
}
ëë 
return
ìì 
firstMonday
ìì 
.
ìì 
AddDays
ìì &
(
ìì& '

weekOfYear
ìì' 1
*
ìì2 3
$num
ìì4 5
)
ìì5 6
;
ìì6 7
}
îî 	
public
ññ 
static
ññ 
DateTime
ññ 
ToLastDateOfMonth
ññ 0
(
ññ0 1
this
ññ1 5
DateTime
ññ6 >
d
ññ? @
)
ññ@ A
{
óó 	
DateTime
òò 
last
òò 
=
òò 
new
òò 
DateTime
òò  (
(
òò( )
d
òò) *
.
òò* +
Year
òò+ /
,
òò/ 0
d
òò1 2
.
òò2 3
Month
òò3 8
,
òò8 9
$num
òò: ;
)
òò; <
.
òò< =
	AddMonths
òò= F
(
òòF G
$num
òòG H
)
òòH I
.
òòI J
AddDays
òòJ Q
(
òòQ R
-
òòR S
$num
òòS T
)
òòT U
;
òòU V
return
ôô 
last
ôô 
.
ôô 
Date
ôô 
;
ôô 
}
öö 	
public
ùù 
static
ùù 
DateTime
ùù 
ToLocalTime
ùù *
(
ùù* +
this
ùù+ /
DateTime
ùù0 8
utcDate
ùù9 @
,
ùù@ A
TimeZoneInfo
ùùB N
timeZone
ùùO W
)
ùùW X
{
ûû 	
return
°° 
TimeZoneInfo
°° 
.
°°   
ConvertTimeFromUtc
°°  2
(
°°2 3
DateTime
°°3 ;
.
°°; <
SpecifyKind
°°< G
(
°°G H
utcDate
°°H O
,
°°O P
DateTimeKind
°°Q ]
.
°°] ^
Utc
°°^ a
)
°°a b
,
°°b c
timeZone
°°d l
)
°°l m
;
°°m n
}
¢¢ 	
public
§§ 
static
§§ 
DateTime
§§ 
ToUtc
§§ $
(
§§$ %
this
§§% )
DateTime
§§* 2
	localDate
§§3 <
,
§§< =
TimeZoneInfo
§§> J
timeZone
§§K S
)
§§S T
{
•• 	
return
¶¶ 
TimeZoneInfo
¶¶ 
.
¶¶  
ConvertTimeToUtc
¶¶  0
(
¶¶0 1
	localDate
¶¶1 :
,
¶¶: ;
timeZone
¶¶< D
)
¶¶D E
;
¶¶E F
}
ßß 	
public
©© 
static
©© 
int
©© 
ToDateInteger
©© '
(
©©' (
this
©©( ,
DateTime
©©- 5
date
©©6 :
)
©©: ;
{
™™ 	
return
¨¨ 
Convert
¨¨ 
.
¨¨ 
ToInt32
¨¨ "
(
¨¨" #
date
¨¨# '
.
¨¨' (
Date
¨¨( ,
.
¨¨, -
ToString
¨¨- 5
(
¨¨5 6
$str
¨¨6 9
)
¨¨9 :
.
¨¨: ;
Replace
¨¨; B
(
¨¨B C
$str
¨¨C F
,
¨¨F G
string
¨¨H N
.
¨¨N O
Empty
¨¨O T
)
¨¨T U
.
¨¨U V
	Substring
¨¨V _
(
¨¨_ `
$num
¨¨` a
,
¨¨a b
$num
¨¨b c
)
¨¨c d
)
¨¨d e
;
¨¨e f
}
≠≠ 	
public
ØØ 
static
ØØ 
string
ØØ $
DaylightNameWithOffset
ØØ 3
(
ØØ3 4
this
ØØ4 8
TimeZoneInfo
ØØ9 E
timeZone
ØØF N
)
ØØN O
{
∞∞ 	
TimeSpan
±± 
timeSpan
±± 
=
±± 
timeZone
±±  (
.
±±( )
GetUtcOffset
±±) 5
(
±±5 6
DateTime
±±6 >
.
±±> ?
UtcNow
±±? E
)
±±E F
;
±±F G
return
≤≤ 
$str
≤≤ 
+
≤≤ 
timeSpan
≤≤ $
.
≤≤$ %
ToGmtOffset
≤≤% 0
(
≤≤0 1
)
≤≤1 2
+
≤≤3 4
$str
≤≤5 9
+
≤≤: ;
timeZone
≤≤< D
.
≤≤D E
DaylightName
≤≤E Q
;
≤≤Q R
}
≥≥ 	
public
µµ 
static
µµ 
string
µµ 
ToGmtOffset
µµ (
(
µµ( )
this
µµ) -
TimeSpan
µµ. 6
timeSpan
µµ7 ?
)
µµ? @
{
∂∂ 	
if
∑∑ 
(
∑∑ 
timeSpan
∑∑ 
.
∑∑ 
Hours
∑∑ 
>
∑∑  
$num
∑∑! "
)
∑∑" #
{
∏∏ 
return
ππ 
$str
ππ 
+
ππ 
timeSpan
ππ %
.
ππ% &
Hours
ππ& +
.
ππ+ ,
ToZeroPadded
ππ, 8
(
ππ8 9
)
ππ9 :
+
ππ; <
$str
ππ= @
+
ππA B
timeSpan
ππC K
.
ππK L
Minutes
ππL S
.
ππS T
ToZeroPadded
ππT `
(
ππ` a
)
ππa b
;
ππb c
}
∫∫ 
return
ºº 
timeSpan
ºº 
.
ºº 
Hours
ºº !
.
ºº! "
ToZeroPadded
ºº" .
(
ºº. /
)
ºº/ 0
+
ºº1 2
$str
ºº3 6
+
ºº7 8
timeSpan
ºº9 A
.
ººA B
Minutes
ººB I
.
ººI J
ToZeroPadded
ººJ V
(
ººV W
)
ººW X
;
ººX Y
}
ΩΩ 	
private
øø 
static
øø 
string
øø 
ToZeroPadded
øø *
(
øø* +
this
øø+ /
int
øø0 3
i
øø4 5
)
øø5 6
{
¿¿ 	
if
¡¡ 
(
¡¡ 
i
¡¡ 
>
¡¡ 
$num
¡¡ 
)
¡¡ 
{
¡¡ 
return
¡¡ 
i
¡¡  !
.
¡¡! "
ToInvariantString
¡¡" 3
(
¡¡3 4
)
¡¡4 5
;
¡¡5 6
}
¡¡7 8
if
¬¬ 
(
¬¬ 
i
¬¬ 
<
¬¬ 
-
¬¬ 
$num
¬¬ 
)
¬¬ 
{
¬¬ 
return
¬¬  
i
¬¬! "
.
¬¬" #
ToInvariantString
¬¬# 4
(
¬¬4 5
)
¬¬5 6
;
¬¬6 7
}
¬¬8 9
if
ƒƒ 
(
ƒƒ 
i
ƒƒ 
>
ƒƒ 
$num
ƒƒ 
)
ƒƒ 
{
ƒƒ 
return
ƒƒ 
$str
ƒƒ  #
+
ƒƒ$ %
i
ƒƒ& '
.
ƒƒ' (
ToInvariantString
ƒƒ( 9
(
ƒƒ9 :
)
ƒƒ: ;
;
ƒƒ; <
}
ƒƒ= >
if
∆∆ 
(
∆∆ 
i
∆∆ 
<
∆∆ 
$num
∆∆ 
)
∆∆ 
{
∆∆ 
return
∆∆ 
$str
∆∆  $
+
∆∆% &
i
∆∆' (
.
∆∆( )
ToInvariantString
∆∆) :
(
∆∆: ;
)
∆∆; <
.
∆∆< =
Replace
∆∆= D
(
∆∆D E
$str
∆∆E H
,
∆∆H I
string
∆∆J P
.
∆∆P Q
Empty
∆∆Q V
)
∆∆V W
;
∆∆W X
}
∆∆Y Z
return
»» 
$str
»» 
+
»» 
i
»» 
.
»» 
ToInvariantString
»» ,
(
»», -
)
»»- .
;
»». /
}
…… 	
public
ÈÈ 
static
ÈÈ 
string
ÈÈ #
FormatArchiveLinkText
ÈÈ 2
(
ÈÈ2 3
int
ÈÈ3 6
month
ÈÈ7 <
,
ÈÈ< =
int
ÈÈ> A
year
ÈÈB F
,
ÈÈF G
int
ÈÈH K
	postCount
ÈÈL U
)
ÈÈU V
{
ÍÍ 	
if
ÎÎ 
(
ÎÎ 
CultureInfo
ÎÎ 
.
ÎÎ 
CurrentCulture
ÎÎ *
.
ÎÎ* +
Name
ÎÎ+ /
==
ÎÎ0 2
$str
ÎÎ3 :
)
ÎÎ: ;
{
ÏÏ 
return
ÌÌ *
FormatPersianArchiveLinkText
ÌÌ 3
(
ÌÌ3 4
month
ÌÌ4 9
,
ÌÌ9 :
year
ÌÌ; ?
,
ÌÌ? @
	postCount
ÌÌA J
)
ÌÌJ K
;
ÌÌK L
}
ÓÓ 
string
 
result
 
=
 
DateTimeHelper
 *
.
* +
GetMonthName
+ 7
(
7 8
month
8 =
)
= >
+
? @
$str
A E
+
ÒÒ 
DateTimeHelper
ÒÒ  
.
ÒÒ  !
GetLocalizedYear
ÒÒ! 1
(
ÒÒ1 2
year
ÒÒ2 6
)
ÒÒ6 7
.
ÒÒ7 8
ToString
ÒÒ8 @
(
ÒÒ@ A
CultureInfo
ÒÒA L
.
ÒÒL M
InvariantCulture
ÒÒM ]
)
ÒÒ] ^
+
ÒÒ_ `
$str
ÒÒa e
+
ÒÒf g
	postCount
ÒÒh q
.
ÒÒq r
ToString
ÒÒr z
(
ÒÒz {
CultureInfoÒÒ{ Ü
.ÒÒÜ á 
InvariantCultureÒÒá ó
)ÒÒó ò
+ÒÒô ö
$strÒÒõ û
;ÒÒû ü
return
ÛÛ 
result
ÛÛ 
;
ÛÛ 
}
ıı 	
public
˜˜ 
static
˜˜ 
string
˜˜ *
FormatPersianArchiveLinkText
˜˜ 9
(
˜˜9 :
int
˜˜: =
month
˜˜> C
,
˜˜C D
int
˜˜E H
year
˜˜I M
,
˜˜M N
int
˜˜O R
	postCount
˜˜S \
)
˜˜\ ]
{
¯¯ 	
string
˘˘ 
result
˘˘ 
=
˘˘ 
$str
˘˘ 
+
˘˘  !
	postCount
˘˘" +
.
˘˘+ ,
ToString
˘˘, 4
(
˘˘4 5
CultureInfo
˘˘5 @
.
˘˘@ A
InvariantCulture
˘˘A Q
)
˘˘Q R
+
˘˘S T
$str
˘˘U Y
+
˘˘Z [
DateTimeHelper
˘˘\ j
.
˘˘j k
GetMonthName
˘˘k w
(
˘˘w x
month
˘˘x }
)
˘˘} ~
+˘˘ Ä
$str˘˘Å Ñ
+
˙˙ 
year
˙˙ 
.
˙˙ 
ToString
˙˙ 
(
˙˙  
CultureInfo
˙˙  +
.
˙˙+ ,
InvariantCulture
˙˙, <
)
˙˙< =
;
˙˙> ?
return
¸¸ 
result
¸¸ 
;
¸¸ 
}
˛˛ 	
public
ÄÄ 
static
ÄÄ 
string
ÄÄ 
GetMonthName
ÄÄ )
(
ÄÄ) *
int
ÄÄ* -
month
ÄÄ. 3
)
ÄÄ3 4
{
ÅÅ 
if
ÉÉ 
(
ÉÉ 
month
ÉÉ 
<
ÉÉ 
$num
ÉÉ 
)
ÉÉ 
{
ÉÉ 
return
ÉÉ #
GetMonthName
ÉÉ$ 0
(
ÉÉ0 1
$num
ÉÉ1 2
)
ÉÉ2 3
;
ÉÉ3 4
}
ÉÉ5 6
if
ÖÖ 
(
ÖÖ 
CultureInfo
ÖÖ 
.
ÖÖ 
CurrentCulture
ÖÖ *
.
ÖÖ* +
Name
ÖÖ+ /
==
ÖÖ0 2
$str
ÖÖ3 :
)
ÖÖ: ;
{
ÜÜ 
return
áá !
GetPersianMonthName
áá *
(
áá* +
month
áá+ 0
)
áá0 1
;
áá1 2
}
àà 
string
ââ 	
	monthName
ââ
 
=
ââ 
CultureInfo
ââ !
.
ââ! "
CurrentCulture
ââ" 0
.
ââ0 1
DateTimeFormat
ââ1 ?
.
ââ? @

MonthNames
ââ@ J
[
ââJ K
month
ââK P
-
ââQ R
$num
ââR S
]
ââS T
;
ââT U
return
ää 	
	monthName
ää
 
;
ää 
}
ãã 
public
çç 
static
çç 
string
çç !
GetPersianMonthName
çç 0
(
çç0 1
int
çç1 4
month
çç5 :
)
çç: ;
{
éé 	
string
ìì 
	monthName
ìì 
=
ìì 
CultureInfo
ìì *
.
ìì* +
CurrentCulture
ìì+ 9
.
ìì9 :
DateTimeFormat
ìì: H
.
ììH I

MonthNames
ììI S
[
ììS T
month
ììT Y
-
ììZ [
$num
ìì\ ]
]
ìì] ^
;
ìì^ _
return
îî 
	monthName
îî 
;
îî 
}
ññ 	
public
òò 
static
òò 
int
òò 
GetLocalizedYear
òò *
(
òò* +
int
òò+ .
year
òò/ 3
)
òò3 4
{
ôô 	
if
öö 
(
öö 
CultureInfo
öö 
.
öö 
CurrentCulture
öö *
.
öö* +
Name
öö+ /
==
öö0 2
$str
öö3 :
)
öö: ;
{
õõ 
return
úú 
year
úú 
;
úú 
}
ùù 
return
üü 
year
üü 
;
üü 
}
°° 	
public
££ 
static
££ 
int
££ 
GetPersianYear
££ (
(
££( )
int
££) ,
year
££- 1
)
££1 2
{
§§ 	
PersianDateHelper
¶¶ 
persianDateHelper
¶¶ /
=
¶¶0 1
new
¶¶2 5
PersianDateHelper
¶¶6 G
(
¶¶G H
)
¶¶H I
;
¶¶I J
DateTime
ßß 
yearDate
ßß 
=
ßß 
new
ßß  #
DateTime
ßß$ ,
(
ßß, -
year
ßß- 1
,
ßß1 2
$num
ßß3 4
,
ßß4 5
$num
ßß6 7
)
ßß7 8
;
ßß8 9
int
®® 
persianYear
®® 
=
®® 
persianDateHelper
®® /
.
®®/ 0
GetPersianYear
®®0 >
(
®®> ?
yearDate
®®? G
)
®®G H
;
®®H I
return
™™ 
persianYear
™™ 
;
™™ 
}
´´ 	
public
≠≠ 
static
≠≠ 
double
≠≠  
GetServerGmtOffset
≠≠ /
(
≠≠/ 0
)
≠≠0 1
{
ÆÆ 	
return
ØØ 
TimeZone
ØØ 
.
ØØ 
CurrentTimeZone
ØØ +
.
ØØ+ ,
GetUtcOffset
ØØ, 8
(
ØØ8 9
DateTime
ØØ9 A
.
ØØA B
Now
ØØB E
)
ØØE F
.
ØØF G

TotalHours
ØØG Q
;
ØØQ R
}
∞∞ 	
public
…… 
static
…… 
double
…… #
GetPreferredGmtOffset
…… 2
(
……2 3
)
……3 4
{
   	
Double
ÀÀ 

timeOffset
ÀÀ 
;
ÀÀ 
if
ÕÕ 
(
ÕÕ "
ConfigurationManager
ÕÕ $
.
ÕÕ$ %
AppSettings
ÕÕ% 0
[
ÕÕ0 1
$str
ÕÕ1 S
]
ÕÕS T
!=
ÕÕU W
null
ÕÕX \
)
ÕÕ\ ]
{
ŒŒ 
if
œœ 
(
œœ 
!
œœ 
Double
œœ 
.
œœ 
TryParse
œœ $
(
œœ$ %"
ConfigurationManager
–– (
.
––( )
AppSettings
––) 4
[
––4 5
$str
––5 W
]
––W X
,
––X Y
NumberStyles
——  
.
——  !
Any
——! $
,
——$ %
CultureInfo
““ 
.
““  
InvariantCulture
““  0
,
““0 1
out
”” 

timeOffset
”” "
)
””" #
)
””# $
{
‘‘ 

timeOffset
’’ 
=
’’   
GetServerGmtOffset
’’! 3
(
’’3 4
)
’’4 5
;
’’5 6
}
÷÷ 
}
ÿÿ 
else
ŸŸ 
{
⁄⁄ 

timeOffset
€€ 
=
€€  
GetServerGmtOffset
€€ /
(
€€/ 0
)
€€0 1
;
€€1 2
}
‹‹ 
return
ﬁﬁ 

timeOffset
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 	
public
‚‚ 
static
‚‚ 
String
‚‚ /
!GetTimeZoneAdjustedDateTimeString
‚‚ >
(
‚‚> ?
object
„„ 
objDateTime
„„ 
,
„„ 
double
‰‰ 
timeZoneOffset
‰‰ !
)
‰‰! "
{
ÂÂ 	
String
ÊÊ 
result
ÊÊ 
=
ÊÊ 
String
ÊÊ "
.
ÊÊ" #
Empty
ÊÊ# (
;
ÊÊ( )
if
ËË 
(
ËË 
objDateTime
ËË 
!=
ËË 
DBNull
ËË %
.
ËË% &
Value
ËË& +
)
ËË+ ,
{
ÈÈ 
try
ÍÍ 
{
ÎÎ 
result
ÏÏ 
=
ÏÏ 
Convert
ÏÏ $
.
ÏÏ$ %

ToDateTime
ÏÏ% /
(
ÏÏ/ 0
objDateTime
ÏÏ0 ;
)
ÏÏ; <
.
ÏÏ< =
AddHours
ÏÏ= E
(
ÏÏE F
timeZoneOffset
ÏÏF T
)
ÏÏT U
.
ÏÏU V
ToString
ÏÏV ^
(
ÏÏ^ _
)
ÏÏ_ `
;
ÏÏ` a
}
ÌÌ 
catch
ÓÓ 
(
ÓÓ "
InvalidCastException
ÓÓ +
)
ÓÓ+ ,
{
ÓÓ- .
}
ÓÓ/ 0
catch
ÔÔ 
(
ÔÔ )
ArgumentOutOfRangeException
ÔÔ 2
)
ÔÔ2 3
{
 
result
ÒÒ 
=
ÒÒ 
DateTime
ÒÒ %
.
ÒÒ% &
MinValue
ÒÒ& .
.
ÒÒ. /
ToString
ÒÒ/ 7
(
ÒÒ7 8
)
ÒÒ8 9
;
ÒÒ9 :
}
˜˜ 
}
˘˘ 
return
˚˚ 
result
˚˚ 
;
˚˚ 
}
˝˝ 	
public
ˇˇ 
static
ˇˇ 
String
ˇˇ 0
"GetTimeZoneAdjustedShortDateString
ˇˇ ?
(
ˇˇ? @
object
ÄÄ 
objDateTime
ÄÄ 
,
ÄÄ 
double
ÅÅ 
timeZoneOffset
ÅÅ !
)
ÅÅ! "
{
ÇÇ 	
String
ÉÉ 
result
ÉÉ 
=
ÉÉ 
String
ÉÉ "
.
ÉÉ" #
Empty
ÉÉ# (
;
ÉÉ( )
if
ÖÖ 
(
ÖÖ 
objDateTime
ÖÖ 
!=
ÖÖ 
DBNull
ÖÖ %
.
ÖÖ% &
Value
ÖÖ& +
)
ÖÖ+ ,
{
ÜÜ 
try
áá 
{
àà 
result
ââ 
=
ââ 
Convert
ââ $
.
ââ$ %

ToDateTime
ââ% /
(
ââ/ 0
objDateTime
ââ0 ;
)
ââ; <
.
ââ< =
AddHours
ââ= E
(
ââE F
timeZoneOffset
ââF T
)
ââT U
.
ââU V
ToShortDateString
ââV g
(
ââg h
)
ââh i
;
ââi j
}
ää 
catch
ãã 
(
ãã "
InvalidCastException
ãã +
)
ãã+ ,
{
ãã- .
}
ãã/ 0
catch
åå 
(
åå )
ArgumentOutOfRangeException
åå 2
)
åå2 3
{
çç 
result
éé 
=
éé 
DateTime
éé %
.
éé% &
MinValue
éé& .
.
éé. /
ToString
éé/ 7
(
éé7 8
)
éé8 9
;
éé9 :
}
îî 
}
ññ 
return
òò 
result
òò 
;
òò 
}
öö 	
public
úú 
static
úú 
String
úú /
!GetTimeZoneAdjustedDateTimeString
úú >
(
úú> ?
DbDataRecord
ùù 

dataRecord
ùù #
,
ùù# $
String
ûû 
	fieldName
ûû 
,
ûû 
double
üü 
timeZoneOffset
üü !
)
üü! "
{
†† 	
String
°° 
result
°° 
=
°° 
String
°° "
.
°°" #
Empty
°°# (
;
°°( )
if
§§ 
(
§§ 
(
•• 

dataRecord
•• 
!=
•• 
null
•• #
)
••# $
&&
¶¶ 
(
¶¶ 
	fieldName
¶¶ 
!=
¶¶ 
null
¶¶  $
)
¶¶$ %
&&
ßß 
(
ßß 

dataRecord
ßß 
.
ßß 

GetOrdinal
ßß (
(
ßß( )
	fieldName
ßß) 2
)
ßß2 3
>
ßß4 5
-
ßß6 7
$num
ßß7 8
)
ßß8 9
&&
®® 
(
®® 

dataRecord
®® 
[
®® 
	fieldName
®® '
]
®®' (
!=
®®) +
DBNull
®®, 2
.
®®2 3
Value
®®3 8
)
®®8 9
)
©© 
{
™™ 
try
´´ 
{
¨¨ 
result
≠≠ 
=
≠≠ 
Convert
≠≠ $
.
≠≠$ %

ToDateTime
≠≠% /
(
≠≠/ 0

dataRecord
≠≠0 :
[
≠≠: ;
	fieldName
≠≠; D
]
≠≠D E
)
≠≠E F
.
≠≠F G
AddHours
≠≠G O
(
≠≠O P
timeZoneOffset
≠≠P ^
)
≠≠^ _
.
≠≠_ `
ToString
≠≠` h
(
≠≠h i
)
≠≠i j
;
≠≠j k
}
≥≥ 
catch
¥¥ 
(
¥¥ "
InvalidCastException
¥¥ +
)
¥¥+ ,
{
¥¥, -
}
¥¥. /
catch
µµ 
(
µµ )
ArgumentOutOfRangeException
µµ 2
)
µµ2 3
{
∂∂ 
result
∑∑ 
=
∑∑ 
DateTime
∑∑ %
.
∑∑% &
MinValue
∑∑& .
.
∑∑. /
ToString
∑∑/ 7
(
∑∑7 8
)
∑∑8 9
;
∑∑9 :
}
∏∏ 
}
∫∫ 
return
ºº 
result
ºº 
;
ºº 
}
ææ 	
public
¿¿ 
static
¿¿ 
String
¿¿ /
!GetTimeZoneAdjustedDateTimeString
¿¿ >
(
¿¿> ?
DbDataRecord
¡¡ 

dataRecord
¡¡ #
,
¡¡# $
String
¬¬ 
	fieldName
¬¬ 
,
¬¬ 
double
√√ 
timeZoneOffset
√√ !
,
√√! "
String
ƒƒ 
formatPattern
ƒƒ  
)
ƒƒ  !
{
≈≈ 	
String
∆∆ 
result
∆∆ 
=
∆∆ 
String
∆∆ "
.
∆∆" #
Empty
∆∆# (
;
∆∆( )
log
»» 
.
»» 
Debug
»» 
(
»» 
$str
»» H
+
»»I J
	fieldName
»»K T
)
»»T U
;
»»U V
if
ÀÀ 
(
ÀÀ 
(
ÃÃ 

dataRecord
ÃÃ 
!=
ÃÃ 
null
ÃÃ #
)
ÃÃ# $
&&
ÕÕ 
(
ÕÕ 
	fieldName
ÕÕ 
!=
ÕÕ  
null
ÕÕ! %
)
ÕÕ% &
)
ŒŒ 
{
œœ 
try
–– 
{
—— 
if
““ 
(
““ 

dataRecord
““ "
.
““" #

GetOrdinal
““# -
(
““- .
	fieldName
““. 7
)
““7 8
>
““9 :
-
““; <
$num
““< =
)
““= >
{
”” 
if
‘‘ 
(
‘‘ 

dataRecord
‘‘ &
[
‘‘& '
	fieldName
‘‘' 0
]
‘‘0 1
!=
‘‘2 4
DBNull
‘‘5 ;
.
‘‘; <
Value
‘‘< A
)
‘‘A B
{
’’ 
result
÷÷ "
=
÷÷# $
Convert
÷÷% ,
.
÷÷, -

ToDateTime
÷÷- 7
(
÷÷7 8

dataRecord
÷÷8 B
[
÷÷B C
	fieldName
÷÷C L
]
÷÷L M
)
÷÷M N
.
÷÷N O
AddHours
÷÷O W
(
÷÷W X
timeZoneOffset
÷÷X f
)
÷÷f g
.
÷÷g h
ToString
÷÷h p
(
÷÷p q
formatPattern
÷÷q ~
)
÷÷~ 
;÷÷ Ä
}
›› 
}
ﬁﬁ 
}
ﬂﬂ 
catch
‡‡ 
(
‡‡ "
InvalidCastException
‡‡ +
)
‡‡+ ,
{
·· 
}
·· 
}
„„ 
return
ÂÂ 
result
ÂÂ 
;
ÂÂ 
}
ÁÁ 	
public
ÈÈ 
static
ÈÈ 
String
ÈÈ /
!GetTimeZoneAdjustedDateTimeString
ÈÈ >
(
ÈÈ> ?
DataRowView
ÍÍ 

dataRecord
ÍÍ "
,
ÍÍ" #
String
ÎÎ 
	fieldName
ÎÎ 
,
ÎÎ 
double
ÏÏ 
timeZoneOffset
ÏÏ !
)
ÏÏ! "
{
ÌÌ 	
String
ÓÓ 
result
ÓÓ 
=
ÓÓ 
String
ÓÓ "
.
ÓÓ" #
Empty
ÓÓ# (
;
ÓÓ( )
if
 
(
 
(
ÒÒ 

dataRecord
ÒÒ 
!=
ÒÒ 
null
ÒÒ #
)
ÒÒ# $
&&
ÚÚ 
(
ÚÚ 
	fieldName
ÚÚ 
!=
ÚÚ  
null
ÚÚ! %
)
ÚÚ% &
&&
ÛÛ 
(
ÛÛ 

dataRecord
ÛÛ 
[
ÛÛ 
	fieldName
ÛÛ (
]
ÛÛ( )
!=
ÛÛ* ,
DBNull
ÛÛ- 3
.
ÛÛ3 4
Value
ÛÛ4 9
)
ÛÛ9 :
)
ÙÙ 
{
ıı 
try
ˆˆ 
{
˜˜ 
result
¯¯ 
=
¯¯ 
Convert
¯¯ $
.
¯¯$ %

ToDateTime
¯¯% /
(
¯¯/ 0

dataRecord
¯¯0 :
[
¯¯: ;
	fieldName
¯¯; D
]
¯¯D E
)
¯¯E F
.
¯¯F G
AddHours
¯¯G O
(
¯¯O P
timeZoneOffset
¯¯P ^
)
¯¯^ _
.
¯¯_ `
ToString
¯¯` h
(
¯¯h i
)
¯¯i j
;
¯¯j k
}
˛˛ 
catch
ˇˇ 
(
ˇˇ "
InvalidCastException
ˇˇ +
)
ˇˇ+ ,
{
ÄÄ 
}
ÄÄ 
}
ÇÇ 
return
ÑÑ 
result
ÑÑ 
;
ÑÑ 
}
ÜÜ 	
public
àà 
static
àà 
String
àà /
!GetTimeZoneAdjustedDateTimeString
àà >
(
àà> ?
DataRowView
ââ 

dataRecord
ââ "
,
ââ" #
String
ää 
	fieldName
ää 
,
ää 
double
ãã 
timeZoneOffset
ãã !
,
ãã! "
TimeZoneInfo
åå 
timeZone
åå !
)
åå! "
{
çç 	
String
éé 
result
éé 
=
éé 
String
éé "
.
éé" #
Empty
éé# (
;
éé( )
if
êê 
(
êê 
(
ëë 

dataRecord
ëë 
!=
ëë 
null
ëë #
)
ëë# $
&&
íí 
(
íí 
	fieldName
íí 
!=
íí  
null
íí! %
)
íí% &
&&
ìì 
(
ìì 

dataRecord
ìì 
[
ìì 
	fieldName
ìì (
]
ìì( )
!=
ìì* ,
DBNull
ìì- 3
.
ìì3 4
Value
ìì4 9
)
ìì9 :
)
îî 
{
ïï 
try
ññ 
{
óó 
if
òò 
(
òò 
timeZone
òò  
!=
òò! #
null
òò$ (
)
òò( )
{
ôô 
result
öö 
=
öö  
Convert
öö! (
.
öö( )

ToDateTime
öö) 3
(
öö3 4

dataRecord
öö4 >
[
öö> ?
	fieldName
öö? H
]
ööH I
)
ööI J
.
ööJ K
ToLocalTime
ööK V
(
ööV W
timeZone
ööW _
)
öö_ `
.
öö` a
ToString
ööa i
(
ööi j
)
ööj k
;
öök l
}
õõ 
else
úú 
{
ùù 
result
ûû 
=
ûû  
Convert
ûû! (
.
ûû( )

ToDateTime
ûû) 3
(
ûû3 4

dataRecord
ûû4 >
[
ûû> ?
	fieldName
ûû? H
]
ûûH I
)
ûûI J
.
ûûJ K
AddHours
ûûK S
(
ûûS T
timeZoneOffset
ûûT b
)
ûûb c
.
ûûc d
ToString
ûûd l
(
ûûl m
)
ûûm n
;
ûûn o
}
üü 
}
•• 
catch
¶¶ 
(
¶¶ "
InvalidCastException
¶¶ +
)
¶¶+ ,
{
ßß 
}
ßß 
}
©© 
return
´´ 
result
´´ 
;
´´ 
}
≠≠ 	
public
ØØ 
static
ØØ 
string
ØØ  
LocalizeToCalendar
ØØ /
(
ØØ/ 0
string
ØØ0 6
dateText
ØØ7 ?
)
ØØ? @
{
∞∞ 	
return
∑∑ 
dateText
∑∑ 
;
∑∑ 
}
∫∫ 	
public
ºº 
static
ºº 
string
ºº *
GetDateTimeStringForFileName
ºº 9
(
ºº9 :
)
ºº: ;
{
ΩΩ 	
return
ææ *
GetDateTimeStringForFileName
ææ /
(
ææ/ 0
false
ææ0 5
)
ææ5 6
;
ææ6 7
}
øø 	
public
¡¡ 
static
¡¡ 
string
¡¡ *
GetDateTimeStringForFileName
¡¡ 9
(
¡¡9 :
bool
¡¡: > 
includeMiliseconds
¡¡? Q
)
¡¡Q R
{
¬¬ 	
DateTime
√√ 
d
√√ 
=
√√ 
DateTime
√√ !
.
√√! "
Now
√√" %
;
√√% &
string
ƒƒ 

dateString
ƒƒ 
=
ƒƒ 
d
ƒƒ  !
.
ƒƒ! "
Year
ƒƒ" &
.
ƒƒ& '
ToInvariantString
ƒƒ' 8
(
ƒƒ8 9
)
ƒƒ9 :
;
ƒƒ: ;
string
∆∆ 
monthString
∆∆ 
=
∆∆  
d
∆∆! "
.
∆∆" #
Month
∆∆# (
.
∆∆( )
ToInvariantString
∆∆) :
(
∆∆: ;
)
∆∆; <
;
∆∆< =
if
«« 
(
«« 
monthString
«« 
.
«« 
Length
«« "
==
««# %
$num
««& '
)
««' (
{
»» 
monthString
…… 
=
…… 
$str
…… !
+
……" #
monthString
……$ /
;
……/ 0
}
   
string
ÀÀ 
	dayString
ÀÀ 
=
ÀÀ 
d
ÀÀ  
.
ÀÀ  !
Day
ÀÀ! $
.
ÀÀ$ %
ToInvariantString
ÀÀ% 6
(
ÀÀ6 7
)
ÀÀ7 8
;
ÀÀ8 9
if
ÃÃ 
(
ÃÃ 
	dayString
ÃÃ 
.
ÃÃ 
Length
ÃÃ  
==
ÃÃ! #
$num
ÃÃ$ %
)
ÃÃ% &
{
ÕÕ 
	dayString
ŒŒ 
=
ŒŒ 
$str
ŒŒ 
+
ŒŒ  !
	dayString
ŒŒ" +
;
ŒŒ+ ,
}
œœ 
string
–– 

hourString
–– 
=
–– 
d
––  !
.
––! "
Hour
––" &
.
––& '
ToInvariantString
––' 8
(
––8 9
)
––9 :
;
––: ;
if
—— 
(
—— 

hourString
—— 
.
—— 
Length
—— !
==
——" $
$num
——% &
)
——& '
{
““ 

hourString
”” 
=
”” 
$str
””  
+
””! "

hourString
””# -
;
””- .
}
‘‘ 
string
÷÷ 
minuteString
÷÷ 
=
÷÷  !
d
÷÷" #
.
÷÷# $
Minute
÷÷$ *
.
÷÷* +
ToInvariantString
÷÷+ <
(
÷÷< =
)
÷÷= >
;
÷÷> ?
if
◊◊ 
(
◊◊ 
minuteString
◊◊ 
.
◊◊ 
Length
◊◊ #
==
◊◊$ &
$num
◊◊' (
)
◊◊( )
{
ÿÿ 
minuteString
ŸŸ 
=
ŸŸ 
$str
ŸŸ "
+
ŸŸ# $
minuteString
ŸŸ% 1
;
ŸŸ1 2
}
⁄⁄ 
string
‹‹ 
secondString
‹‹ 
=
‹‹  !
d
‹‹" #
.
‹‹# $
Second
‹‹$ *
.
‹‹* +
ToInvariantString
‹‹+ <
(
‹‹< =
)
‹‹= >
;
‹‹> ?
if
›› 
(
›› 
secondString
›› 
.
›› 
Length
›› #
==
››$ &
$num
››' (
)
››( )
{
ﬁﬁ 
secondString
ﬂﬂ 
=
ﬂﬂ 
$str
ﬂﬂ "
+
ﬂﬂ# $
secondString
ﬂﬂ% 1
;
ﬂﬂ1 2
}
‡‡ 

dateString
‚‚ 
=
„„ 

dateString
„„ 
+
‰‰ 
monthString
‰‰ 
+
ÂÂ 
	dayString
ÂÂ 
+
ÊÊ 

hourString
ÊÊ 
+
ÁÁ 
minuteString
ÁÁ 
+
ÁÁ  
secondString
ÁÁ! -
;
ÁÁ- .
if
ÈÈ 
(
ÈÈ  
includeMiliseconds
ÈÈ "
)
ÈÈ" #
{
ÍÍ 
return
ÎÎ 

dateString
ÎÎ !
+
ÎÎ" #
d
ÎÎ$ %
.
ÎÎ% &
Millisecond
ÎÎ& 1
.
ÎÎ1 2
ToInvariantString
ÎÎ2 C
(
ÎÎC D
)
ÎÎD E
;
ÎÎE F
}
ÏÏ 
return
ÓÓ 

dateString
ÓÓ 
;
ÓÓ 
}
ÔÔ 	
}
ÚÚ 
}ıı ÿ
mD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\EnumHelper.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public 

static 
class 

EnumHelper "
<" #
T# $
>$ %
{ 
public		 
static		 
T		 
Parse		 
(		 
string		 $
value		% *
)		* +
{

 	
return 
( 
T 
) 
Enum 
. 
Parse  
(  !
typeof! '
(' (
T( )
)) *
,* +
value, 1
)1 2
;2 3
} 	
public 
static 
IList 
< 
T 
> 
	GetValues (
(( )
)) *
{ 	
IList 
< 
T 
> 
list 
= 
new 
List  $
<$ %
T% &
>& '
(' (
)( )
;) *
foreach 
( 
object 
value !
in" $
Enum% )
.) *
	GetValues* 3
(3 4
typeof4 :
(: ;
T; <
)< =
)= >
)> ?
{ 
list 
. 
Add 
( 
( 
T 
) 
value !
)! "
;" #
} 
return 
list 
; 
} 	
} 
} ¸å
oD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\ExportHelper.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public 
static 
class 
ExportHelper !
{ 
public 
static	 
void  
ExportDataTableToCsv )
() *
HttpContext 
context 
, 
	DataTable 
table 
, 
string 	
filename
 
) 
{ 
if 
( 
context 
== 
null 
) 
{ 
return  
;  !
}" #
context 

.
 
Response 
. 
ClearHeaders  
(  !
)! "
;" #
context 

.
 
Response 
. 
Clear 
( 
) 
; 
context 

.
 
Response 
. 
Buffer 
= 
true !
;! "
context 

.
 
Response 
. 
ContentType 
=  !
$str" ,
;, -
context 

.
 
Response 
. 
AppendHeader  
(  !
$str! 6
,6 7
$str8 P
+Q R
filenameS [
+\ ]
$str^ b
)b c
;c d
Encoding   
encoding   
=   
new   
UTF8Encoding   '
(  ' (
)  ( )
;  ) *
context!! 

.!!
 
Response!! 
.!! 
ContentEncoding!! #
=!!$ %
encoding!!& .
;!!. /
StreamWriter## 
sw## 
=## 
new## 
StreamWriter## %
(##% &
context##& -
.##- .
Response##. 6
.##6 7
OutputStream##7 C
)##C D
;##D E
int%% 
	iColCount%% 
=%% 
table%% 
.%% 
Columns%%  
.%%  !
Count%%! &
;%%& '
int&& 
i&& 
;&& 	
for(( 
((( 
i(( 	
=((
 
$num(( 
;(( 
i(( 
<=(( 
	iColCount(( 
-(( 
$num((  !
;((! "
i((# $
++(($ &
)((& '
{)) 
sw** 
.** 
Write** 
(** 
table** 
.** 
Columns** 
[** 
i** 
]** 
)** 
;** 
if,, 
(,, 
i,, 	
<,,
 
	iColCount,, 
-,, 
$num,, 
),, 
{-- 
sw.. 
... 
Write.. 
(.. 
$str.. 
).. 
;.. 
}// 
}00 
sw22 
.22 
Write22 
(22 
sw22 
.22 
NewLine22 
)22 
;22 
i44 
=44 
$num44 
;44 	
foreach66 

(66 
DataRow66 
row66 
in66 
table66  
.66  !
Rows66! %
)66% &
{77 
for88 
(88 	
i88	 

=88 
$num88 
;88 
i88 
<=88 
	iColCount88 
-88  
$num88! "
;88" #
i88$ %
++88% '
)88' (
{99 
if:: 
(:: 	
!::	 

Convert::
 
.:: 
IsDBNull:: 
(:: 
row:: 
[:: 
i::  
]::  !
)::! "
)::" #
{;; 
sw<< 
.<< 	
Write<<	 
(<< 
$str<< 
)<< 
;<< 
sw?? 
.?? 	
Write??	 
(?? 
row?? 
[?? 
i?? 
]?? 
.?? 
ToString?? 
(?? 
)??  
.??  !
CsvEscapeQuotes??! 0
(??0 1
)??1 2
)??2 3
;??3 4
sw@@ 
.@@ 	
Write@@	 
(@@ 
$str@@ 
)@@ 
;@@ 
}AA 
elseBB 	
{CC 
swDD 
.DD 	
WriteDD	 
(DD 
$strDD 
)DD 
;DD 
}EE 
ifGG 
(GG 	
iGG	 

<GG 
	iColCountGG 
-GG 
$numGG 
)GG 
{HH 
swII 
.II 	
WriteII	 
(II 
$strII 
)II 
;II 
}JJ 
}KK 
swMM 
.MM 
WriteMM 
(MM 
swMM 
.MM 
NewLineMM 
)MM 
;MM 
}NN 
swPP 
.PP 
ClosePP 
(PP 
)PP 
;PP 
contextRR 

.RR
 
ResponseRR 
.RR 
EndRR 
(RR 
)RR 
;RR 
}SS 
publicVV 
staticVV	 
voidVV !
ExportDataTableToWordVV *
(VV* +
HttpContextWW 
contextWW 
,WW 
	DataTableXX 
tableXX 
,XX 
stringYY 	
filenameYY
 
)YY 
{ZZ 
if[[ 
([[ 
context[[ 
==[[ 
null[[ 
)[[ 
{\\ 
return]] 

;]]
 
}^^ 
StringBuilder`` 

wordString`` 
=`` 
new`` !
StringBuilder``" /
(``/ 0
)``0 1
;``1 2

wordStringbb 
.bb 
Appendbb 
(bb 
$strcc 
+cc 
$strdd 8
+dd9 :
$stree 5
+ee6 7
$strff .
+ff/ 0
$strgg 
)hh 
;hh 

wordStringjj 
.jj 
Appendjj 
(jj 
$strkk 
+kk 
$strll 
+ll 
$strmm 
+mm 
$strnn 
+nn 
$stroo 
+oo 
$strpp 
+pp 
$strqq 
+qq 
$strrr 
)ss 
;ss 

wordStringuu 
.uu 
Appenduu 
(uu 
$strvv 
+vv 
$strww #
+ww$ %
$strxx 
+xx 
$stryy 
+yy 
$strzz (
+zz) *
$str{{ 
+{{  
$str|| 
+||  
$str}} 
+}} 
$str~~ 
+~~	 

$str 
+ 
$str
ÄÄ 
+
ÄÄ 
$str
ÅÅ 
+
ÅÅ 	
$str
ÇÇ 	
+
ÇÇ
 
$str
ÉÉ 
+
ÉÉ 
$str
ÑÑ 
)
ÖÖ 
;
ÖÖ 

wordString
áá 
.
áá 
Append
áá 
(
áá 
$str
àà 2
+
àà3 4
$str
ââ 
+
ââ 
$str
ää *
+
ää+ ,
$str
ãã 
+
ãã  
DateTime
åå 
.
åå 
Now
åå 
+
åå 
$str
åå 5
)
çç 
;
çç 

wordString
èè 
.
èè 
Append
èè 
(
èè 
$str
èè 
)
èè 
;
èè 
for
ëë 
(
ëë 
int
ëë 
i
ëë 
=
ëë 
$num
ëë 
;
ëë 
i
ëë 
<
ëë 
table
ëë 
.
ëë 
Columns
ëë $
.
ëë$ %
Count
ëë% *
;
ëë* +
i
ëë, -
++
ëë- /
)
ëë/ 0
{
íí 

wordString
ìì 
.
ìì 
Append
ìì 
(
ìì 
$str
ìì 
+
ìì 
table
ìì $
.
ìì$ %
Columns
ìì% ,
[
ìì, -
i
ìì- .
]
ìì. /
.
ìì/ 0

ColumnName
ìì0 :
+
ìì; <
$str
ìì= D
)
ììD E
;
ììE F
}
îî 

wordString
ññ 
.
ññ 
Append
ññ 
(
ññ 
$str
ññ 
)
ññ 
;
ññ 
for
ôô 
(
ôô 
int
ôô 
x
ôô 
=
ôô 
$num
ôô 
;
ôô 
x
ôô 
<
ôô 
table
ôô 
.
ôô 
Rows
ôô !
.
ôô! "
Count
ôô" '
;
ôô' (
x
ôô) *
++
ôô* ,
)
ôô, -
{
öö 

wordString
õõ 
.
õõ 
Append
õõ 
(
õõ 
$str
õõ 
)
õõ 
;
õõ 
for
ùù 
(
ùù 	
int
ùù	 
i
ùù 
=
ùù 
$num
ùù 
;
ùù 
i
ùù 
<
ùù 
table
ùù 
.
ùù 
Columns
ùù %
.
ùù% &
Count
ùù& +
;
ùù+ ,
i
ùù- .
++
ùù. 0
)
ùù0 1
{
ûû 

wordString
üü 
.
üü 
Append
üü 
(
üü 
$str
üü 
+
üü 
table
üü  %
.
üü% &
Rows
üü& *
[
üü* +
x
üü+ ,
]
üü, -
[
üü- .
i
üü. /
]
üü/ 0
+
üü1 2
$str
üü3 :
)
üü: ;
;
üü; <
}
†† 

wordString
¢¢ 
.
¢¢ 
Append
¢¢ 
(
¢¢ 
$str
¢¢ 
)
¢¢ 
;
¢¢ 
}
££ 

wordString
•• 
.
•• 
Append
•• 
(
•• 
$str
•• .
)
••. /
;
••/ 0
context
ßß 

.
ßß
 
Response
ßß 
.
ßß 
ClearHeaders
ßß  
(
ßß  !
)
ßß! "
;
ßß" #
context
®® 

.
®®
 
Response
®® 
.
®® 
Clear
®® 
(
®® 
)
®® 
;
®® 
context
©© 

.
©©
 
Response
©© 
.
©© 
Buffer
©© 
=
©© 
true
©© !
;
©©! "
context
™™ 

.
™™
 
Response
™™ 
.
™™ 
ContentType
™™ 
=
™™  !
$str
™™" 6
;
™™6 7
context
¨¨ 

.
¨¨
 
Response
¨¨ 
.
¨¨ 
AppendHeader
¨¨  
(
¨¨  !
$str
¨¨! 6
,
¨¨6 7
$str
¨¨8 P
+
¨¨Q R
filename
¨¨S [
+
¨¨\ ]
$str
¨¨^ b
)
¨¨b c
;
¨¨c d
Encoding
≠≠ 
encoding
≠≠ 
=
≠≠ 
new
≠≠ 
UTF8Encoding
≠≠ '
(
≠≠' (
)
≠≠( )
;
≠≠) *
context
ÆÆ 

.
ÆÆ
 
Response
ÆÆ 
.
ÆÆ 
ContentEncoding
ÆÆ #
=
ÆÆ$ %
encoding
ÆÆ& .
;
ÆÆ. /
context
ØØ 

.
ØØ
 
Response
ØØ 
.
ØØ 
Write
ØØ 
(
ØØ 

wordString
ØØ $
.
ØØ$ %
ToString
ØØ% -
(
ØØ- .
)
ØØ. /
)
ØØ/ 0
;
ØØ0 1
}
∞∞ 
public
≤≤ 
static
≤≤	 
void
≤≤  
ExportStringAsFile
≤≤ '
(
≤≤' (
HttpContext
≥≥ 
context
≥≥ 
,
≥≥ 
Encoding
¥¥ 
encoding
¥¥ 
,
¥¥ 
string
µµ 	
mimeType
µµ
 
,
µµ 
string
∂∂ 	
content
∂∂
 
,
∂∂ 
string
∑∑ 	
filename
∑∑
 
)
∑∑ 
{
∏∏ 
if
ππ 
(
ππ 
context
ππ 
==
ππ 
null
ππ 
)
ππ 
{
ππ 
return
ππ  
;
ππ  !
}
ππ" #
context
∫∫ 

.
∫∫
 
Response
∫∫ 
.
∫∫ 
Clear
∫∫ 
(
∫∫ 
)
∫∫ 
;
∫∫ 
context
ªª 

.
ªª
 
Response
ªª 
.
ªª 
Buffer
ªª 
=
ªª 
true
ªª !
;
ªª! "
context
ºº 

.
ºº
 
Response
ºº 
.
ºº 
ContentType
ºº 
=
ºº  !
mimeType
ºº" *
;
ºº* +
context
ææ 

.
ææ
 
Response
ææ 
.
ææ 
AppendHeader
ææ  
(
ææ  !
$str
ææ! 6
,
ææ6 7
$str
ææ8 P
+
ææQ R
filename
ææS [
+
ææ\ ]
$str
ææ^ b
)
ææb c
;
ææc d
context
¿¿ 

.
¿¿
 
Response
¿¿ 
.
¿¿ 
ContentEncoding
¿¿ #
=
¿¿$ %
encoding
¿¿& .
;
¿¿. /
StreamWriter
¬¬ 
sw
¬¬ 
=
¬¬ 
new
¬¬ 
StreamWriter
¬¬ %
(
¬¬% &
context
¬¬& -
.
¬¬- .
Response
¬¬. 6
.
¬¬6 7
OutputStream
¬¬7 C
)
¬¬C D
;
¬¬D E
sw
ƒƒ 
.
ƒƒ 
Write
ƒƒ 
(
ƒƒ 
content
ƒƒ 
)
ƒƒ 
;
ƒƒ 
sw
∆∆ 
.
∆∆ 
Close
∆∆ 
(
∆∆ 
)
∆∆ 
;
∆∆ 
context
»» 

.
»»
 
Response
»» 
.
»» 
End
»» 
(
»» 
)
»» 
;
»» 
}
…… 
public
ÀÀ 
static
ÀÀ 
void
ÀÀ $
ExportDynamicListToCSV
ÀÀ 1
(
ÀÀ1 2
HttpContext
ÀÀ2 =
context
ÀÀ> E
,
ÀÀE F
List
ÀÀG K
<
ÀÀK L
dynamic
ÀÀL S
>
ÀÀS T
objects
ÀÀU \
,
ÀÀ\ ]
string
ÀÀ^ d
filename
ÀÀe m
)
ÀÀm n
{
ÃÃ 	
if
ÕÕ 
(
ÕÕ 
context
ÕÕ 
==
ÕÕ 
null
ÕÕ 
)
ÕÕ  
{
ÕÕ! "
return
ÕÕ# )
;
ÕÕ) *
}
ÕÕ+ ,
context
ŒŒ 
.
ŒŒ 
Response
ŒŒ 
.
ŒŒ 
ClearHeaders
ŒŒ )
(
ŒŒ) *
)
ŒŒ* +
;
ŒŒ+ ,
context
œœ 
.
œœ 
Response
œœ 
.
œœ 
Clear
œœ "
(
œœ" #
)
œœ# $
;
œœ$ %
context
–– 
.
–– 
Response
–– 
.
–– 
ClearContent
–– )
(
––) *
)
––* +
;
––+ ,
context
—— 
.
—— 
Response
—— 
.
—— 
Buffer
—— #
=
——$ %
true
——& *
;
——* +
context
““ 
.
““ 
Response
““ 
.
““ 
ContentType
““ (
=
““) *
$str
““+ 5
;
““5 6
context
‘‘ 
.
‘‘ 
Response
‘‘ 
.
‘‘ 
AppendHeader
‘‘ )
(
‘‘) *
$str
‘‘* ?
,
‘‘? @
$str
‘‘A Y
+
‘‘Z [
filename
‘‘\ d
+
‘‘e f
$str
‘‘g k
)
‘‘k l
;
‘‘l m
context
’’ 
.
’’ 
Response
’’ 
.
’’ 
ContentEncoding
’’ ,
=
’’- .
new
’’/ 2
UTF8Encoding
’’3 ?
(
’’? @
)
’’@ A
;
’’A B
using
◊◊ 
(
◊◊ 
var
◊◊ 
csv
◊◊ 
=
◊◊ 
new
◊◊  
	CsvWriter
◊◊! *
(
◊◊* +
new
◊◊+ .
StreamWriter
◊◊/ ;
(
◊◊; <
context
◊◊< C
.
◊◊C D
Response
◊◊D L
.
◊◊L M
OutputStream
◊◊M Y
)
◊◊Y Z
)
◊◊Z [
)
◊◊[ \
{
ÿÿ 
csv
ŸŸ 
.
ŸŸ 
WriteRecords
ŸŸ  
(
ŸŸ  !
objects
ŸŸ! (
)
ŸŸ( )
;
ŸŸ) *
}
⁄⁄ 
context
‹‹ 
.
‹‹ 
Response
‹‹ 
.
‹‹ 
End
‹‹  
(
‹‹  !
)
‹‹! "
;
‹‹" #
}
›› 	
public
ﬂﬂ 
static
ﬂﬂ 
string
ﬂﬂ $
AutoEscapeStringForCsv
ﬂﬂ 3
(
ﬂﬂ3 4
string
ﬂﬂ4 :
data
ﬂﬂ; ?
)
ﬂﬂ? @
{
‡‡ 
bool
·· 
wrap
·· 
=
·· 
false
·· 
;
·· 
if
‰‰ 
(
‰‰ 
data
‰‰ 
.
‰‰ 
Contains
‰‰ 
(
‰‰ 
$str
‰‰ 
)
‰‰ 
)
‰‰ 
{
ÂÂ 
data
ÊÊ 
=
ÊÊ	 

data
ÊÊ 
.
ÊÊ 
Replace
ÊÊ 
(
ÊÊ 
$str
ÊÊ 
,
ÊÊ 
$str
ÊÊ $
)
ÊÊ$ %
;
ÊÊ% &
wrap
ÁÁ 
=
ÁÁ	 

true
ÁÁ 
;
ÁÁ 
}
ËË 
if
ÎÎ 
(
ÎÎ 
data
ÎÎ 
.
ÎÎ 
Any
ÎÎ 
(
ÎÎ 
c
ÎÎ 
=>
ÎÎ 
!
ÎÎ 
char
ÎÎ 
.
ÎÎ 
IsLetterOrDigit
ÎÎ *
(
ÎÎ* +
c
ÎÎ+ ,
)
ÎÎ, -
)
ÎÎ- .
)
ÎÎ. /
{
ÏÏ 
wrap
ÌÌ 
=
ÌÌ	 

true
ÌÌ 
;
ÌÌ 
}
ÓÓ 
if
ÒÒ 
(
ÒÒ 
wrap
ÒÒ 
)
ÒÒ 
{
ÚÚ 
data
ÛÛ 
=
ÛÛ	 

String
ÛÛ 
.
ÛÛ 
Format
ÛÛ 
(
ÛÛ 
$str
ÛÛ "
,
ÛÛ" #
data
ÛÛ$ (
)
ÛÛ( )
;
ÛÛ) *
}
ÙÙ 
return
ˆˆ 	
data
ˆˆ
 
;
ˆˆ 
}
˜˜ 
}
¯¯ 
}˘˘ Ç

oD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\ImportHelper.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public		 

static		 
class		 
ImportHelper		 $
{

 
public 
static 
List 
< 
dynamic "
>" #!
GetDynamicListFromCSV$ 9
(9 :
Stream: @

fileStreamA K
,K L
boolM Q
	hasHeaderR [
=\ ]
true^ b
)b c
{ 	
return 
new 
	CsvReader  
(  !
new 
StreamReader  
(  !

fileStream! +
)+ ,
,, -
new 
CsvConfiguration $
($ %
)% &
{' (
HasHeaderRecord) 8
=9 :
	hasHeader; D
}E F
)F G
. 

GetRecords 
< 
dynamic #
># $
($ %
)% &
.& '
ToList' -
(- .
). /
;/ 0
} 	
} 
} ÍØ
kD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\IOHelper.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public 
static 
class 
IOHelper 
{ 
public 
static	 
string 
ToCleanFileName &
(& '
this' +
string, 2
s3 4
)4 5
{ 
Regex 
onlyOneSpaceRegEx	 
= 
new  
Regex! &
(& '
$str' 7
)7 8
;8 9
if 
( 
string 
. 
IsNullOrEmpty 
( 
s 
) 
) 
{ 
return 

s 
; 
} 
s   
=   
onlyOneSpaceRegEx   
.   
Replace    
(    !
s  ! "
,  " #
string  $ *
.  * +
Empty  + 0
)  0 1
;  1 2
return"" 	
s""
 
."" 
ToLower"" 
("" 
)"" 
."" "
RemoveInvalidPathChars"" ,
("", -
$str""- 3
)""3 4
.""4 5
RemoveLineBreaks""5 E
(""E F
)""F G
.""G H
Replace""H O
(""O P
$str""P S
,""S T
string""U [
.""[ \
Empty""\ a
)""a b
.""b c
Replace""c j
(""j k
$str""k o
,""o p
string""q w
.""w x
Empty""x }
)""} ~
.""~ 
Replace	"" Ü
(
""Ü á
$str
""á å
,
""å ç
$str
""é ë
)
""ë í
.
""í ì
Replace
""ì ö
(
""ö õ
$str
""õ û
,
""û ü
$str
""† £
)
""£ §
.
""§ •
Replace
""• ¨
(
""¨ ≠
$str
""≠ ∞
,
""∞ ±
string
""≤ ∏
.
""∏ π
Empty
""π æ
)
""æ ø
.
""ø ¿
Replace
""¿ «
(
""« »
$str
""» À
,
""À Ã
string
""Õ ”
.
""” ‘
Empty
""‘ Ÿ
)
""Ÿ ⁄
.
""⁄ €
Replace
""€ ‚
(
""‚ „
$str
""„ Ê
,
""Ê Á
string
""Ë Ó
.
""Ó Ô
Empty
""Ô Ù
)
""Ù ı
.
""ı ˆ
Replace
""ˆ ˝
(
""˝ ˛
$str
""˛ Å
,
""Å Ç
string
""É â
.
""â ä
Empty
""ä è
)
""è ê
;
""ê ë
}## 
public%% 
static%%	 
string%% 
ToCleanFileName%% &
(%%& '
this%%' +
string%%, 2
s%%3 4
,%%4 5
bool%%6 :
forceLowerCase%%; I
)%%I J
{&& 
Regex'' 
onlyOneSpaceRegEx''	 
='' 
new''  
Regex''! &
(''& '
$str''' 7
)''7 8
;''8 9
if)) 
()) 
string)) 
.)) 
IsNullOrEmpty)) 
()) 
s)) 
))) 
))) 
{** 
return++ 

s++ 
;++ 
},, 
s.. 
=.. 
onlyOneSpaceRegEx.. 
... 
Replace..  
(..  !
s..! "
,.." #
string..$ *
...* +
Empty..+ 0
)..0 1
;..1 2
if00 
(00 
forceLowerCase00 
)00 
{11 
return22 

s22 
.22 
ToLower22 
(22 
)22 
.22 "
RemoveInvalidPathChars22 -
(22- .
$str22. 4
)224 5
.225 6
RemoveLineBreaks226 F
(22F G
)22G H
.22H I
Replace22I P
(22P Q
$str22Q T
,22T U
string22V \
.22\ ]
Empty22] b
)22b c
.22c d
Replace22d k
(22k l
$str22l q
,22q r
$str22s v
)22v w
.22w x
Replace22x 
(	22 Ä
$str
22Ä É
,
22É Ñ
$str
22Ö à
)
22à â
.
22â ä
Replace
22ä ë
(
22ë í
$str
22í ï
,
22ï ñ
string
22ó ù
.
22ù û
Empty
22û £
)
22£ §
.
22§ •
Replace
22• ¨
(
22¨ ≠
$str
22≠ ∞
,
22∞ ±
string
22≤ ∏
.
22∏ π
Empty
22π æ
)
22æ ø
.
22ø ¿
Replace
22¿ «
(
22« »
$str
22» À
,
22À Ã
string
22Õ ”
.
22” ‘
Empty
22‘ Ÿ
)
22Ÿ ⁄
.
22⁄ €
Replace
22€ ‚
(
22‚ „
$str
22„ Ê
,
22Ê Á
string
22Ë Ó
.
22Ó Ô
Empty
22Ô Ù
)
22Ù ı
.
22ı ˆ
Replace
22ˆ ˝
(
22˝ ˛
$str
22˛ Å
,
22Å Ç
string
22É â
.
22â ä
Empty
22ä è
)
22è ê
.
22ê ë
Replace
22ë ò
(
22ò ô
$str
22ô ú
,
22ú ù
string
22û §
.
22§ •
Empty
22• ™
)
22™ ´
;
22´ ¨
}33 
return55 	
s55
 
.55 "
RemoveInvalidPathChars55 "
(55" #
$str55# )
)55) *
.55* +
RemoveLineBreaks55+ ;
(55; <
)55< =
.55= >
Replace55> E
(55E F
$str55F I
,55I J
string55K Q
.55Q R
Empty55R W
)55W X
.55X Y
Replace55Y `
(55` a
$str55a d
,55d e
string55f l
.55l m
Empty55m r
)55r s
.55s t
Replace55t {
(55{ |
$str55| 
,	55 Ä
string
55Å á
.
55á à
Empty
55à ç
)
55ç é
.
55é è
Replace
55è ñ
(
55ñ ó
$str
55ó ö
,
55ö õ
string
55ú ¢
.
55¢ £
Empty
55£ ®
)
55® ©
.
55© ™
Replace
55™ ±
(
55± ≤
$str
55≤ µ
,
55µ ∂
string
55∑ Ω
.
55Ω æ
Empty
55æ √
)
55√ ƒ
.
55ƒ ≈
Replace
55≈ Ã
(
55Ã Õ
$str
55Õ –
,
55– —
string
55“ ÿ
.
55ÿ Ÿ
Empty
55Ÿ ﬁ
)
55ﬁ ﬂ
.
55ﬂ ‡
Replace
55‡ Á
(
55Á Ë
$str
55Ë Î
,
55Î Ï
string
55Ì Û
.
55Û Ù
Empty
55Ù ˘
)
55˘ ˙
.
55˙ ˚
Replace
55˚ Ç
(
55Ç É
$str
55É Ü
,
55Ü á
string
55à é
.
55é è
Empty
55è î
)
55î ï
;
55ï ñ
}66 
public88 
static88	 
string88 
ToCleanFolderName88 (
(88( )
this88) -
string88. 4
s885 6
,886 7
bool888 <
forceLowerCase88= K
)88K L
{99 
Regex:: 
onlyOneSpaceRegEx::	 
=:: 
new::  
Regex::! &
(::& '
$str::' 7
)::7 8
;::8 9
if<< 
(<< 
string<< 
.<< 
IsNullOrEmpty<< 
(<< 
s<< 
)<< 
)<< 
{== 
return>> 

s>> 
;>> 
}?? 
sAA 
=AA 
onlyOneSpaceRegExAA 
.AA 
ReplaceAA  
(AA  !
sAA! "
,AA" #
stringAA$ *
.AA* +
EmptyAA+ 0
)AA0 1
;AA1 2
ifCC 
(CC 
forceLowerCaseCC 
)CC 
{DD 
returnEE 

sEE 
.EE 
ToLowerEE 
(EE 
)EE 
.EE "
RemoveInvalidPathCharsEE -
(EE- .
$strEE. 6
)EE6 7
.EE7 8
RemoveLineBreaksEE8 H
(EEH I
)EEI J
.EEJ K
ReplaceEEK R
(EER S
$strEES V
,EEV W
stringEEX ^
.EE^ _
EmptyEE_ d
)EEd e
.EEe f
ReplaceEEf m
(EEm n
$strEEn s
,EEs t
$strEEu x
)EEx y
.EEy z
Replace	EEz Å
(
EEÅ Ç
$str
EEÇ Ö
,
EEÖ Ü
$str
EEá ä
)
EEä ã
.
EEã å
Replace
EEå ì
(
EEì î
$str
EEî ó
,
EEó ò
string
EEô ü
.
EEü †
Empty
EE† •
)
EE• ¶
.
EE¶ ß
Replace
EEß Æ
(
EEÆ Ø
$str
EEØ ≤
,
EE≤ ≥
string
EE¥ ∫
.
EE∫ ª
Empty
EEª ¿
)
EE¿ ¡
.
EE¡ ¬
Replace
EE¬ …
(
EE…  
$str
EE  Õ
,
EEÕ Œ
string
EEœ ’
.
EE’ ÷
Empty
EE÷ €
)
EE€ ‹
.
EE‹ ›
Replace
EE› ‰
(
EE‰ Â
$str
EEÂ Ë
,
EEË È
string
EEÍ 
.
EE Ò
Empty
EEÒ ˆ
)
EEˆ ˜
.
EE˜ ¯
Replace
EE¯ ˇ
(
EEˇ Ä
$str
EEÄ É
,
EEÉ Ñ
string
EEÖ ã
.
EEã å
Empty
EEå ë
)
EEë í
.
EEí ì
Replace
EEì ö
(
EEö õ
$str
EEõ û
,
EEû ü
string
EE† ¶
.
EE¶ ß
Empty
EEß ¨
)
EE¨ ≠
;
EE≠ Æ
}FF 
returnHH 	
sHH
 
.HH "
RemoveInvalidPathCharsHH "
(HH" #
$strHH# +
)HH+ ,
.HH, -
RemoveLineBreaksHH- =
(HH= >
)HH> ?
.HH? @
ReplaceHH@ G
(HHG H
$strHHH K
,HHK L
stringHHM S
.HHS T
EmptyHHT Y
)HHY Z
.HHZ [
ReplaceHH[ b
(HHb c
$strHHc f
,HHf g
stringHHh n
.HHn o
EmptyHHo t
)HHt u
.HHu v
ReplaceHHv }
(HH} ~
$str	HH~ Å
,
HHÅ Ç
string
HHÉ â
.
HHâ ä
Empty
HHä è
)
HHè ê
.
HHê ë
Replace
HHë ò
(
HHò ô
$str
HHô ú
,
HHú ù
string
HHû §
.
HH§ •
Empty
HH• ™
)
HH™ ´
.
HH´ ¨
Replace
HH¨ ≥
(
HH≥ ¥
$str
HH¥ ∑
,
HH∑ ∏
string
HHπ ø
.
HHø ¿
Empty
HH¿ ≈
)
HH≈ ∆
.
HH∆ «
Replace
HH« Œ
(
HHŒ œ
$str
HHœ “
,
HH“ ”
string
HH‘ ⁄
.
HH⁄ €
Empty
HH€ ‡
)
HH‡ ·
.
HH· ‚
Replace
HH‚ È
(
HHÈ Í
$str
HHÍ Ì
,
HHÌ Ó
string
HHÔ ı
.
HHı ˆ
Empty
HHˆ ˚
)
HH˚ ¸
.
HH¸ ˝
Replace
HH˝ Ñ
(
HHÑ Ö
$str
HHÖ à
,
HHà â
string
HHä ê
.
HHê ë
Empty
HHë ñ
)
HHñ ó
;
HHó ò
}II 
publicKK 
staticKK	 
stringKK "
RemoveInvalidPathCharsKK -
(KK- .
thisKK. 2
stringKK3 9
sKK: ;
,KK; <
stringKK= C
typeKKD H
)KKH I
{LL 
ifMM 
(MM 
stringMM 
.MM 
IsNullOrEmptyMM 
(MM 
sMM 
)MM 
)MM 
{NN 
returnOO 

sOO 
;OO 
}PP 
charRR 
[RR 
]RR 	
invalidPathCharsRR
 
=RR 
nullRR !
;RR! "
switchTT 	
(TT
 
typeTT 
)TT 
{UU 
caseVV 
$strVV	 
:VV 
invalidPathCharsWW 
=WW 
PathWW 
.WW #
GetInvalidFileNameCharsWW 4
(WW4 5
)WW5 6
;WW6 7
breakXX 

;XX
 
caseYY 
$strYY	 
:YY 
defaultZZ 
:ZZ 
invalidPathChars[[ 
=[[ 
Path[[ 
.[[ 
GetInvalidPathChars[[ 0
([[0 1
)[[1 2
;[[2 3
break\\ 

;\\
 
}]] 
char__ 
[__ 
]__ 	
result__
 
=__ 
new__ 
char__ 
[__ 
s__ 
.__ 
Length__ $
]__$ %
;__% &
int`` 
resultIndex`` 
=`` 
$num`` 
;`` 
foreachbb 

(bb 
charbb 
cbb 
inbb 
sbb 
)bb 
{cc 
ifdd 
(dd 
!dd 	
invalidPathCharsdd	 
.dd 
Containsdd "
(dd" #
cdd# $
)dd$ %
)dd% &
resultee 
[ee 
resultIndexee 
++ee 
]ee 
=ee 
cee 
;ee 
}ff 
ifhh 
(hh 
$numhh 
==hh	 
resultIndexhh 
)hh 
sii 
=ii 
stringii 
.ii 
Emptyii 
;ii 
elsejj 
ifjj 

(jj 
resultjj 
.jj 
Lengthjj 
!=jj 
resultIndexjj (
)jj( )
skk 
=kk 
newkk 
stringkk 
(kk 
resultkk 
,kk 
$numkk 
,kk 
resultIndexkk )
)kk) *
;kk* +
returnmm 	
smm
 
;mm 
}nn 
publicuu 
staticuu	 
booluu 
IsMediaFileuu  
(uu  !
thisuu! %
FileInfouu& .
fileInfouu/ 7
)uu7 8
{vv 
ifww 
(ww 
stringww 
.ww 
Equalsww 
(ww 
fileInfoww 
.ww 
	Extensionww '
,ww' (
$strww) /
,ww/ 0
StringComparisonww1 A
.wwA B&
InvariantCultureIgnoreCasewwB \
)ww\ ]
)ww] ^
{ww_ `
returnwwa g
truewwh l
;wwl m
}wwn o
ifxx 
(xx 
stringxx 
.xx 
Equalsxx 
(xx 
fileInfoxx 
.xx 
	Extensionxx '
,xx' (
$strxx) /
,xx/ 0
StringComparisonxx1 A
.xxA B&
InvariantCultureIgnoreCasexxB \
)xx\ ]
)xx] ^
{xx_ `
returnxxa g
truexxh l
;xxl m
}xxn o
ifyy 
(yy 
stringyy 
.yy 
Equalsyy 
(yy 
fileInfoyy 
.yy 
	Extensionyy '
,yy' (
$stryy) /
,yy/ 0
StringComparisonyy1 A
.yyA B&
InvariantCultureIgnoreCaseyyB \
)yy\ ]
)yy] ^
{yy_ `
returnyya g
trueyyh l
;yyl m
}yyn o
ifzz 
(zz 
stringzz 
.zz 
Equalszz 
(zz 
fileInfozz 
.zz 
	Extensionzz '
,zz' (
$strzz) 0
,zz0 1
StringComparisonzz2 B
.zzB C&
InvariantCultureIgnoreCasezzC ]
)zz] ^
)zz^ _
{zz` a
returnzzb h
truezzi m
;zzm n
}zzo p
if{{ 
({{ 
string{{ 
.{{ 
Equals{{ 
({{ 
fileInfo{{ 
.{{ 
	Extension{{ '
,{{' (
$str{{) /
,{{/ 0
StringComparison{{1 A
.{{A B&
InvariantCultureIgnoreCase{{B \
){{\ ]
){{] ^
{{{_ `
return{{a g
true{{h l
;{{l m
}{{n o
if|| 
(|| 
string|| 
.|| 
Equals|| 
(|| 
fileInfo|| 
.|| 
	Extension|| '
,||' (
$str||) /
,||/ 0
StringComparison||1 A
.||A B&
InvariantCultureIgnoreCase||B \
)||\ ]
)||] ^
{||_ `
return||a g
true||h l
;||l m
}||n o
if}} 
(}} 
string}} 
.}} 
Equals}} 
(}} 
fileInfo}} 
.}} 
	Extension}} '
,}}' (
$str}}) /
,}}/ 0
StringComparison}}1 A
.}}A B&
InvariantCultureIgnoreCase}}B \
)}}\ ]
)}}] ^
{}}_ `
return}}a g
true}}h l
;}}l m
}}}n o
if~~ 
(~~ 
string~~ 
.~~ 
Equals~~ 
(~~ 
fileInfo~~ 
.~~ 
	Extension~~ '
,~~' (
$str~~) /
,~~/ 0
StringComparison~~1 A
.~~A B&
InvariantCultureIgnoreCase~~B \
)~~\ ]
)~~] ^
{~~_ `
return~~a g
true~~h l
;~~l m
}~~n o
if 
( 
string 
. 
Equals 
( 
fileInfo 
. 
	Extension '
,' (
$str) /
,/ 0
StringComparison1 A
.A B&
InvariantCultureIgnoreCaseB \
)\ ]
)] ^
{_ `
returna g
trueh l
;l m
}n o
if
ÄÄ 
(
ÄÄ 
string
ÄÄ 
.
ÄÄ 
Equals
ÄÄ 
(
ÄÄ 
fileInfo
ÄÄ 
.
ÄÄ 
	Extension
ÄÄ '
,
ÄÄ' (
$str
ÄÄ) /
,
ÄÄ/ 0
StringComparison
ÄÄ1 A
.
ÄÄA B(
InvariantCultureIgnoreCase
ÄÄB \
)
ÄÄ\ ]
)
ÄÄ] ^
{
ÄÄ_ `
return
ÄÄa g
true
ÄÄh l
;
ÄÄl m
}
ÄÄn o
if
ÅÅ 
(
ÅÅ 
string
ÅÅ 
.
ÅÅ 
Equals
ÅÅ 
(
ÅÅ 
fileInfo
ÅÅ 
.
ÅÅ 
	Extension
ÅÅ '
,
ÅÅ' (
$str
ÅÅ) /
,
ÅÅ/ 0
StringComparison
ÅÅ1 A
.
ÅÅA B(
InvariantCultureIgnoreCase
ÅÅB \
)
ÅÅ\ ]
)
ÅÅ] ^
{
ÅÅ_ `
return
ÅÅa g
true
ÅÅh l
;
ÅÅl m
}
ÅÅn o
if
ÇÇ 
(
ÇÇ 
string
ÇÇ 
.
ÇÇ 
Equals
ÇÇ 
(
ÇÇ 
fileInfo
ÇÇ 
.
ÇÇ 
	Extension
ÇÇ '
,
ÇÇ' (
$str
ÇÇ) /
,
ÇÇ/ 0
StringComparison
ÇÇ1 A
.
ÇÇA B(
InvariantCultureIgnoreCase
ÇÇB \
)
ÇÇ\ ]
)
ÇÇ] ^
{
ÇÇ_ `
return
ÇÇa g
true
ÇÇh l
;
ÇÇl m
}
ÇÇn o
if
ÉÉ 
(
ÉÉ 
string
ÉÉ 
.
ÉÉ 
Equals
ÉÉ 
(
ÉÉ 
fileInfo
ÉÉ 
.
ÉÉ 
	Extension
ÉÉ '
,
ÉÉ' (
$str
ÉÉ) /
,
ÉÉ/ 0
StringComparison
ÉÉ1 A
.
ÉÉA B(
InvariantCultureIgnoreCase
ÉÉB \
)
ÉÉ\ ]
)
ÉÉ] ^
{
ÉÉ_ `
return
ÉÉa g
true
ÉÉh l
;
ÉÉl m
}
ÉÉn o
if
ÑÑ 
(
ÑÑ 
string
ÑÑ 
.
ÑÑ 
Equals
ÑÑ 
(
ÑÑ 
fileInfo
ÑÑ 
.
ÑÑ 
	Extension
ÑÑ '
,
ÑÑ' (
$str
ÑÑ) 0
,
ÑÑ0 1
StringComparison
ÑÑ2 B
.
ÑÑB C(
InvariantCultureIgnoreCase
ÑÑC ]
)
ÑÑ] ^
)
ÑÑ^ _
{
ÑÑ` a
return
ÑÑb h
true
ÑÑi m
;
ÑÑm n
}
ÑÑo p
if
ÖÖ 
(
ÖÖ 
string
ÖÖ 
.
ÖÖ 
Equals
ÖÖ 
(
ÖÖ 
fileInfo
ÖÖ 
.
ÖÖ 
	Extension
ÖÖ '
,
ÖÖ' (
$str
ÖÖ) /
,
ÖÖ/ 0
StringComparison
ÖÖ1 A
.
ÖÖA B(
InvariantCultureIgnoreCase
ÖÖB \
)
ÖÖ\ ]
)
ÖÖ] ^
{
ÖÖ_ `
return
ÖÖa g
true
ÖÖh l
;
ÖÖl m
}
ÖÖn o
if
ÜÜ 
(
ÜÜ 
string
ÜÜ 
.
ÜÜ 
Equals
ÜÜ 
(
ÜÜ 
fileInfo
ÜÜ 
.
ÜÜ 
	Extension
ÜÜ '
,
ÜÜ' (
$str
ÜÜ) /
,
ÜÜ/ 0
StringComparison
ÜÜ1 A
.
ÜÜA B(
InvariantCultureIgnoreCase
ÜÜB \
)
ÜÜ\ ]
)
ÜÜ] ^
{
ÜÜ_ `
return
ÜÜa g
true
ÜÜh l
;
ÜÜl m
}
ÜÜn o
return
àà 	
false
àà
 
;
àà 
}
ââ 
public
êê 
static
êê	 
bool
êê 
IsWebImageFile
êê #
(
êê# $
this
êê$ (
FileInfo
êê) 1
fileInfo
êê2 :
)
êê: ;
{
ëë 
if
íí 
(
íí 
string
íí 
.
íí 
Equals
íí 
(
íí 
fileInfo
íí 
.
íí 
	Extension
íí '
,
íí' (
$str
íí) /
,
íí/ 0
StringComparison
íí1 A
.
ííA B(
InvariantCultureIgnoreCase
ííB \
)
íí\ ]
)
íí] ^
{
íí_ `
return
íía g
true
ííh l
;
ííl m
}
íín o
if
ìì 
(
ìì 
string
ìì 
.
ìì 
Equals
ìì 
(
ìì 
fileInfo
ìì 
.
ìì 
	Extension
ìì '
,
ìì' (
$str
ìì) 0
,
ìì0 1
StringComparison
ìì2 B
.
ììB C(
InvariantCultureIgnoreCase
ììC ]
)
ìì] ^
)
ìì^ _
{
ìì` a
return
ììb h
true
ììi m
;
ììm n
}
ììo p
if
îî 
(
îî 
string
îî 
.
îî 
Equals
îî 
(
îî 
fileInfo
îî 
.
îî 
	Extension
îî '
,
îî' (
$str
îî) /
,
îî/ 0
StringComparison
îî1 A
.
îîA B(
InvariantCultureIgnoreCase
îîB \
)
îî\ ]
)
îî] ^
{
îî_ `
return
îîa g
true
îîh l
;
îîl m
}
îîn o
if
ïï 
(
ïï 
string
ïï 
.
ïï 
Equals
ïï 
(
ïï 
fileInfo
ïï 
.
ïï 
	Extension
ïï '
,
ïï' (
$str
ïï) /
,
ïï/ 0
StringComparison
ïï1 A
.
ïïA B(
InvariantCultureIgnoreCase
ïïB \
)
ïï\ ]
)
ïï] ^
{
ïï_ `
return
ïïa g
true
ïïh l
;
ïïl m
}
ïïn o
if
ññ 
(
ññ 
string
ññ 
.
ññ 
Equals
ññ 
(
ññ 
fileInfo
ññ 
.
ññ 
	Extension
ññ '
,
ññ' (
$str
ññ) /
,
ññ/ 0
StringComparison
ññ1 A
.
ññA B(
InvariantCultureIgnoreCase
ññB \
)
ññ\ ]
)
ññ] ^
{
ññ_ `
return
ñña g
true
ññh l
;
ññl m
}
ññn o
return
òò 	
false
òò
 
;
òò 
}
ôô 
public
õõ 
static
õõ	 
bool
õõ "
IsDecendentDirectory
õõ )
(
õõ) *
DirectoryInfo
õõ* 7
directoryToSearch
õõ8 I
,
õõI J
DirectoryInfo
õõK X
directoryToFind
õõY h
)
õõh i
{
úú 
if
ùù 
(
ùù 
directoryToFind
ùù 
.
ùù 
FullName
ùù 
.
ùù  

StartsWith
ùù  *
(
ùù* +
directoryToSearch
ùù+ <
.
ùù< =
FullName
ùù= E
)
ùùE F
)
ùùF G
{
ûû 
return
üü 

true
üü 
;
üü 
}
†† 
return
¢¢ 	
false
¢¢
 
;
¢¢ 
}
££ 
public
•• 
static
••	 
bool
•• "
IsDecendentDirectory
•• )
(
••) *
DirectoryInfo
••* 7
directoryToSearch
••8 I
,
••I J
FileInfo
••K S

fileToFind
••T ^
)
••^ _
{
¶¶ 
if
ßß 
(
ßß 

fileToFind
ßß 
.
ßß 
FullName
ßß 
.
ßß 

StartsWith
ßß %
(
ßß% &
directoryToSearch
ßß& 7
.
ßß7 8
FullName
ßß8 @
)
ßß@ A
)
ßßA B
{
®® 
return
©© 

true
©© 
;
©© 
}
™™ 
return
¨¨ 	
false
¨¨
 
;
¨¨ 
}
≠≠ 
public
ØØ 
static
ØØ	 
bool
ØØ "
IsDecendentDirectory
ØØ )
(
ØØ) *
string
ØØ* 0!
virtualPathToSearch
ØØ1 D
,
ØØD E
string
ØØF L
virtualPathToFind
ØØM ^
)
ØØ^ _
{
∞∞ 
if
±± 
(
±± 
string
±± 
.
±± 
IsNullOrEmpty
±± 
(
±± !
virtualPathToSearch
±± /
)
±±/ 0
)
±±0 1
{
≤≤ 
return
≥≥ 

false
≥≥ 
;
≥≥ 
}
¥¥ 
if
∂∂ 
(
∂∂ 
string
∂∂ 
.
∂∂ 
IsNullOrEmpty
∂∂ 
(
∂∂ 
virtualPathToFind
∂∂ -
)
∂∂- .
)
∂∂. /
{
∑∑ 
return
∏∏ 

false
∏∏ 
;
∏∏ 
}
ππ 
DirectoryInfo
ªª 
rootDirectoryInfo
ªª "
=
ªª# $
new
ªª% (
DirectoryInfo
ªª) 6
(
ªª6 7 
HostingEnvironment
ªª7 I
.
ªªI J
MapPath
ªªJ Q
(
ªªQ R!
virtualPathToSearch
ªªR e
)
ªªe f
)
ªªf g
;
ªªg h
DirectoryInfo
ºº $
requestedDirectoryInfo
ºº '
=
ºº( )
new
ºº* -
DirectoryInfo
ºº. ;
(
ºº; < 
HostingEnvironment
ºº< N
.
ººN O
MapPath
ººO V
(
ººV W
virtualPathToFind
ººW h
)
ººh i
)
ººi j
;
ººj k
return
ææ 	"
IsDecendentDirectory
ææ
 
(
ææ 
rootDirectoryInfo
ææ 0
,
ææ0 1$
requestedDirectoryInfo
ææ2 H
)
ææH I
;
ææI J
}
øø 
public
¡¡ 
static
¡¡	 
bool
¡¡ 
IsDecendentFile
¡¡ $
(
¡¡$ %
string
¡¡% +!
virtualPathToSearch
¡¡, ?
,
¡¡? @
string
¡¡A G
virtualPathToFind
¡¡H Y
)
¡¡Y Z
{
¬¬ 
if
√√ 
(
√√ 
string
√√ 
.
√√ 
IsNullOrEmpty
√√ 
(
√√ !
virtualPathToSearch
√√ /
)
√√/ 0
)
√√0 1
{
ƒƒ 
return
≈≈ 

false
≈≈ 
;
≈≈ 
}
∆∆ 
if
»» 
(
»» 
string
»» 
.
»» 
IsNullOrEmpty
»» 
(
»» 
virtualPathToFind
»» -
)
»»- .
)
»». /
{
…… 
return
   

false
   
;
   
}
ÀÀ 
DirectoryInfo
ÕÕ 
rootDirectoryInfo
ÕÕ "
=
ÕÕ# $
new
ÕÕ% (
DirectoryInfo
ÕÕ) 6
(
ÕÕ6 7 
HostingEnvironment
ÕÕ7 I
.
ÕÕI J
MapPath
ÕÕJ Q
(
ÕÕQ R!
virtualPathToSearch
ÕÕR e
)
ÕÕe f
)
ÕÕf g
;
ÕÕg h
FileInfo
ŒŒ $
requestedDirectoryInfo
ŒŒ "
=
ŒŒ# $
new
ŒŒ% (
FileInfo
ŒŒ) 1
(
ŒŒ1 2 
HostingEnvironment
ŒŒ2 D
.
ŒŒD E
MapPath
ŒŒE L
(
ŒŒL M
virtualPathToFind
ŒŒM ^
)
ŒŒ^ _
)
ŒŒ_ `
;
ŒŒ` a
return
–– 	"
IsDecendentDirectory
––
 
(
–– 
rootDirectoryInfo
–– 0
,
––0 1$
requestedDirectoryInfo
––2 H
)
––H I
;
––I J
}
—— 
public
”” 
static
””	 
string
”” 

ToMimeType
”” !
(
””! "
this
””" &
string
””' -
s
””. /
)
””/ 0
{
‘‘ 
try
’’ 
{
÷÷ 
string
◊◊ 

ext
◊◊ 
;
◊◊ 
if
ÿÿ 
(
ÿÿ 
s
ÿÿ 	
.
ÿÿ	 

Contains
ÿÿ
 
(
ÿÿ 
$str
ÿÿ 
)
ÿÿ 
)
ÿÿ 
{
ŸŸ 
ext
⁄⁄ 
=
⁄⁄	 

Path
⁄⁄ 
.
⁄⁄ 
GetExtension
⁄⁄ 
(
⁄⁄ 
System
⁄⁄ #
.
⁄⁄# $
Web
⁄⁄$ '
.
⁄⁄' (
Hosting
⁄⁄( /
.
⁄⁄/ 0 
HostingEnvironment
⁄⁄0 B
.
⁄⁄B C
MapPath
⁄⁄C J
(
⁄⁄J K
s
⁄⁄K L
)
⁄⁄L M
)
⁄⁄M N
;
⁄⁄N O
}
€€ 
else
‹‹ 
{
›› 
ext
ﬁﬁ 
=
ﬁﬁ	 

Path
ﬁﬁ 
.
ﬁﬁ 
GetExtension
ﬁﬁ 
(
ﬁﬁ 
s
ﬁﬁ 
)
ﬁﬁ 
;
ﬁﬁ  
}
ﬂﬂ 
return
‡‡ 

GetMimeType
‡‡ 
(
‡‡ 
ext
‡‡ 
)
‡‡ 
;
‡‡ 
}
·· 
catch
‚‚ 
(
‚‚	 

ArgumentException
‚‚
 
)
‚‚ 
{
„„ 
return
‰‰ 

s
‰‰ 
;
‰‰ 
}
ÂÂ 
}
ÊÊ 
public
ËË 
static
ËË	 
string
ËË 
GetMimeType
ËË "
(
ËË" #
string
ËË# )
fileExtension
ËË* 7
)
ËË7 8
{
ÈÈ 
if
ÍÍ 
(
ÍÍ 
string
ÍÍ 
.
ÍÍ 
IsNullOrEmpty
ÍÍ 
(
ÍÍ 
fileExtension
ÍÍ )
)
ÍÍ) *
)
ÍÍ* +
{
ÎÎ 
return
ÏÏ 

string
ÏÏ 
.
ÏÏ 
Empty
ÏÏ 
;
ÏÏ 
}
ÌÌ 
string
ÔÔ 	
fileType
ÔÔ
 
=
ÔÔ 
fileExtension
ÔÔ "
.
ÔÔ" #
ToLower
ÔÔ# *
(
ÔÔ* +
)
ÔÔ+ ,
.
ÔÔ, -
Replace
ÔÔ- 4
(
ÔÔ4 5
$str
ÔÔ5 8
,
ÔÔ8 9
string
ÔÔ: @
.
ÔÔ@ A
Empty
ÔÔA F
)
ÔÔF G
;
ÔÔG H
switch
ÒÒ 	
(
ÒÒ
 
fileType
ÒÒ 
)
ÒÒ 
{
ÚÚ 
case
ÛÛ 
$str
ÛÛ	 
:
ÛÛ 
case
ÙÙ 
$str
ÙÙ	 
:
ÙÙ 
return
ıı 
$str
ıı  
;
ıı  !
case
˜˜ 
$str
˜˜	 
:
˜˜ 
case
¯¯ 
$str
¯¯	 
:
¯¯ 
return
˘˘ 
$str
˘˘ &
;
˘˘& '
case
˚˚ 
$str
˚˚	 
:
˚˚ 
return
¸¸ 
$str
¸¸ &
;
¸¸& '
case
˛˛ 
$str
˛˛	 
:
˛˛ 
case
ˇˇ 
$str
ˇˇ	 
:
ˇˇ 
return
ÄÄ 
$str
ÄÄ +
;
ÄÄ+ ,
case
ÇÇ 
$str
ÇÇ	 
:
ÇÇ 
case
ÉÉ 
$str
ÉÉ	 
:
ÉÉ 
return
ÑÑ 
$str
ÑÑ 
;
ÑÑ 
case
ÜÜ 
$str
ÜÜ	 
:
ÜÜ 
return
áá 
$str
áá 
;
áá 
case
ââ 
$str
ââ	 
:
ââ 
return
ää 
$str
ää 
;
ää 
case
åå 
$str
åå	 
:
åå 
return
çç 
$str
çç 
;
çç 
case
èè 
$str
èè	 
:
èè 
return
êê 
$str
êê 
;
êê 
case
íí 
$str
íí	 
:
íí 
return
ìì 
$str
ìì 
;
ìì 
case
ïï 
$str
ïï	 
:
ïï 
case
ññ 
$str
ññ	 
:
ññ 
return
óó 
$str
óó 
;
óó 
case
ôô 
$str
ôô	 
:
ôô 
return
öö 
$str
öö 
;
öö 
case
úú 
$str
úú	 
:
úú 
return
ùù 
$str
ùù 
;
ùù 
case
üü 
$str
üü	 
:
üü 
return
†† 
$str
†† 
;
†† 
case
¢¢ 
$str
¢¢	 
:
¢¢ 
return
££ 
$str
££ 
;
££ 
case
•• 
$str
••	 
:
•• 
case
¶¶ 
$str
¶¶	 
:
¶¶ 
return
ßß 
$str
ßß 
;
ßß 
case
®® 
$str
®®	 
:
®® 
case
©© 
$str
©©	 
:
©© 
return
™™ 
$str
™™ 
;
™™ 
case
¨¨ 
$str
¨¨	 
:
¨¨ 
return
≠≠ 
$str
≠≠ 
;
≠≠ 
case
ØØ 
$str
ØØ	 
:
ØØ 
return
∞∞ 
$str
∞∞ 
;
∞∞ 
case
≤≤ 
$str
≤≤	 
:
≤≤ 
return
≥≥ 
$str
≥≥ 
;
≥≥ 
case
µµ 
$str
µµ	 
:
µµ 
return
∂∂ 
$str
∂∂ 
;
∂∂ 
case
∏∏ 
$str
∏∏	 
:
∏∏ 
case
ππ 
$str
ππ	 
:
ππ 
return
∫∫ 
$str
∫∫ 
;
∫∫ 
case
ºº 
$str
ºº	 
:
ºº 
return
ΩΩ 
$str
ΩΩ 
;
ΩΩ 
case
øø 
$str
øø	 
:
øø 
return
¿¿ 
$str
¿¿ $
;
¿¿$ %
}
¡¡ 
return
√√ 	
$str
√√
 
+
√√ 
fileType
√√ #
;
√√# $
}
ƒƒ 
public
∆∆ 
static
∆∆	 
bool
∆∆ $
IsNonAttacmentFileType
∆∆ +
(
∆∆+ ,
string
∆∆, 2
fileExtension
∆∆3 @
)
∆∆@ A
{
«« 
if
»» 
(
»» 
string
»» 
.
»» 
IsNullOrEmpty
»» 
(
»» 
fileExtension
»» )
)
»») *
)
»»* +
{
…… 
return
   

false
   
;
   
}
ÀÀ 
string
ÕÕ 	
fileType
ÕÕ
 
=
ÕÕ 
fileExtension
ÕÕ "
.
ÕÕ" #
ToLower
ÕÕ# *
(
ÕÕ* +
)
ÕÕ+ ,
.
ÕÕ, -
Replace
ÕÕ- 4
(
ÕÕ4 5
$str
ÕÕ5 8
,
ÕÕ8 9
string
ÕÕ: @
.
ÕÕ@ A
Empty
ÕÕA F
)
ÕÕF G
;
ÕÕG H
if
œœ 
(
œœ 
fileType
œœ 
==
œœ 
$str
œœ 
)
œœ 
{
–– 
return
—— 

true
—— 
;
—— 
}
““ 
return
‘‘ 	
false
‘‘
 
;
‘‘ 
}
’’ 
public
◊◊ 
static
◊◊	 
void
◊◊  
CopyFolderContents
◊◊ '
(
◊◊' (
string
◊◊( .
sourceFolder
◊◊/ ;
,
◊◊; <
string
◊◊= C

destFolder
◊◊D N
)
◊◊N O
{
ÿÿ 
if
ŸŸ 
(
ŸŸ 
!
ŸŸ 
	Directory
ŸŸ 
.
ŸŸ 
Exists
ŸŸ 
(
ŸŸ 

destFolder
ŸŸ #
)
ŸŸ# $
)
ŸŸ$ %
{
⁄⁄ 
	Directory
€€ 
.
€€ 
CreateDirectory
€€ 
(
€€ 

destFolder
€€ (
)
€€( )
;
€€) *
}
‹‹ 
string
ﬁﬁ 	
[
ﬁﬁ	 

]
ﬁﬁ
 
files
ﬁﬁ 
=
ﬁﬁ 
	Directory
ﬁﬁ 
.
ﬁﬁ 
GetFiles
ﬁﬁ &
(
ﬁﬁ& '
sourceFolder
ﬁﬁ' 3
)
ﬁﬁ3 4
;
ﬁﬁ4 5
foreach
‡‡ 

(
‡‡ 
string
‡‡ 
file
‡‡ 
in
‡‡ 
files
‡‡  
)
‡‡  !
{
·· 
string
‚‚ 

name
‚‚ 
=
‚‚ 
Path
‚‚ 
.
‚‚ 
GetFileName
‚‚ "
(
‚‚" #
file
‚‚# '
)
‚‚' (
;
‚‚( )
string
„„ 

dest
„„ 
=
„„ 
Path
„„ 
.
„„ 
Combine
„„ 
(
„„ 

destFolder
„„ )
,
„„) *
name
„„+ /
)
„„/ 0
;
„„0 1
File
‰‰ 
.
‰‰ 	
Copy
‰‰	 
(
‰‰ 
file
‰‰ 
,
‰‰ 
dest
‰‰ 
)
‰‰ 
;
‰‰ 
}
ÂÂ 
string
ÁÁ 	
[
ÁÁ	 

]
ÁÁ
 
folders
ÁÁ 
=
ÁÁ 
	Directory
ÁÁ 
.
ÁÁ  
GetDirectories
ÁÁ  .
(
ÁÁ. /
sourceFolder
ÁÁ/ ;
)
ÁÁ; <
;
ÁÁ< =
foreach
ÈÈ 

(
ÈÈ 
string
ÈÈ 
folder
ÈÈ 
in
ÈÈ 
folders
ÈÈ $
)
ÈÈ$ %
{
ÍÍ 
string
ÎÎ 

name
ÎÎ 
=
ÎÎ 
Path
ÎÎ 
.
ÎÎ 
GetFileName
ÎÎ "
(
ÎÎ" #
folder
ÎÎ# )
)
ÎÎ) *
;
ÎÎ* +
string
ÏÏ 

dest
ÏÏ 
=
ÏÏ 
Path
ÏÏ 
.
ÏÏ 
Combine
ÏÏ 
(
ÏÏ 

destFolder
ÏÏ )
,
ÏÏ) *
name
ÏÏ+ /
)
ÏÏ/ 0
;
ÏÏ0 1 
CopyFolderContents
ÌÌ 
(
ÌÌ 
folder
ÌÌ 
,
ÌÌ 
dest
ÌÌ #
)
ÌÌ# $
;
ÌÌ$ %
}
ÓÓ 
}
ÔÔ 
public
ÒÒ 
static
ÒÒ	 
void
ÒÒ 
Empty
ÒÒ 
(
ÒÒ 
this
ÒÒ 
DirectoryInfo
ÒÒ  -
	directory
ÒÒ. 7
)
ÒÒ7 8
{
ÚÚ 
foreach
ÛÛ 

(
ÛÛ 
FileInfo
ÛÛ 
file
ÛÛ 
in
ÛÛ 
	directory
ÛÛ &
.
ÛÛ& '
GetFiles
ÛÛ' /
(
ÛÛ/ 0
)
ÛÛ0 1
)
ÛÛ1 2
{
ÙÙ 
file
ıı 
.
ıı 	
Delete
ıı	 
(
ıı 
)
ıı 
;
ıı 
}
ˆˆ 
foreach
¯¯ 

(
¯¯ 
DirectoryInfo
¯¯ 
subDirectory
¯¯ &
in
¯¯' )
	directory
¯¯* 3
.
¯¯3 4
GetDirectories
¯¯4 B
(
¯¯B C
)
¯¯C D
)
¯¯D E
{
˘˘ 
subDirectory
˙˙ 
.
˙˙ 
Delete
˙˙ 
(
˙˙ 
true
˙˙ 
)
˙˙ 
;
˙˙ 
}
˚˚ 
}
¸¸ 
}
˝˝ 
}˛˛ ë.
ÉD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\NeatHtml\AttributeValueValidator.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{   
internal!! 
class!! #
AttributeValueValidator!! *
{"" 
internal## #
AttributeValueValidator## (
(##( )
)##) *
{##+ ,
}##- .
internal%% 
void%% 
Add%% 
(%% 
XmlDocument%% %
	schemaDoc%%& /
,%%/ 0
	XmlSchema%%1 :
schema%%; A
,%%A B
string%%C I
typeName%%J R
,%%R S
string%%T Z
namespaceUri%%[ g
)%%g h
{&& 	
XmlSchemaSimpleType'' 

simpleType''  *
=''+ ,
schema''- 3
.''3 4
SchemaTypes''4 ?
[''? @
new''@ C
XmlQualifiedName''D T
(''T U
typeName''U ]
,''] ^
namespaceUri''_ k
)''k l
]''l m
as''n p 
XmlSchemaSimpleType	''q Ñ
;
''Ñ Ö*
XmlSchemaSimpleTypeRestriction(( *
typeRestriction((+ :
=((; <

simpleType((= G
.((G H
Content((H O
as((P R*
XmlSchemaSimpleTypeRestriction((S q
;((q r!
XmlSchemaPatternFacet)) !
pattern))" )
=))* +
typeRestriction)), ;
.)); <
Facets))< B
[))B C
$num))C D
]))D E
as))F H!
XmlSchemaPatternFacet))I ^
;))^ _
Regex** 
re** 
=** 
new** 
Regex**  
(**  !
pattern**! (
.**( )
Value**) .
)**. /
;**/ 0
XmlNodeList,, 
attributeNameNodes,, *
=,,+ ,
	schemaDoc,,- 6
.,,6 7
SelectNodes,,7 B
(,,B C
$str,,C P
+,,Q R
typeName,,S [
+,,\ ]
$str,,^ h
),,h i
;,,i j
for-- 
(-- 
int-- 
i-- 
=-- 
$num-- 
;-- 
i-- 
<-- 
attributeNameNodes--  2
.--2 3
Count--3 8
;--8 9
i--: ;
++--; =
)--= >
{.. 
string// 
attrName// 
=//  !
attributeNameNodes//" 4
.//4 5
Item//5 9
(//9 :
i//: ;
)//; <
.//< =
Value//= B
;//B C
if00 
(00 
RegexForAttrName00 $
[00$ %
attrName00% -
]00- .
!=00/ 1
null002 6
)006 7
{11 
continue22 
;22 
}33 
else44 
{55 
RegexForAttrName66 $
[66$ %
attrName66% -
]66- .
=66/ 0
re661 3
;663 4
if77 
(77 &
XPathPredicateOfAttributes77 2
==773 5
null776 :
)77: ;
{88 &
XPathPredicateOfAttributes99 2
=993 4
$str995 7
;997 8
}:: 
else;; 
{<< &
XPathPredicateOfAttributes== 2
+===3 5
$str==6 <
;==< =
}>> &
XPathPredicateOfAttributes?? .
+=??/ 1
$str??2 D
+??E F
attrName??G O
+??P Q
$str??R U
;??U V
}@@ 
}AA 
}BB 	
internalEE 
voidEE 
ValidateEE 
(EE 
XmlDocumentEE *
docEE+ .
)EE. /
{FF 	
stringGG 
xpathOfAttributesGG $
=GG% &
$strGG' *
+GG+ ,
$strGG- 3
+GG4 5&
XPathPredicateOfAttributesGG6 P
+GGQ R
$strGGS V
;GGV W
DebugII 
.II 
	WriteLineII 
(II 
$strII &
+II' (
xpathOfAttributesII) :
)II: ;
;II; <
XmlNodeListJJ 
attrsJJ 
=JJ 
docJJ  #
.JJ# $
SelectNodesJJ$ /
(JJ/ 0
xpathOfAttributesJJ0 A
)JJA B
;JJB C
foreachKK 
(KK 
XmlAttributeKK !
attrKK" &
inKK' )
attrsKK* /
)KK/ 0
{LL 
RegexMM 
reMM 
=MM 
(MM 
RegexMM !
)MM! "
RegexForAttrNameMM" 2
[MM2 3
attrMM3 7
.MM7 8
	LocalNameMM8 A
]MMA B
;MMB C
DebugNN 
.NN 
	WriteLineNN 
(NN  
$strNN  +
+NN, -
attrNN. 2
.NN2 3
ValueNN3 8
+NN9 :
$strNN; F
+NNG H
reNNI K
.NNK L
ToStringNNL T
(NNT U
)NNU V
)NNV W
;NNW X
ifOO 
(OO 
!OO 
reOO 
.OO 
IsMatchOO 
(OO  
attrOO  $
.OO$ %
ValueOO% *
)OO* +
)OO+ ,
{PP 
throwRR 
newRR 
XmlSchemaExceptionRR 0
(RR0 1
$strRR1 E
+RRF G
attrRRH L
.RRL M
	LocalNameRRM V
+RRW X
$strRRY g
+RRh i
attrRRj n
.RRn o
ValueRRo t
,RRt u
nullRRv z
)RRz {
;RR{ |
}SS 
}TT 
}UU 	
privateWW 
	HashtableWW 
RegexForAttrNameWW *
=WW+ ,
newWW- 0
	HashtableWW1 :
(WW: ;
)WW; <
;WW< =
privateXX 
stringXX &
XPathPredicateOfAttributesXX 1
=XX2 3
nullXX4 8
;XX8 9
}YY 
}ZZ Æ“
ÄD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\NeatHtml\XPathNavigatorReader.cs
	namespace'' 	

mojoPortal''
 
.'' 
Web'' 
.'' 
	Framework'' "
{(( 
internal** 
class**  
XPathNavigatorReader** '
:**( )
XmlTextReader*** 7
,**7 8
IXPathNavigable**9 H
{++ 
public,,  
XPathNavigatorReader,, #
(,,# $
XPathNavigator,,$ 2
nav,,3 6
),,6 7
:,,8 9
base,,: >
(,,> ?
new,,? B
StringReader,,C O
(,,O P
$str,,P R
),,R S
),,S T
{-- 	
switch.. 
(.. 
nav.. 
... 
NodeType..  
)..  !
{// 
case00 
XPathNodeType00 "
.00" #
Element00# *
:00* +
case11 
XPathNodeType11 "
.11" #
Root11# '
:11' (
break22 
;22 
default33 
:33 
throw44 
new44 %
InvalidOperationException44 7
(447 8
String448 >
.44> ?
Format44? E
(44E F
$str	44F ê
,
44ê ë
nav
44í ï
.
44ï ñ
NodeType
44ñ û
)
44û ü
)
44ü †
;
44† °
}55 
current66 
=66 
nav66 
.66 
Clone66 
(66  
)66  !
;66! "
}77 	
public99 
XPathNavigator99 
CreateNavigator99 -
(99- .
)99. /
{:: 	
return;; 
current;; 
.;; 
Clone;;  
(;;  !
);;! "
;;;" #
}<< 	
XPathNavigator>> 
root>> 
;>> 
XPathNavigator?? 
current?? 
;?? 
bool@@ 
started@@ 
;@@ 
boolAA 
closedAA 
;AA 
boolBB 

endElementBB 
;BB 
boolCC "
attributeValueConsumedCC #
;CC# $
StringBuilderDD 
readStringBufferDD &
=DD' (
newDD) ,
StringBuilderDD- :
(DD: ;
)DD; <
;DD< =
StringBuilderEE 
innerXmlBuilderEE %
=EE& '
newEE( +
StringBuilderEE, 9
(EE9 :
)EE: ;
;EE; <
intGG 
depthGG 
=GG 
$numGG 
;GG 
intHH 
attributeCountHH 
=HH 
$numHH 
;HH 
boolII 
eofII 
;II 
privateJJ 
constJJ 
stringJJ 

XmlnsXmlnsJJ '
=JJ( )
$strJJ* I
;JJI J
publicXX 
overrideXX 
XmlNodeTypeXX #
NodeTypeXX$ ,
{YY 	
getZZ 
{[[ 
if\\ 
(\\ 
	ReadState\\ 
!=\\  
	ReadState\\! *
.\\* +
Interactive\\+ 6
)\\6 7
return]] 
XmlNodeType]] &
.]]& '
None]]' +
;]]+ ,
if^^ 
(^^ 

endElement^^ 
)^^ 
return__ 
XmlNodeType__ &
.__& '

EndElement__' 1
;__1 2
if`` 
(`` "
attributeValueConsumed`` *
)``* +
returnbb 
XmlNodeTypebb &
.bb& '
Textbb' +
;bb+ ,
switchdd 
(dd 
currentdd 
.dd  
NodeTypedd  (
)dd( )
{ee 
caseff 
XPathNodeTypeff &
.ff& '
	Namespaceff' 0
:ff0 1
casegg 
XPathNodeTypegg &
.gg& '
	Attributegg' 0
:gg0 1
returnhh 
XmlNodeTypehh *
.hh* +
	Attributehh+ 4
;hh4 5
caseii 
XPathNodeTypeii &
.ii& '
Commentii' .
:ii. /
returnjj 
XmlNodeTypejj *
.jj* +
Commentjj+ 2
;jj2 3
casekk 
XPathNodeTypekk &
.kk& '
Elementkk' .
:kk. /
returnll 
XmlNodeTypell *
.ll* +
Elementll+ 2
;ll2 3
casemm 
XPathNodeTypemm &
.mm& '!
ProcessingInstructionmm' <
:mm< =
returnnn 
XmlNodeTypenn *
.nn* +!
ProcessingInstructionnn+ @
;nn@ A
caseoo 
XPathNodeTypeoo &
.oo& '
Rootoo' +
:oo+ ,
returnqq 
XmlNodeTypeqq *
.qq* +
Noneqq+ /
;qq/ 0
caserr 
XPathNodeTyperr &
.rr& '!
SignificantWhitespacerr' <
:rr< =
returnss 
XmlNodeTypess *
.ss* +!
SignificantWhitespacess+ @
;ss@ A
casett 
XPathNodeTypett &
.tt& '
Texttt' +
:tt+ ,
returnuu 
XmlNodeTypeuu *
.uu* +
Textuu+ /
;uu/ 0
casevv 
XPathNodeTypevv &
.vv& '

Whitespacevv' 1
:vv1 2
returnww 
XmlNodeTypeww *
.ww* +

Whitespaceww+ 5
;ww5 6
defaultxx 
:xx 
throwyy 
newyy !%
InvalidOperationExceptionyy" ;
(yy; <
Stringyy< B
.yyB C
FormatyyC I
(yyI J
$str	yyJ ñ
,
yyñ ó
current
yyò ü
.
yyü †
NodeType
yy† ®
)
yy® ©
)
yy© ™
;
yy™ ´
}zz 
}{{ 
}|| 	
public~~ 
override~~ 
string~~ 
Name~~ #
{ 	
get
ÄÄ 
{
ÅÅ 
if
ÇÇ 
(
ÇÇ 
	ReadState
ÇÇ 
!=
ÇÇ  
	ReadState
ÇÇ! *
.
ÇÇ* +
Interactive
ÇÇ+ 6
)
ÇÇ6 7
return
ÉÉ 
String
ÉÉ !
.
ÉÉ! "
Empty
ÉÉ" '
;
ÉÉ' (
if
ÑÑ 
(
ÑÑ $
attributeValueConsumed
ÑÑ *
)
ÑÑ* +
return
ÖÖ 
String
ÖÖ !
.
ÖÖ! "
Empty
ÖÖ" '
;
ÖÖ' (
else
ÜÜ 
if
ÜÜ 
(
ÜÜ 
current
ÜÜ  
.
ÜÜ  !
NodeType
ÜÜ! )
==
ÜÜ* ,
XPathNodeType
ÜÜ- :
.
ÜÜ: ;
	Namespace
ÜÜ; D
)
ÜÜD E
return
áá 
current
áá "
.
áá" #
Name
áá# '
==
áá( *
String
áá+ 1
.
áá1 2
Empty
áá2 7
?
áá8 9
$str
áá: A
:
ááB C
$str
ááD L
+
ááM N
current
ááO V
.
ááV W
Name
ááW [
;
áá[ \
else
àà 
return
ââ 
current
ââ "
.
ââ" #
Name
ââ# '
;
ââ' (
}
ää 
}
ãã 	
public
çç 
override
çç 
string
çç 
	LocalName
çç (
{
éé 	
get
èè 
{
êê 
if
ëë 
(
ëë 
	ReadState
ëë 
!=
ëë  
	ReadState
ëë! *
.
ëë* +
Interactive
ëë+ 6
)
ëë6 7
return
íí 
String
íí !
.
íí! "
Empty
íí" '
;
íí' (
if
ìì 
(
ìì $
attributeValueConsumed
ìì *
)
ìì* +
return
îî 
String
îî !
.
îî! "
Empty
îî" '
;
îî' (
else
ïï 
if
ïï 
(
ïï 
current
ïï  
.
ïï  !
NodeType
ïï! )
==
ïï* ,
XPathNodeType
ïï- :
.
ïï: ;
	Namespace
ïï; D
&&
ïïE G
current
ïïH O
.
ïïO P
	LocalName
ïïP Y
==
ïïZ \
String
ïï] c
.
ïïc d
Empty
ïïd i
)
ïïi j
return
ññ 
$str
ññ "
;
ññ" #
else
óó 
return
òò 
current
òò "
.
òò" #
	LocalName
òò# ,
;
òò, -
}
ôô 
}
öö 	
public
úú 
override
úú 
string
úú 
NamespaceURI
úú +
{
ùù 	
get
ûû 
{
üü 
if
†† 
(
†† 
	ReadState
†† 
!=
††  
	ReadState
††! *
.
††* +
Interactive
††+ 6
)
††6 7
return
°° 
String
°° !
.
°°! "
Empty
°°" '
;
°°' (
if
¢¢ 
(
¢¢ $
attributeValueConsumed
¢¢ *
)
¢¢* +
return
££ 
String
££ !
.
££! "
Empty
££" '
;
££' (
else
§§ 
if
§§ 
(
§§ 
current
§§  
.
§§  !
NodeType
§§! )
==
§§* ,
XPathNodeType
§§- :
.
§§: ;
	Namespace
§§; D
)
§§D E
return
•• 
$str
•• :
;
••: ;
else
¶¶ 
return
ßß 
current
ßß "
.
ßß" #
NamespaceURI
ßß# /
;
ßß/ 0
}
®® 
}
©© 	
public
´´ 
override
´´ 
string
´´ 
Prefix
´´ %
{
¨¨ 	
get
≠≠ 
{
ÆÆ 
if
ØØ 
(
ØØ 
	ReadState
ØØ 
!=
ØØ  
	ReadState
ØØ! *
.
ØØ* +
Interactive
ØØ+ 6
)
ØØ6 7
return
∞∞ 
String
∞∞ !
.
∞∞! "
Empty
∞∞" '
;
∞∞' (
if
±± 
(
±± $
attributeValueConsumed
±± *
)
±±* +
return
≤≤ 
String
≤≤ !
.
≤≤! "
Empty
≤≤" '
;
≤≤' (
else
≥≥ 
if
≥≥ 
(
≥≥ 
current
≥≥  
.
≥≥  !
NodeType
≥≥! )
==
≥≥* ,
XPathNodeType
≥≥- :
.
≥≥: ;
	Namespace
≥≥; D
&&
≥≥E G
current
≥≥H O
.
≥≥O P
	LocalName
≥≥P Y
!=
≥≥Z \
String
≥≥] c
.
≥≥c d
Empty
≥≥d i
)
≥≥i j
return
¥¥ 
$str
¥¥ "
;
¥¥" #
else
µµ 
return
∂∂ 
current
∂∂ "
.
∂∂" #
Prefix
∂∂# )
;
∂∂) *
}
∑∑ 
}
∏∏ 	
public
∫∫ 
override
∫∫ 
bool
∫∫ 
HasValue
∫∫ %
{
ªª 	
get
ºº 
{
ΩΩ 
switch
ææ 
(
ææ 
current
ææ 
.
ææ  
NodeType
ææ  (
)
ææ( )
{
øø 
case
¿¿ 
XPathNodeType
¿¿ &
.
¿¿& '
	Namespace
¿¿' 0
:
¿¿0 1
case
¡¡ 
XPathNodeType
¡¡ &
.
¡¡& '
	Attribute
¡¡' 0
:
¡¡0 1
case
¬¬ 
XPathNodeType
¬¬ &
.
¬¬& '
Comment
¬¬' .
:
¬¬. /
case
√√ 
XPathNodeType
√√ &
.
√√& '#
ProcessingInstruction
√√' <
:
√√< =
case
ƒƒ 
XPathNodeType
ƒƒ &
.
ƒƒ& '#
SignificantWhitespace
ƒƒ' <
:
ƒƒ< =
case
≈≈ 
XPathNodeType
≈≈ &
.
≈≈& '
Text
≈≈' +
:
≈≈+ ,
case
∆∆ 
XPathNodeType
∆∆ &
.
∆∆& '

Whitespace
∆∆' 1
:
∆∆1 2
return
«« 
true
«« #
;
««# $
}
»» 
return
…… 
false
…… 
;
…… 
}
   
}
ÀÀ 	
public
ÕÕ 
override
ÕÕ 
int
ÕÕ 
Depth
ÕÕ !
{
ŒŒ 	
get
œœ 
{
–– 
if
—— 
(
—— 
	ReadState
—— 
!=
——  
	ReadState
——! *
.
——* +
Interactive
——+ 6
)
——6 7
return
““ 
$num
““ 
;
““ 
if
‘‘ 
(
‘‘ 
NodeType
‘‘ 
==
‘‘ 
XmlNodeType
‘‘  +
.
‘‘+ ,
	Attribute
‘‘, 5
)
‘‘5 6
return
’’ 
depth
’’  
+
’’! "
$num
’’# $
;
’’$ %
if
÷÷ 
(
÷÷ $
attributeValueConsumed
÷÷ *
)
÷÷* +
return
◊◊ 
depth
◊◊  
+
◊◊! "
$num
◊◊# $
;
◊◊$ %
return
ÿÿ 
depth
ÿÿ 
;
ÿÿ 
}
ŸŸ 
}
⁄⁄ 	
public
‹‹ 
override
‹‹ 
string
‹‹ 
Value
‹‹ $
{
›› 	
get
ﬁﬁ 
{
ﬂﬂ 
if
‡‡ 
(
‡‡ 
	ReadState
‡‡ 
!=
‡‡  
	ReadState
‡‡! *
.
‡‡* +
Interactive
‡‡+ 6
)
‡‡6 7
return
·· 
String
·· !
.
··! "
Empty
··" '
;
··' (
switch
‚‚ 
(
‚‚ 
current
‚‚ 
.
‚‚  
NodeType
‚‚  (
)
‚‚( )
{
„„ 
case
‰‰ 
XPathNodeType
‰‰ &
.
‰‰& '
	Namespace
‰‰' 0
:
‰‰0 1
case
ÂÂ 
XPathNodeType
ÂÂ &
.
ÂÂ& '
	Attribute
ÂÂ' 0
:
ÂÂ0 1
case
ÊÊ 
XPathNodeType
ÊÊ &
.
ÊÊ& '
Comment
ÊÊ' .
:
ÊÊ. /
case
ÁÁ 
XPathNodeType
ÁÁ &
.
ÁÁ& '#
ProcessingInstruction
ÁÁ' <
:
ÁÁ< =
case
ËË 
XPathNodeType
ËË &
.
ËË& '#
SignificantWhitespace
ËË' <
:
ËË< =
case
ÈÈ 
XPathNodeType
ÈÈ &
.
ÈÈ& '
Text
ÈÈ' +
:
ÈÈ+ ,
case
ÍÍ 
XPathNodeType
ÍÍ &
.
ÍÍ& '

Whitespace
ÍÍ' 1
:
ÍÍ1 2
return
ÎÎ 
current
ÎÎ &
.
ÎÎ& '
Value
ÎÎ' ,
;
ÎÎ, -
case
ÏÏ 
XPathNodeType
ÏÏ &
.
ÏÏ& '
Element
ÏÏ' .
:
ÏÏ. /
case
ÌÌ 
XPathNodeType
ÌÌ &
.
ÌÌ& '
Root
ÌÌ' +
:
ÌÌ+ ,
return
ÓÓ 
String
ÓÓ %
.
ÓÓ% &
Empty
ÓÓ& +
;
ÓÓ+ ,
default
ÔÔ 
:
ÔÔ 
throw
 
new
 !'
InvalidOperationException
" ;
(
; <
$str< à
)à â
;â ä
}
ÒÒ 
}
ÚÚ 
}
ÛÛ 	
public
ıı 
override
ıı 
string
ıı 
BaseURI
ıı &
{
ˆˆ 	
get
˜˜ 
{
˜˜ 
return
˜˜ 
current
˜˜  
.
˜˜  !
BaseURI
˜˜! (
;
˜˜( )
}
˜˜* +
}
¯¯ 	
public
˙˙ 
override
˙˙ 
bool
˙˙ 
IsEmptyElement
˙˙ +
{
˚˚ 	
get
¸¸ 
{
˝˝ 
if
˛˛ 
(
˛˛ 
	ReadState
˛˛ 
!=
˛˛  
	ReadState
˛˛! *
.
˛˛* +
Interactive
˛˛+ 6
)
˛˛6 7
return
ˇˇ 
false
ˇˇ  
;
ˇˇ  !
return
ÄÄ 
current
ÄÄ 
.
ÄÄ 
IsEmptyElement
ÄÄ -
;
ÄÄ- .
}
ÅÅ 
}
ÇÇ 	
public
ÑÑ 
override
ÑÑ 
bool
ÑÑ 
	IsDefault
ÑÑ &
{
ÖÖ 	
get
ÜÜ 
{
áá 
return
åå 
false
åå 
;
åå 
}
éé 
}
èè 	
public
íí 
override
íí 
char
íí 
	QuoteChar
íí &
{
ìì 	
get
îî 
{
îî 
return
îî 
$char
îî 
;
îî 
}
îî  
}
ïï 	
public
ùù 
override
ùù 
string
ùù 
XmlLang
ùù &
{
ûû 	
get
üü 
{
üü 
return
üü 
current
üü  
.
üü  !
XmlLang
üü! (
;
üü( )
}
üü* +
}
†† 	
public
££ 
override
££ 
XmlSpace
££  
XmlSpace
££! )
{
§§ 	
get
•• 
{
•• 
return
•• 
XmlSpace
•• !
.
••! "
None
••" &
;
••& '
}
••( )
}
¶¶ 	
public
®® 
override
®® 
int
®® 
AttributeCount
®® *
{
©© 	
get
™™ 
{
™™ 
return
™™ 
attributeCount
™™ '
;
™™' (
}
™™) *
}
´´ 	
private
≠≠ 
int
≠≠ 
GetAttributeCount
≠≠ %
(
≠≠% &
)
≠≠& '
{
ÆÆ 	
if
ØØ 
(
ØØ 
	ReadState
ØØ 
!=
ØØ 
	ReadState
ØØ &
.
ØØ& '
Interactive
ØØ' 2
)
ØØ2 3
return
∞∞ 
$num
∞∞ 
;
∞∞ 
int
±± 
count
±± 
=
±± 
$num
±± 
;
±± 
if
≤≤ 
(
≤≤ 
current
≤≤ 
.
≤≤ "
MoveToFirstAttribute
≤≤ ,
(
≤≤, -
)
≤≤- .
)
≤≤. /
{
≥≥ 
do
¥¥ 
{
µµ 
count
∂∂ 
++
∂∂ 
;
∂∂ 
}
∑∑ 
while
∑∑ 
(
∑∑ 
current
∑∑  
.
∑∑  !!
MoveToNextAttribute
∑∑! 4
(
∑∑4 5
)
∑∑5 6
)
∑∑6 7
;
∑∑7 8
current
∏∏ 
.
∏∏ 
MoveToParent
∏∏ $
(
∏∏$ %
)
∏∏% &
;
∏∏& '
}
ππ 
if
∫∫ 
(
∫∫ 
current
∫∫ 
.
∫∫ "
MoveToFirstNamespace
∫∫ ,
(
∫∫, -!
XPathNamespaceScope
∫∫- @
.
∫∫@ A
Local
∫∫A F
)
∫∫F G
)
∫∫G H
{
ªª 
do
ºº 
{
ΩΩ 
count
ææ 
++
ææ 
;
ææ 
}
øø 
while
øø 
(
øø 
current
øø  
.
øø  !!
MoveToNextNamespace
øø! 4
(
øø4 5!
XPathNamespaceScope
øø5 H
.
øøH I
Local
øøI N
)
øøN O
)
øøO P
;
øøP Q
current
¿¿ 
.
¿¿ 
MoveToParent
¿¿ $
(
¿¿$ %
)
¿¿% &
;
¿¿& '
}
¡¡ 
return
¬¬ 
count
¬¬ 
;
¬¬ 
}
√√ 	
private
≈≈ 
bool
≈≈ &
MoveToAttributeNavigator
≈≈ -
(
≈≈- .
int
≈≈. 1
i
≈≈2 3
)
≈≈3 4
{
∆∆ 	
if
«« 
(
«« 
	ReadState
«« 
!=
«« 
	ReadState
«« &
.
««& '
Interactive
««' 2
)
««2 3
return
»» 
false
»» 
;
»» 
switch
…… 
(
…… 
current
…… 
.
…… 
NodeType
…… $
)
……$ %
{
   
case
ÀÀ 
XPathNodeType
ÀÀ "
.
ÀÀ" #
	Namespace
ÀÀ# ,
:
ÀÀ, -
case
ÃÃ 
XPathNodeType
ÃÃ "
.
ÃÃ" #
	Attribute
ÃÃ# ,
:
ÃÃ, -
this
ÕÕ 
.
ÕÕ 
MoveToElement
ÕÕ &
(
ÕÕ& '
)
ÕÕ' (
;
ÕÕ( )
goto
ŒŒ 
case
ŒŒ 
XPathNodeType
ŒŒ +
.
ŒŒ+ ,
Element
ŒŒ, 3
;
ŒŒ3 4
case
œœ 
XPathNodeType
œœ "
.
œœ" #
Element
œœ# *
:
œœ* +
int
–– 
count
–– 
=
–– 
$num
––  !
;
––! "
if
—— 
(
—— "
MoveToFirstAttribute
—— ,
(
——, -
)
——- .
)
——. /
{
““ 
if
”” 
(
”” 
i
”” 
==
””  
$num
””! "
)
””" #
return
‘‘ "
true
‘‘# '
;
‘‘' (
}
’’ 
for
÷÷ 
(
÷÷ 
count
÷÷ 
++
÷÷  
;
÷÷  !
this
÷÷" &
.
÷÷& '!
MoveToNextAttribute
÷÷' :
(
÷÷: ;
)
÷÷; <
;
÷÷< =
count
÷÷> C
++
÷÷C E
)
÷÷E F
{
◊◊ 
if
ÿÿ 
(
ÿÿ 
count
ÿÿ !
==
ÿÿ" $
i
ÿÿ% &
)
ÿÿ& '
return
ŸŸ "
true
ŸŸ# '
;
ŸŸ' (
}
⁄⁄ 
break
€€ 
;
€€ 
}
‹‹ 
return
›› 
false
›› 
;
›› 
}
ﬁﬁ 	
public
‡‡ 
override
‡‡ 
string
‡‡ 
this
‡‡ #
[
‡‡# $
int
‡‡$ '
i
‡‡( )
]
‡‡) *
{
·· 	
get
‚‚ 
{
„„ 
XPathNavigator
‰‰ 
backup
‰‰ %
=
‰‰& '
current
‰‰( /
.
‰‰/ 0
Clone
‰‰0 5
(
‰‰5 6
)
‰‰6 7
;
‰‰7 8
try
ÂÂ 
{
ÊÊ 
if
ÁÁ 
(
ÁÁ &
MoveToAttributeNavigator
ÁÁ 0
(
ÁÁ0 1
i
ÁÁ1 2
)
ÁÁ2 3
)
ÁÁ3 4
return
ËË 
Value
ËË $
;
ËË$ %
else
ÈÈ 
throw
ÍÍ 
new
ÍÍ !)
ArgumentOutOfRangeException
ÍÍ" =
(
ÍÍ= >
)
ÍÍ> ?
;
ÍÍ? @
}
ÎÎ 
finally
ÏÏ 
{
ÌÌ 
current
ÓÓ 
.
ÓÓ 
MoveTo
ÓÓ "
(
ÓÓ" #
backup
ÓÓ# )
)
ÓÓ) *
;
ÓÓ* +
}
ÔÔ 
}
 
}
ÒÒ 	
private
ÛÛ 
void
ÛÛ 
	SplitName
ÛÛ 
(
ÛÛ 
string
ÛÛ %
name
ÛÛ& *
,
ÛÛ* +
out
ÛÛ, /
string
ÛÛ0 6
	localName
ÛÛ7 @
,
ÛÛ@ A
out
ÛÛB E
string
ÛÛF L
ns
ÛÛM O
)
ÛÛO P
{
ÙÙ 	
if
ıı 
(
ıı 
name
ıı 
==
ıı 
$str
ıı 
)
ıı  
{
ˆˆ 
	localName
˜˜ 
=
˜˜ 
$str
˜˜ #
;
˜˜# $
ns
¯¯ 
=
¯¯ 

XmlnsXmlns
¯¯ 
;
¯¯  
return
˘˘ 
;
˘˘ 
}
˙˙ 
	localName
˚˚ 
=
˚˚ 
name
˚˚ 
;
˚˚ 
ns
¸¸ 
=
¸¸ 
String
¸¸ 
.
¸¸ 
Empty
¸¸ 
;
¸¸ 
int
˝˝ 
colon
˝˝ 
=
˝˝ 
name
˝˝ 
.
˝˝ 
IndexOf
˝˝ $
(
˝˝$ %
$char
˝˝% (
)
˝˝( )
;
˝˝) *
if
˛˛ 
(
˛˛ 
colon
˛˛ 
>
˛˛ 
$num
˛˛ 
)
˛˛ 
{
ˇˇ 
	localName
ÄÄ 
=
ÄÄ 
name
ÄÄ  
.
ÄÄ  !
	Substring
ÄÄ! *
(
ÄÄ* +
colon
ÄÄ+ 0
+
ÄÄ1 2
$num
ÄÄ3 4
,
ÄÄ4 5
name
ÄÄ6 :
.
ÄÄ: ;
Length
ÄÄ; A
-
ÄÄB C
colon
ÄÄD I
-
ÄÄJ K
$num
ÄÄL M
)
ÄÄM N
;
ÄÄN O
ns
ÅÅ 
=
ÅÅ 
this
ÅÅ 
.
ÅÅ 
LookupNamespace
ÅÅ )
(
ÅÅ) *
name
ÅÅ* .
.
ÅÅ. /
	Substring
ÅÅ/ 8
(
ÅÅ8 9
$num
ÅÅ9 :
,
ÅÅ: ;
colon
ÅÅ< A
)
ÅÅA B
)
ÅÅB C
;
ÅÅC D
if
ÇÇ 
(
ÇÇ 
name
ÇÇ 
.
ÇÇ 
	Substring
ÇÇ "
(
ÇÇ" #
$num
ÇÇ# $
,
ÇÇ$ %
colon
ÇÇ& +
)
ÇÇ+ ,
==
ÇÇ- /
$str
ÇÇ0 7
)
ÇÇ7 8
ns
ÉÉ 
=
ÉÉ 

XmlnsXmlns
ÉÉ #
;
ÉÉ# $
}
ÑÑ 
}
ÖÖ 	
public
áá 
override
áá 
string
áá 
this
áá #
[
áá# $
string
áá$ *
name
áá+ /
]
áá/ 0
{
àà 	
get
ââ 
{
ää 
string
ãã 
	localName
ãã  
;
ãã  !
string
åå 
ns
åå 
;
åå 
	SplitName
çç 
(
çç 
name
çç 
,
çç 
out
çç  #
	localName
çç$ -
,
çç- .
out
çç/ 2
ns
çç3 5
)
çç5 6
;
çç6 7
return
éé 
this
éé 
[
éé 
	localName
éé %
,
éé% &
ns
éé' )
]
éé) *
;
éé* +
}
èè 
}
êê 	
public
íí 
override
íí 
string
íí 
this
íí #
[
íí# $
string
íí$ *
	localName
íí+ 4
,
íí4 5
string
íí6 <
namespaceURI
íí= I
]
ííI J
{
ìì 	
get
îî 
{
ïï 
string
ññ 
v
ññ 
=
ññ 
current
ññ "
.
ññ" #
GetAttribute
ññ# /
(
ññ/ 0
	localName
ññ0 9
,
ññ9 :
namespaceURI
ññ; G
)
ññG H
;
ññH I
if
óó 
(
óó 
v
óó 
!=
óó 
String
óó 
.
óó  
Empty
óó  %
)
óó% &
return
òò 
v
òò 
;
òò 
XPathNavigator
ôô 
tmp
ôô "
=
ôô# $
current
ôô% ,
.
ôô, -
Clone
ôô- 2
(
ôô2 3
)
ôô3 4
;
ôô4 5
return
öö 
tmp
öö 
.
öö 
MoveToAttribute
öö *
(
öö* +
	localName
öö+ 4
,
öö4 5
namespaceURI
öö6 B
)
ööB C
?
ööD E
String
ööF L
.
ööL M
Empty
ööM R
:
ööS T
null
ööU Y
;
ööY Z
}
õõ 
}
úú 	
public
ûû 
override
ûû 
bool
ûû 
EOF
ûû  
{
üü 	
get
†† 
{
†† 
return
†† 
	ReadState
†† "
==
††# %
	ReadState
††& /
.
††/ 0
	EndOfFile
††0 9
;
††9 :
}
††; <
}
°° 	
public
££ 
override
££ 
	ReadState
££ !
	ReadState
££" +
{
§§ 	
get
•• 
{
¶¶ 
if
ßß 
(
ßß 
eof
ßß 
)
ßß 
return
®® 
	ReadState
®® $
.
®®$ %
	EndOfFile
®®% .
;
®®. /
if
©© 
(
©© 
closed
©© 
)
©© 
return
™™ 
	ReadState
™™ $
.
™™$ %
Closed
™™% +
;
™™+ ,
else
´´ 
if
´´ 
(
´´ 
!
´´ 
started
´´ !
)
´´! "
return
¨¨ 
	ReadState
¨¨ $
.
¨¨$ %
Initial
¨¨% ,
;
¨¨, -
return
≠≠ 
	ReadState
≠≠  
.
≠≠  !
Interactive
≠≠! ,
;
≠≠, -
}
ÆÆ 
}
ØØ 	
public
±± 
override
±± 
XmlNameTable
±± $
	NameTable
±±% .
{
≤≤ 	
get
≥≥ 
{
≥≥ 
return
≥≥ 
current
≥≥  
.
≥≥  !
	NameTable
≥≥! *
;
≥≥* +
}
≥≥, -
}
¥¥ 	
public
ππ 
override
ππ 
string
ππ 
GetAttribute
ππ +
(
ππ+ ,
string
ππ, 2
name
ππ3 7
)
ππ7 8
{
∫∫ 	
string
ªª 
	localName
ªª 
;
ªª 
string
ºº 
ns
ºº 
;
ºº 
	SplitName
ΩΩ 
(
ΩΩ 
name
ΩΩ 
,
ΩΩ 
out
ΩΩ 
	localName
ΩΩ  )
,
ΩΩ) *
out
ΩΩ+ .
ns
ΩΩ/ 1
)
ΩΩ1 2
;
ΩΩ2 3
return
ææ 
this
ææ 
[
ææ 
	localName
ææ !
,
ææ! "
ns
ææ# %
]
ææ% &
;
ææ& '
}
øø 	
public
¡¡ 
override
¡¡ 
string
¡¡ 
GetAttribute
¡¡ +
(
¡¡+ ,
string
¡¡, 2
	localName
¡¡3 <
,
¡¡< =
string
¡¡> D
namespaceURI
¡¡E Q
)
¡¡Q R
{
¬¬ 	
return
√√ 
this
√√ 
[
√√ 
	localName
√√ !
,
√√! "
namespaceURI
√√# /
]
√√/ 0
;
√√0 1
}
ƒƒ 	
public
∆∆ 
override
∆∆ 
string
∆∆ 
GetAttribute
∆∆ +
(
∆∆+ ,
int
∆∆, /
i
∆∆0 1
)
∆∆1 2
{
«« 	
return
»» 
this
»» 
[
»» 
i
»» 
]
»» 
;
»» 
}
…… 	
private
ÀÀ 
bool
ÀÀ  
CheckAttributeMove
ÀÀ '
(
ÀÀ' (
bool
ÀÀ( ,
b
ÀÀ- .
)
ÀÀ. /
{
ÃÃ 	
if
ÕÕ 
(
ÕÕ 
b
ÕÕ 
)
ÕÕ $
attributeValueConsumed
ŒŒ &
=
ŒŒ' (
false
ŒŒ) .
;
ŒŒ. /
return
œœ 
b
œœ 
;
œœ 
}
–– 	
public
““ 
override
““ 
bool
““ 
MoveToAttribute
““ ,
(
““, -
string
““- 3
name
““4 8
)
““8 9
{
”” 	
string
‘‘ 
	localName
‘‘ 
;
‘‘ 
string
’’ 
ns
’’ 
;
’’ 
	SplitName
÷÷ 
(
÷÷ 
name
÷÷ 
,
÷÷ 
out
÷÷ 
	localName
÷÷  )
,
÷÷) *
out
÷÷+ .
ns
÷÷/ 1
)
÷÷1 2
;
÷÷2 3
return
◊◊ 
MoveToAttribute
◊◊ "
(
◊◊" #
	localName
◊◊# ,
,
◊◊, -
ns
◊◊. 0
)
◊◊0 1
;
◊◊1 2
}
ÿÿ 	
public
⁄⁄ 
override
⁄⁄ 
bool
⁄⁄ 
MoveToAttribute
⁄⁄ ,
(
⁄⁄, -
string
⁄⁄- 3
	localName
⁄⁄4 =
,
⁄⁄= >
string
⁄⁄? E
namespaceURI
⁄⁄F R
)
⁄⁄R S
{
€€ 	
bool
‹‹ 
isNS
‹‹ 
=
‹‹ 
namespaceURI
‹‹ $
==
‹‹% '
$str
‹‹( G
;
‹‹G H
XPathNavigator
›› 
backup
›› !
=
››" #
null
››$ (
;
››( )
switch
ﬁﬁ 
(
ﬁﬁ 
current
ﬁﬁ 
.
ﬁﬁ 
NodeType
ﬁﬁ $
)
ﬁﬁ$ %
{
ﬂﬂ 
case
‡‡ 
XPathNodeType
‡‡ "
.
‡‡" #
	Namespace
‡‡# ,
:
‡‡, -
case
·· 
XPathNodeType
·· "
.
··" #
	Attribute
··# ,
:
··, -
backup
‚‚ 
=
‚‚ 
current
‚‚ $
.
‚‚$ %
Clone
‚‚% *
(
‚‚* +
)
‚‚+ ,
;
‚‚, -
this
„„ 
.
„„ 
MoveToElement
„„ &
(
„„& '
)
„„' (
;
„„( )
goto
‰‰ 
case
‰‰ 
XPathNodeType
‰‰ +
.
‰‰+ ,
Element
‰‰, 3
;
‰‰3 4
case
ÂÂ 
XPathNodeType
ÂÂ "
.
ÂÂ" #
Element
ÂÂ# *
:
ÂÂ* +
if
ÊÊ 
(
ÊÊ "
MoveToFirstAttribute
ÊÊ ,
(
ÊÊ, -
)
ÊÊ- .
)
ÊÊ. /
{
ÁÁ 
do
ËË 
{
ÈÈ 
bool
ÍÍ  
match
ÍÍ! &
=
ÍÍ' (
false
ÍÍ) .
;
ÍÍ. /
if
ÎÎ 
(
ÎÎ  
isNS
ÎÎ  $
)
ÎÎ$ %
{
ÏÏ 
if
ÌÌ  "
(
ÌÌ# $
	localName
ÌÌ$ -
==
ÌÌ. 0
$str
ÌÌ1 8
)
ÌÌ8 9
match
ÓÓ$ )
=
ÓÓ* +
current
ÓÓ, 3
.
ÓÓ3 4
Name
ÓÓ4 8
==
ÓÓ9 ;
String
ÓÓ< B
.
ÓÓB C
Empty
ÓÓC H
;
ÓÓH I
else
ÔÔ  $
match
$ )
=
* +
	localName
, 5
==
6 8
current
9 @
.
@ A
Name
A E
;
E F
}
ÒÒ 
else
ÚÚ  
match
ÛÛ  %
=
ÛÛ& '
current
ÛÛ( /
.
ÛÛ/ 0
	LocalName
ÛÛ0 9
==
ÛÛ: <
	localName
ÛÛ= F
&&
ÛÛG I
current
ÙÙ$ +
.
ÙÙ+ ,
NamespaceURI
ÙÙ, 8
==
ÙÙ9 ;
namespaceURI
ÙÙ< H
;
ÙÙH I
if
ıı 
(
ıı  
match
ıı  %
)
ıı% &
{
ˆˆ $
attributeValueConsumed
˜˜  6
=
˜˜7 8
false
˜˜9 >
;
˜˜> ?
return
¯¯  &
true
¯¯' +
;
¯¯+ ,
}
˘˘ 
}
˙˙ 
while
˙˙ 
(
˙˙  !!
MoveToNextAttribute
˙˙! 4
(
˙˙4 5
)
˙˙5 6
)
˙˙6 7
;
˙˙7 8
MoveToElement
˚˚ %
(
˚˚% &
)
˚˚& '
;
˚˚' (
}
¸¸ 
break
˝˝ 
;
˝˝ 
}
˛˛ 
if
ˇˇ 
(
ˇˇ 
backup
ˇˇ 
!=
ˇˇ 
null
ˇˇ 
)
ˇˇ 
current
ÄÄ 
=
ÄÄ 
backup
ÄÄ  
;
ÄÄ  !
return
ÅÅ 
false
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
public
ÑÑ 
override
ÑÑ 
void
ÑÑ 
MoveToAttribute
ÑÑ ,
(
ÑÑ, -
int
ÑÑ- 0
i
ÑÑ1 2
)
ÑÑ2 3
{
ÖÖ 	
if
ÜÜ 
(
ÜÜ 
!
ÜÜ &
MoveToAttributeNavigator
ÜÜ )
(
ÜÜ) *
i
ÜÜ* +
)
ÜÜ+ ,
)
ÜÜ, -
throw
áá 
new
áá )
ArgumentOutOfRangeException
áá 5
(
áá5 6
)
áá6 7
;
áá7 8
}
àà 	
public
ää 
override
ää 
bool
ää "
MoveToFirstAttribute
ää 1
(
ää1 2
)
ää2 3
{
ãã 	
if
åå 
(
åå  
CheckAttributeMove
åå "
(
åå" #
current
åå# *
.
åå* +"
MoveToFirstNamespace
åå+ ?
(
åå? @!
XPathNamespaceScope
åå@ S
.
ååS T
Local
ååT Y
)
ååY Z
)
ååZ [
)
åå[ \
return
çç 
true
çç 
;
çç 
return
éé  
CheckAttributeMove
éé %
(
éé% &
current
éé& -
.
éé- ."
MoveToFirstAttribute
éé. B
(
ééB C
)
ééC D
)
ééD E
;
ééE F
}
èè 	
public
ëë 
override
ëë 
bool
ëë !
MoveToNextAttribute
ëë 0
(
ëë0 1
)
ëë1 2
{
íí 	
switch
ìì 
(
ìì 
current
ìì 
.
ìì 
NodeType
ìì $
)
ìì$ %
{
îî 
case
ïï 
XPathNodeType
ïï "
.
ïï" #
Element
ïï# *
:
ïï* +
return
ññ "
MoveToFirstAttribute
ññ /
(
ññ/ 0
)
ññ0 1
;
ññ1 2
case
óó 
XPathNodeType
óó "
.
óó" #
	Namespace
óó# ,
:
óó, -
if
òò 
(
òò  
CheckAttributeMove
òò *
(
òò* +
current
òò+ 2
.
òò2 3!
MoveToNextNamespace
òò3 F
(
òòF G!
XPathNamespaceScope
òòG Z
.
òòZ [
Local
òò[ `
)
òò` a
)
òòa b
)
òòb c
return
ôô 
true
ôô #
;
ôô# $
XPathNavigator
öö "
bak
öö# &
=
öö' (
current
öö) 0
.
öö0 1
Clone
öö1 6
(
öö6 7
)
öö7 8
;
öö8 9
current
õõ 
.
õõ 
MoveToParent
õõ (
(
õõ( )
)
õõ) *
;
õõ* +
if
úú 
(
úú  
CheckAttributeMove
úú *
(
úú* +
current
úú+ 2
.
úú2 3"
MoveToFirstAttribute
úú3 G
(
úúG H
)
úúH I
)
úúI J
)
úúJ K
return
ùù 
true
ùù #
;
ùù# $
current
ûû 
.
ûû 
MoveTo
ûû "
(
ûû" #
bak
ûû# &
)
ûû& '
;
ûû' (
return
üü 
false
üü  
;
üü  !
case
†† 
XPathNodeType
†† "
.
††" #
	Attribute
††# ,
:
††, -
return
°°  
CheckAttributeMove
°° -
(
°°- .
current
°°. 5
.
°°5 6!
MoveToNextAttribute
°°6 I
(
°°I J
)
°°J K
)
°°K L
;
°°L M
default
¢¢ 
:
¢¢ 
return
££ 
false
££  
;
££  !
}
§§ 
}
•• 	
public
ßß 
override
ßß 
bool
ßß 
MoveToElement
ßß *
(
ßß* +
)
ßß+ ,
{
®® 	
if
©© 
(
©© 
current
©© 
.
©© 
NodeType
©©  
==
©©! #
XPathNodeType
©©$ 1
.
©©1 2
	Attribute
©©2 ;
||
©©< >
current
™™ 
.
™™ 
NodeType
™™  
==
™™! #
XPathNodeType
™™$ 1
.
™™1 2
	Namespace
™™2 ;
)
™™; <
{
´´ $
attributeValueConsumed
¨¨ &
=
¨¨' (
false
¨¨) .
;
¨¨. /
return
≠≠ 
current
≠≠ 
.
≠≠ 
MoveToParent
≠≠ +
(
≠≠+ ,
)
≠≠, -
;
≠≠- .
}
ÆÆ 
return
ØØ 
false
ØØ 
;
ØØ 
}
∞∞ 	
public
≤≤ 
override
≤≤ 
void
≤≤ 
Close
≤≤ "
(
≤≤" #
)
≤≤# $
{
≥≥ 	
closed
¥¥ 
=
¥¥ 
true
¥¥ 
;
¥¥ 
eof
µµ 
=
µµ 
true
µµ 
;
µµ 
}
∂∂ 	
public
∏∏ 
override
∏∏ 
bool
∏∏ 
Read
∏∏ !
(
∏∏! "
)
∏∏" #
{
ππ 	
if
∫∫ 
(
∫∫ 
eof
∫∫ 
)
∫∫ 
return
ªª 
false
ªª 
;
ªª 
switch
¡¡ 
(
¡¡ 
	ReadState
¡¡ 
)
¡¡ 
{
¬¬ 
case
√√ 
	ReadState
√√ 
.
√√ 
Interactive
√√ *
:
√√* +
if
ƒƒ 
(
ƒƒ 
(
ƒƒ 
IsEmptyElement
ƒƒ '
||
ƒƒ( *

endElement
ƒƒ+ 5
)
ƒƒ5 6
&&
ƒƒ7 9
root
ƒƒ: >
.
ƒƒ> ?
IsSamePosition
ƒƒ? M
(
ƒƒM N
current
ƒƒN U
)
ƒƒU V
)
ƒƒV W
{
≈≈ 
eof
∆∆ 
=
∆∆ 
true
∆∆ "
;
∆∆" #
return
«« 
false
«« $
;
««$ %
}
»» 
if
…… 
(
…… 
!
…… 
current
……  
.
……  !
IsEmptyElement
……! /
&&
……0 2
current
……3 :
.
……: ;
NodeType
……; C
==
……D F
XPathNodeType
……G T
.
……T U
Element
……U \
)
……\ ]
depth
   
++
   
;
    
break
ÀÀ 
;
ÀÀ 
case
ÃÃ 
	ReadState
ÃÃ 
.
ÃÃ 
	EndOfFile
ÃÃ (
:
ÃÃ( )
case
ÕÕ 
	ReadState
ÕÕ 
.
ÕÕ 
Closed
ÕÕ %
:
ÕÕ% &
case
ŒŒ 
	ReadState
ŒŒ 
.
ŒŒ 
Error
ŒŒ $
:
ŒŒ$ %
return
œœ 
false
œœ  
;
œœ  !
case
–– 
	ReadState
–– 
.
–– 
Initial
–– &
:
––& '
started
—— 
=
—— 
true
—— "
;
——" #
root
““ 
=
““ 
current
““ "
.
““" #
Clone
““# (
(
““( )
)
““) *
;
““* +
if
”” 
(
”” 
current
”” 
.
””  
NodeType
””  (
==
””) +
XPathNodeType
””, 9
.
””9 :
Root
””: >
&&
””? A
!
‘‘ 
current
‘‘  
.
‘‘  !
MoveToFirstChild
‘‘! 1
(
‘‘1 2
)
‘‘2 3
)
‘‘3 4
{
’’ 

endElement
÷÷ "
=
÷÷# $
false
÷÷% *
;
÷÷* +
eof
◊◊ 
=
◊◊ 
true
◊◊ "
;
◊◊" #
return
ÿÿ 
false
ÿÿ $
;
ÿÿ$ %
}
ŸŸ 
attributeCount
⁄⁄ "
=
⁄⁄# $
GetAttributeCount
⁄⁄% 6
(
⁄⁄6 7
)
⁄⁄7 8
;
⁄⁄8 9
return
€€ 
true
€€ 
;
€€  
}
‹‹ 
MoveToElement
ﬁﬁ 
(
ﬁﬁ 
)
ﬁﬁ 
;
ﬁﬁ 
if
‡‡ 
(
‡‡ 

endElement
‡‡ 
||
‡‡ 
!
‡‡ 
current
‡‡ &
.
‡‡& '
MoveToFirstChild
‡‡' 7
(
‡‡7 8
)
‡‡8 9
)
‡‡9 :
{
·· 
if
„„ 
(
„„ 
!
„„ 

endElement
„„ 
&&
„„  "
!
„„# $
current
„„$ +
.
„„+ ,
IsEmptyElement
„„, :
&&
„„; =
current
‰‰ 
.
‰‰ 
NodeType
‰‰ $
==
‰‰% '
XPathNodeType
‰‰( 5
.
‰‰5 6
Element
‰‰6 =
)
‰‰= >

endElement
ÂÂ 
=
ÂÂ  
true
ÂÂ! %
;
ÂÂ% &
else
ÊÊ 
if
ÊÊ 
(
ÊÊ 
!
ÊÊ 
current
ÊÊ !
.
ÊÊ! "

MoveToNext
ÊÊ" ,
(
ÊÊ, -
)
ÊÊ- .
)
ÊÊ. /
{
ÁÁ 
current
ËË 
.
ËË 
MoveToParent
ËË (
(
ËË( )
)
ËË) *
;
ËË* +
if
ÈÈ 
(
ÈÈ 
current
ÈÈ 
.
ÈÈ  
NodeType
ÈÈ  (
==
ÈÈ) +
XPathNodeType
ÈÈ, 9
.
ÈÈ9 :
Root
ÈÈ: >
)
ÈÈ> ?
{
ÍÍ 

endElement
ÎÎ "
=
ÎÎ# $
false
ÎÎ% *
;
ÎÎ* +
eof
ÏÏ 
=
ÏÏ 
true
ÏÏ "
;
ÏÏ" #
return
ÌÌ 
false
ÌÌ $
;
ÌÌ$ %
}
ÓÓ 

endElement
ÔÔ 
=
ÔÔ  
(
ÔÔ! "
current
ÔÔ" )
.
ÔÔ) *
NodeType
ÔÔ* 2
==
ÔÔ3 5
XPathNodeType
ÔÔ6 C
.
ÔÔC D
Element
ÔÔD K
)
ÔÔK L
;
ÔÔL M
}
 
else
ÒÒ 

endElement
ÚÚ 
=
ÚÚ  
false
ÚÚ! &
;
ÚÚ& '
}
ÛÛ 
if
ıı 
(
ıı 
!
ıı 

endElement
ıı 
&&
ıı 
current
ıı &
.
ıı& '
NodeType
ıı' /
==
ıı0 2
XPathNodeType
ıı3 @
.
ıı@ A
Element
ııA H
)
ııH I
attributeCount
ˆˆ 
=
ˆˆ  
GetAttributeCount
ˆˆ! 2
(
ˆˆ2 3
)
ˆˆ3 4
;
ˆˆ4 5
else
˜˜ 
attributeCount
¯¯ 
=
¯¯  
$num
¯¯! "
;
¯¯" #
if
˙˙ 
(
˙˙ 

endElement
˙˙ 
)
˙˙ 
depth
˚˚ 
--
˚˚ 
;
˚˚ 
return
˝˝ 
true
˝˝ 
;
˝˝ 
}
˛˛ 	
public
ÄÄ 
override
ÄÄ 
string
ÄÄ 

ReadString
ÄÄ )
(
ÄÄ) *
)
ÄÄ* +
{
ÅÅ 	
readStringBuffer
ÇÇ 
.
ÇÇ 
Length
ÇÇ #
=
ÇÇ$ %
$num
ÇÇ& '
;
ÇÇ' (
switch
ÑÑ 
(
ÑÑ 
NodeType
ÑÑ 
)
ÑÑ 
{
ÖÖ 
default
ÜÜ 
:
ÜÜ 
return
áá 
String
áá !
.
áá! "
Empty
áá" '
;
áá' (
case
àà 
XmlNodeType
àà  
.
àà  !
Element
àà! (
:
àà( )
if
ââ 
(
ââ 
IsEmptyElement
ââ &
)
ââ& '
return
ää 
String
ää %
.
ää% &
Empty
ää& +
;
ää+ ,
do
ãã 
{
åå 
Read
çç 
(
çç 
)
çç 
;
çç 
switch
éé 
(
éé  
NodeType
éé  (
)
éé( )
{
èè 
case
êê  
XmlNodeType
êê! ,
.
êê, -
Text
êê- 1
:
êê1 2
case
ëë  
XmlNodeType
ëë! ,
.
ëë, -
CDATA
ëë- 2
:
ëë2 3
case
íí  
XmlNodeType
íí! ,
.
íí, -

Whitespace
íí- 7
:
íí7 8
case
ìì  
XmlNodeType
ìì! ,
.
ìì, -#
SignificantWhitespace
ìì- B
:
ììB C
readStringBuffer
îî  0
.
îî0 1
Append
îî1 7
(
îî7 8
Value
îî8 =
)
îî= >
;
îî> ?
continue
ïï  (
;
ïï( )
}
ññ 
break
óó 
;
óó 
}
òò 
while
òò 
(
òò 
true
òò !
)
òò! "
;
òò" #
break
ôô 
;
ôô 
case
öö 
XmlNodeType
öö  
.
öö  !
Text
öö! %
:
öö% &
case
õõ 
XmlNodeType
õõ  
.
õõ  !
CDATA
õõ! &
:
õõ& '
case
úú 
XmlNodeType
úú  
.
úú  !

Whitespace
úú! +
:
úú+ ,
case
ùù 
XmlNodeType
ùù  
.
ùù  !#
SignificantWhitespace
ùù! 6
:
ùù6 7
do
ûû 
{
üü 
switch
†† 
(
††  
NodeType
††  (
)
††( )
{
°° 
case
¢¢  
XmlNodeType
¢¢! ,
.
¢¢, -
Text
¢¢- 1
:
¢¢1 2
case
££  
XmlNodeType
££! ,
.
££, -
CDATA
££- 2
:
££2 3
case
§§  
XmlNodeType
§§! ,
.
§§, -

Whitespace
§§- 7
:
§§7 8
case
••  
XmlNodeType
••! ,
.
••, -#
SignificantWhitespace
••- B
:
••B C
readStringBuffer
¶¶  0
.
¶¶0 1
Append
¶¶1 7
(
¶¶7 8
Value
¶¶8 =
)
¶¶= >
;
¶¶> ?
Read
ßß  $
(
ßß$ %
)
ßß% &
;
ßß& '
continue
®®  (
;
®®( )
}
©© 
break
™™ 
;
™™ 
}
´´ 
while
´´ 
(
´´ 
true
´´ !
)
´´! "
;
´´" #
break
¨¨ 
;
¨¨ 
}
≠≠ 
string
ÆÆ 
ret
ÆÆ 
=
ÆÆ 
readStringBuffer
ÆÆ )
.
ÆÆ) *
ToString
ÆÆ* 2
(
ÆÆ2 3
)
ÆÆ3 4
;
ÆÆ4 5
readStringBuffer
ØØ 
.
ØØ 
Length
ØØ #
=
ØØ$ %
$num
ØØ& '
;
ØØ' (
return
∞∞ 
ret
∞∞ 
;
∞∞ 
}
±± 	
public
µµ 
override
µµ 
string
µµ 
ReadInnerXml
µµ +
(
µµ+ ,
)
µµ, -
{
∂∂ 	
if
∑∑ 
(
∑∑ 
	ReadState
∑∑ 
!=
∑∑ 
	ReadState
∑∑ &
.
∑∑& '
Interactive
∑∑' 2
)
∑∑2 3
return
∏∏ 
String
∏∏ 
.
∏∏ 
Empty
∏∏ #
;
∏∏# $
switch
∫∫ 
(
∫∫ 
NodeType
∫∫ 
)
∫∫ 
{
ªª 
case
ºº 
XmlNodeType
ºº  
.
ºº  !
	Attribute
ºº! *
:
ºº* +
return
ΩΩ 
Value
ΩΩ  
;
ΩΩ  !
case
ææ 
XmlNodeType
ææ  
.
ææ  !
Element
ææ! (
:
ææ( )
if
øø 
(
øø 
IsEmptyElement
øø &
)
øø& '
return
¿¿ 
String
¿¿ %
.
¿¿% &
Empty
¿¿& +
;
¿¿+ ,
int
¬¬ 

startDepth
¬¬ "
=
¬¬# $
Depth
¬¬% *
;
¬¬* +
innerXmlBuilder
ƒƒ #
.
ƒƒ# $
Length
ƒƒ$ *
=
ƒƒ+ ,
$num
ƒƒ- .
;
ƒƒ. /
bool
≈≈ 
loop
≈≈ 
=
≈≈ 
true
≈≈  $
;
≈≈$ %
do
∆∆ 
{
«« 
Read
»» 
(
»» 
)
»» 
;
»» 
if
…… 
(
…… 
NodeType
…… $
==
……% '
XmlNodeType
……( 3
.
……3 4
None
……4 8
)
……8 9
throw
   !
new
  " %'
InvalidOperationException
  & ?
(
  ? @
$str
  @ X
)
  X Y
;
  Y Z
else
ÀÀ 
if
ÀÀ 
(
ÀÀ  !
NodeType
ÀÀ! )
==
ÀÀ* ,
XmlNodeType
ÀÀ- 8
.
ÀÀ8 9

EndElement
ÀÀ9 C
&&
ÀÀD F
Depth
ÀÀG L
==
ÀÀM O

startDepth
ÀÀP Z
)
ÀÀZ [
{
ÃÃ 
loop
ÕÕ  
=
ÕÕ! "
false
ÕÕ# (
;
ÕÕ( )
Read
ŒŒ  
(
ŒŒ  !
)
ŒŒ! "
;
ŒŒ" #
}
œœ 
else
–– 
innerXmlBuilder
—— +
.
——+ ,
Append
——, 2
(
——2 3!
GetCurrentTagMarkup
——3 F
(
——F G
)
——G H
)
——H I
;
——I J
}
““ 
while
““ 
(
““ 
loop
““ !
)
““! "
;
““" #
string
”” 
xml
”” 
=
””  
innerXmlBuilder
””! 0
.
””0 1
ToString
””1 9
(
””9 :
)
””: ;
;
””; <
innerXmlBuilder
‘‘ #
.
‘‘# $
Length
‘‘$ *
=
‘‘+ ,
$num
‘‘- .
;
‘‘. /
return
’’ 
xml
’’ 
;
’’ 
case
÷÷ 
XmlNodeType
÷÷  
.
÷÷  !
None
÷÷! %
:
÷÷% &
return
ÿÿ 
String
ÿÿ !
.
ÿÿ! "
Empty
ÿÿ" '
;
ÿÿ' (
default
ŸŸ 
:
ŸŸ 
Read
⁄⁄ 
(
⁄⁄ 
)
⁄⁄ 
;
⁄⁄ 
return
€€ 
String
€€ !
.
€€! "
Empty
€€" '
;
€€' (
}
‹‹ 
}
›› 	
StringBuilder
ﬂﬂ 
atts
ﬂﬂ 
=
ﬂﬂ 
new
ﬂﬂ  
StringBuilder
ﬂﬂ! .
(
ﬂﬂ. /
)
ﬂﬂ/ 0
;
ﬂﬂ0 1
private
‡‡ 
string
‡‡ !
GetCurrentTagMarkup
‡‡ *
(
‡‡* +
)
‡‡+ ,
{
·· 	
switch
‚‚ 
(
‚‚ 
NodeType
‚‚ 
)
‚‚ 
{
„„ 
case
‰‰ 
XmlNodeType
‰‰  
.
‰‰  !
CDATA
‰‰! &
:
‰‰& '
return
ÂÂ 
String
ÂÂ !
.
ÂÂ! "
Format
ÂÂ" (
(
ÂÂ( )
$str
ÂÂ) :
,
ÂÂ: ;
Value
ÂÂ< A
.
ÂÂA B
Replace
ÂÂB I
(
ÂÂI J
$str
ÂÂJ O
,
ÂÂO P
$str
ÂÂQ Y
)
ÂÂY Z
)
ÂÂZ [
;
ÂÂ[ \
case
ÊÊ 
XmlNodeType
ÊÊ  
.
ÊÊ  !
Text
ÊÊ! %
:
ÊÊ% &
return
ÁÁ 
Value
ÁÁ  
.
ÁÁ  !
Replace
ÁÁ! (
(
ÁÁ( )
$str
ÁÁ) ,
,
ÁÁ, -
$str
ÁÁ. 4
)
ÁÁ4 5
;
ÁÁ5 6
case
ËË 
XmlNodeType
ËË  
.
ËË  !
Comment
ËË! (
:
ËË( )
return
ÈÈ 
String
ÈÈ !
.
ÈÈ! "
Format
ÈÈ" (
(
ÈÈ( )
$str
ÈÈ) 5
,
ÈÈ5 6
Value
ÈÈ7 <
)
ÈÈ< =
;
ÈÈ= >
case
ÍÍ 
XmlNodeType
ÍÍ  
.
ÍÍ  !#
SignificantWhitespace
ÍÍ! 6
:
ÍÍ6 7
case
ÎÎ 
XmlNodeType
ÎÎ  
.
ÎÎ  !

Whitespace
ÎÎ! +
:
ÎÎ+ ,
return
ÏÏ 
Value
ÏÏ  
;
ÏÏ  !
case
ÌÌ 
XmlNodeType
ÌÌ  
.
ÌÌ  !

EndElement
ÌÌ! +
:
ÌÌ+ ,
return
ÓÓ 
String
ÓÓ !
.
ÓÓ! "
Format
ÓÓ" (
(
ÓÓ( )
$str
ÓÓ) 1
,
ÓÓ1 2
Name
ÓÓ3 7
)
ÓÓ7 8
;
ÓÓ8 9
}
ÔÔ 
string
ÒÒ 
name
ÒÒ 
=
ÒÒ 
Name
ÒÒ 
;
ÒÒ 
atts
ÚÚ 
.
ÚÚ 
Length
ÚÚ 
=
ÚÚ 
$num
ÚÚ 
;
ÚÚ 
XPathNavigator
ÛÛ 
temp
ÛÛ 
=
ÛÛ  !
current
ÛÛ" )
.
ÛÛ) *
Clone
ÛÛ* /
(
ÛÛ/ 0
)
ÛÛ0 1
;
ÛÛ1 2
while
ÙÙ 
(
ÙÙ 
temp
ÙÙ 
.
ÙÙ !
MoveToNextAttribute
ÙÙ +
(
ÙÙ+ ,
)
ÙÙ, -
)
ÙÙ- .
atts
ıı 
.
ıı 
AppendFormat
ıı !
(
ıı! "
$str
ıı" .
,
ıı. /
temp
ıı0 4
.
ıı4 5
Name
ıı5 9
,
ıı9 :
temp
ıı; ?
.
ıı? @
Value
ıı@ E
.
ııE F
Replace
ııF M
(
ııM N
$str
ııN Q
,
ııQ R
$str
ııS [
)
ıı[ \
)
ıı\ ]
;
ıı] ^
if
ˆˆ 
(
ˆˆ 
!
ˆˆ 
IsEmptyElement
ˆˆ 
)
ˆˆ  
return
˜˜ 
String
˜˜ 
.
˜˜ 
Format
˜˜ $
(
˜˜$ %
$str
˜˜% /
,
˜˜/ 0
name
˜˜1 5
,
˜˜5 6
atts
˜˜7 ;
)
˜˜; <
;
˜˜< =
else
¯¯ 
return
˘˘ 
String
˘˘ 
.
˘˘ 
Format
˘˘ $
(
˘˘$ %
$str
˘˘% 1
,
˘˘1 2
name
˘˘3 7
,
˘˘7 8
atts
˘˘9 =
)
˘˘= >
;
˘˘> ?
}
˙˙ 	
public
˝˝ 
override
˝˝ 
string
˝˝ 
ReadOuterXml
˝˝ +
(
˝˝+ ,
)
˝˝, -
{
˛˛ 	
if
ˇˇ 
(
ˇˇ 
	ReadState
ˇˇ 
!=
ˇˇ 
	ReadState
ˇˇ &
.
ˇˇ& '
Interactive
ˇˇ' 2
)
ˇˇ2 3
return
ÄÄ 
String
ÄÄ 
.
ÄÄ 
Empty
ÄÄ #
;
ÄÄ# $
switch
ÇÇ 
(
ÇÇ 
NodeType
ÇÇ 
)
ÇÇ 
{
ÉÉ 
case
ÑÑ 
XmlNodeType
ÑÑ  
.
ÑÑ  !
	Attribute
ÑÑ! *
:
ÑÑ* +
return
ÜÜ 
String
ÜÜ !
.
ÜÜ! "
Format
ÜÜ" (
(
ÜÜ( )
$str
ÜÜ) 8
,
ÜÜ8 9
Name
ÜÜ: >
,
ÜÜ> ?
	QuoteChar
ÜÜ@ I
,
ÜÜI J
ReadInnerXml
ÜÜK W
(
ÜÜW X
)
ÜÜX Y
)
ÜÜY Z
;
ÜÜZ [
case
áá 
XmlNodeType
áá  
.
áá  !
Element
áá! (
:
áá( )
bool
àà 
isEmpty
àà  
=
àà! "
IsEmptyElement
àà# 1
;
àà1 2
string
ââ 
name
ââ 
=
ââ  !
Name
ââ" &
;
ââ& '
StringBuilder
ää !
atts
ää" &
=
ää' (
new
ää) ,
StringBuilder
ää- :
(
ää: ;
)
ää; <
;
ää< =
XPathNavigator
ãã "
temp
ãã# '
=
ãã( )
current
ãã* 1
.
ãã1 2
Clone
ãã2 7
(
ãã7 8
)
ãã8 9
;
ãã9 :
while
åå 
(
åå 
temp
åå 
.
åå  !
MoveToNextAttribute
åå  3
(
åå3 4
)
åå4 5
)
åå5 6
atts
çç 
.
çç 
AppendFormat
çç )
(
çç) *
$str
çç* 6
,
çç6 7
temp
çç8 <
.
çç< =
Name
çç= A
,
ççA B
temp
ççC G
.
ççG H
Value
ççH M
.
ççM N
Replace
ççN U
(
ççU V
$str
ççV Y
,
ççY Z
$str
çç[ c
)
ççc d
)
ççd e
;
ççe f
if
èè 
(
èè 
!
èè 
isEmpty
èè  
)
èè  !
return
êê 
String
êê %
.
êê% &
Format
êê& ,
(
êê, -
$str
êê- ;
,
êê; <!
GetCurrentTagMarkup
êê= P
(
êêP Q
)
êêQ R
,
êêR S
atts
êêT X
,
êêX Y
ReadInnerXml
êêZ f
(
êêf g
)
êêg h
,
êêh i
name
êêj n
)
êên o
;
êêo p
else
ëë 
return
íí 
String
íí %
.
íí% &
Format
íí& ,
(
íí, -
$str
íí- 2
,
íí2 3!
GetCurrentTagMarkup
íí4 G
(
ííG H
)
ííH I
)
ííI J
;
ííJ K
case
ìì 
XmlNodeType
ìì  
.
ìì  !
None
ìì! %
:
ìì% &
return
ïï 
String
ïï !
.
ïï! "
Empty
ïï" '
;
ïï' (
default
ññ 
:
ññ 
Read
óó 
(
óó 
)
óó 
;
óó 
return
òò 
String
òò !
.
òò! "
Empty
òò" '
;
òò' (
}
ôô 
}
öö 	
public
ùù 
override
ùù 
string
ùù 
LookupNamespace
ùù .
(
ùù. /
string
ùù/ 5
prefix
ùù6 <
)
ùù< =
{
ûû 	
XPathNavigator
üü 
backup
üü !
=
üü" #
current
üü$ +
.
üü+ ,
Clone
üü, 1
(
üü1 2
)
üü2 3
;
üü3 4
try
†† 
{
°° 
this
¢¢ 
.
¢¢ 
MoveToElement
¢¢ "
(
¢¢" #
)
¢¢# $
;
¢¢$ %
if
££ 
(
££ 
current
££ 
.
££ "
MoveToFirstNamespace
££ 0
(
££0 1
)
££1 2
)
££2 3
{
§§ 
do
•• 
{
¶¶ 
if
ßß 
(
ßß 
current
ßß #
.
ßß# $
	LocalName
ßß$ -
==
ßß. 0
prefix
ßß1 7
)
ßß7 8
return
®® "
current
®®# *
.
®®* +
Value
®®+ 0
;
®®0 1
}
©© 
while
©© 
(
©© 
current
©© $
.
©©$ %!
MoveToNextNamespace
©©% 8
(
©©8 9
)
©©9 :
)
©©: ;
;
©©; <
}
™™ 
return
´´ 
null
´´ 
;
´´ 
}
¨¨ 
finally
≠≠ 
{
ÆÆ 
current
ØØ 
=
ØØ 
backup
ØØ  
;
ØØ  !
}
∞∞ 
}
±± 	
public
¥¥ 
override
¥¥ 
void
¥¥ 
ResolveEntity
¥¥ *
(
¥¥* +
)
¥¥+ ,
{
µµ 	
throw
∂∂ 
new
∂∂ '
InvalidOperationException
∂∂ /
(
∂∂/ 0
)
∂∂0 1
;
∂∂1 2
}
∑∑ 	
public
ππ 
override
ππ 
bool
ππ  
ReadAttributeValue
ππ /
(
ππ/ 0
)
ππ0 1
{
∫∫ 	
if
ªª 
(
ªª 
NodeType
ªª 
!=
ªª 
XmlNodeType
ªª '
.
ªª' (
	Attribute
ªª( 1
)
ªª1 2
return
ºº 
false
ºº 
;
ºº 
if
ΩΩ 
(
ΩΩ $
attributeValueConsumed
ΩΩ &
)
ΩΩ& '
return
ææ 
false
ææ 
;
ææ $
attributeValueConsumed
øø "
=
øø# $
true
øø% )
;
øø) *
return
¿¿ 
true
¿¿ 
;
¿¿ 
}
¡¡ 	
}
√√ 
}ƒƒ ÷Ô
uD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\NeatHtml\XssFilter.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public 
class 
	XssFilter 
{ 
public 
static	 
	XssFilter 
GetForSchema &
(& '
string' -
schemaLocation. <
)< =
{   
lock!! 
(!! 	
FilterInfoTable!!	 
.!! 
SyncRoot!! !
)!!! "
{"" 
XssFilterInfo## 

filterInfo## 
=## 
FilterInfoTable## .
[##. /
schemaLocation##/ =
]##= >
as##? A
XssFilterInfo##B O
;##O P
if%% 
(%% 

filterInfo%% 
==%% 
null%% 
)%% 
{&& 

filterInfo'' 
='' 
new'' 
XssFilterInfo'' #
(''# $
schemaLocation''$ 2
)''2 3
;''3 4
FilterInfoTable(( 
[(( 
schemaLocation(( #
]((# $
=((% &

filterInfo((' 1
;((1 2
})) 
return** 

new** 
	XssFilter** 
(** 

filterInfo** #
)**# $
;**$ %
}++ 
},, 
private.. 	
static..
 
	Hashtable.. 
FilterInfoTable.. *
=..+ ,
new..- 0
	Hashtable..1 :
(..: ;
)..; <
;..< =
private00 	
	XssFilter00
 
(00 
XssFilterInfo00 !

filterInfo00" ,
)00, -
{11 

FilterInfo22 
=22 

filterInfo22 
;22 
}33 
private55 	
XssFilterInfo55
 

FilterInfo55 "
;55" #
public77 
string77	 
FilterFragment77 
(77 
string77 %
origHtmlFragment77& 6
)776 7
{88 
origHtmlFragment99 
=99 
CleanupHtml99 !
(99! "
origHtmlFragment99" 2
)992 3
;993 4
string<< 	
htmlFragment<<
 
=<< 
	RemoveIds<< "
(<<" #
origHtmlFragment<<# 3
)<<3 4
;<<4 5
htmlFragmentAA 
=AA "
ResolveGeneralEntitiesAA (
(AA( )
htmlFragmentAA) 5
)AA5 6
;AA6 7
stringCC 	
pageCC
 
=CC 
$strCC "
+CC# $

FilterInfoCC% /
.CC/ 0
SchemaCC0 6
.CC6 7
TargetNamespaceCC7 F
+CCG H
$strCCI p
+DD 
$strDD 
+EE 
$strEE 
+EE 
htmlFragmentEE 
+EE 
$strEE  *
+FF 
$strFF 
+GG 
$strGG 
;GG 
XmlTextReaderII 
readerII 
=II 
newII 
XmlTextReaderII +
(II+ ,
newII, /
StringReaderII0 <
(II< =
pageII= A
)IIA B
)IIB C
;IIC D
tryKK 
{LL 
XmlValidatingReaderMM 
	validatorMM !
=MM" #
newMM$ '
SystemMM( .
.MM. /
XmlMM/ 2
.MM2 3
XmlValidatingReaderMM3 F
(MMF G
readerMMG M
)MMM N
;MMN O
	validatorNN 
.NN "
ValidationEventHandlerNN $
+=NN% '
newNN( +"
ValidationEventHandlerNN, B
(NNB C
OnValidationErrorNNC T
)NNT U
;NNU V
	validatorOO 
.OO 
SchemasOO 
.OO 
AddOO 
(OO 

FilterInfoOO $
.OO$ %
SchemaOO% +
)OO+ ,
;OO, -
	validatorPP 
.PP 
ValidationTypePP 
=PP 
ValidationTypePP -
.PP- .
SchemaPP. 4
;PP4 5
	validatorQQ 
.QQ 
EntityHandlingQQ 
=QQ 
EntityHandlingQQ -
.QQ- .
ExpandCharEntitiesQQ. @
;QQ@ A
whileSS 	
(SS
 
	validatorSS 
.SS 
ReadSS 
(SS 
)SS 
)SS 
{SS 
}SS 
}TT 
finallyUU 

{VV 
readerWW 

.WW
 
CloseWW 
(WW 
)WW 
;WW 
}XX 
ifZZ 
(ZZ 

FilterInfoZZ 
.ZZ  
UriAndStyleValidatorZZ &
!=ZZ' )
nullZZ* .
)ZZ. /
{[[ 
reader\\ 

=\\ 
new\\ 
XmlTextReader\\ 
(\\ 
new\\ "
StringReader\\# /
(\\/ 0
page\\0 4
)\\4 5
)\\5 6
;\\6 7
try^^ 
{__ 
XmlDocument`` 
doc`` 
=`` 
new`` 
XmlDocument`` &
(``& '
)``' (
;``( )
docaa 
.aa 	
PreserveWhitespaceaa	 
=aa 
trueaa "
;aa" #
docbb 
.bb 	
Loadbb	 
(bb 
readerbb 
)bb 
;bb 

FilterInfocc 
.cc  
UriAndStyleValidatorcc $
.cc$ %
Validatecc% -
(cc- .
doccc. 1
)cc1 2
;cc2 3
}dd 
finallyee 
{ff 
readergg 
.gg 
Closegg 
(gg 
)gg 
;gg 
}hh 
}ii 
returnkk 	
origHtmlFragmentkk
 
;kk 
}ll 
privatett 	
statictt
 
readonlytt 
Regextt 
CleanupHtmlRegextt  0
=tt1 2
newtt3 6
Regextt7 <
(tt< =
$str	tt= ñ
)
ttñ ó
;
ttó ò
privatevv 	
stringvv
 
CleanupHtmlvv 
(vv 
stringvv #
htmlFragmentvv$ 0
)vv0 1
{ww 
return}} 	
CleanupHtmlRegex}}
 
.}} 
Replace}} "
(}}" #
htmlFragment}}# /
,}}/ 0
new}}1 4
MatchEvaluator}}5 C
(}}C D
FixMatch}}D L
)}}L M
)}}M N
;}}N O
}~~ 
private
ÄÄ 	
string
ÄÄ
 
FixMatch
ÄÄ 
(
ÄÄ 
Match
ÄÄ 
m
ÄÄ  !
)
ÄÄ! "
{
ÅÅ 
if
ÇÇ 
(
ÇÇ 
m
ÇÇ 
.
ÇÇ 	
Groups
ÇÇ	 
[
ÇÇ 
$num
ÇÇ 
]
ÇÇ 
.
ÇÇ 
Success
ÇÇ 
&&
ÇÇ 
m
ÇÇ 
.
ÇÇ  
Groups
ÇÇ  &
[
ÇÇ& '
$num
ÇÇ' (
]
ÇÇ( )
.
ÇÇ) *
Success
ÇÇ* 1
)
ÇÇ1 2
{
ÉÉ 
string
ÑÑ 
 
beforeCloseBracket
ÑÑ 
=
ÑÑ 
m
ÑÑ  !
.
ÑÑ! "
Groups
ÑÑ" (
[
ÑÑ( )
$num
ÑÑ) *
]
ÑÑ* +
.
ÑÑ+ ,
Value
ÑÑ, 1
;
ÑÑ1 2
if
ÜÜ 
(
ÜÜ 
!
ÜÜ 	 
beforeCloseBracket
ÜÜ	 
.
ÜÜ 
EndsWith
ÜÜ $
(
ÜÜ$ %
$str
ÜÜ% (
)
ÜÜ( )
)
ÜÜ) * 
beforeCloseBracket
áá 
+=
áá 
$str
áá 
;
áá 
return
ââ 

$str
ââ 
+
ââ  
beforeCloseBracket
ââ %
+
ââ& '
$str
ââ( +
;
ââ+ ,
}
ää 
else
ãã 
if
ãã 

(
ãã 
m
ãã 
.
ãã 
Groups
ãã 
[
ãã 
$num
ãã 
]
ãã 
.
ãã 
Success
ãã 
)
ãã  
{
åå 
return
çç 

m
çç 
.
çç 
Groups
çç 
[
çç 
$num
çç 
]
çç 
.
çç 
Value
çç 
.
çç 
ToLower
çç $
(
çç$ %
)
çç% &
;
çç& '
}
éé 
else
èè 
if
èè 

(
èè 
m
èè 
.
èè 
Groups
èè 
[
èè 
$num
èè 
]
èè 
.
èè 
Success
èè 
)
èè  
{
êê 
return
ëë 

$str
ëë 
;
ëë 
}
íí 
else
ìì 
{
îî 
return
ïï 

null
ïï 
;
ïï 
}
ññ 
}
óó 
private
ôô 	
static
ôô
 
readonly
ôô 
Regex
ôô 
IdAttributeRegex
ôô  0
=
ôô1 2
new
ôô3 6
Regex
ôô7 <
(
ôô< =
$strôô= •
)ôô• ¶
;ôô¶ ß
private
õõ 	
string
õõ
 
	RemoveIds
õõ 
(
õõ 
string
õõ !
htmlFragment
õõ" .
)
õõ. /
{
úú 
return
ùù 	
IdAttributeRegex
ùù
 
.
ùù 
Replace
ùù "
(
ùù" #
htmlFragment
ùù# /
,
ùù/ 0
$str
ùù1 D
)
ùùD E
;
ùùE F
}
ûû 
private
°° 	
static
°°
 
readonly
°° 
Regex
°°  
GeneralEntityRegex
°°  2
=
°°3 4
new
°°5 8
Regex
°°9 >
(
°°> ?
$str
°°? Q
)
°°Q R
;
°°R S
private
££ 	
string
££
 $
ResolveGeneralEntities
££ '
(
££' (
string
££( .
htmlFragment
££/ ;
)
££; <
{
§§ 
return
•• 	 
GeneralEntityRegex
••
 
.
•• 
Replace
•• $
(
••$ %
htmlFragment
••% 1
,
••1 2
new
••3 6
MatchEvaluator
••7 E
(
••E F
ResolveEntity
••F S
)
••S T
)
••T U
;
••U V
}
¶¶ 
private
®® 	
string
®®
 
ResolveEntity
®® 
(
®® 
Match
®® $
m
®®% &
)
®®& '
{
©© 
if
™™ 
(
™™ 
m
™™ 
.
™™ 	
Groups
™™	 
[
™™ 
$num
™™ 
]
™™ 
.
™™ 
Success
™™ 
)
™™ 
{
´´ 
string
¨¨ 

charEnt
¨¨ 
=
¨¨ 
CharEntityFor
¨¨ "
[
¨¨" #
m
¨¨# $
.
¨¨$ %
Groups
¨¨% +
[
¨¨+ ,
$num
¨¨, -
]
¨¨- .
.
¨¨. /
Value
¨¨/ 4
.
¨¨4 5
ToLower
¨¨5 <
(
¨¨< =
)
¨¨= >
]
¨¨> ?
as
¨¨@ B
string
¨¨C I
;
¨¨I J
if
ÆÆ 
(
ÆÆ 
charEnt
ÆÆ 
!=
ÆÆ 
null
ÆÆ 
)
ÆÆ 
{
ØØ 
return
∞∞ 
charEnt
∞∞ 
;
∞∞ 
}
±± 
}
≤≤ 
return
≥≥ 	
m
≥≥
 
.
≥≥ 
Value
≥≥ 
;
≥≥ 
}
¥¥ 
private
∂∂ 	
void
∂∂
 
OnValidationError
∂∂  
(
∂∂  !
object
∂∂! '
sender
∂∂( .
,
∂∂. /!
ValidationEventArgs
∂∂0 C
args
∂∂D H
)
∂∂H I
{
∑∑ 
if
∏∏ 
(
∏∏ 
args
∏∏ 
.
∏∏ 
	Exception
∏∏ 
!=
∏∏ 
null
∏∏ 
)
∏∏ 
{
ππ 
throw
∫∫ 	
args
∫∫
 
.
∫∫ 
	Exception
∫∫ 
;
∫∫ 
}
ªª 
else
ºº 
{
ΩΩ 
throw
ææ 	
new
ææ
 
XmlException
ææ 
(
ææ 
$str
ææ /
+
ææ0 1
args
ææ2 6
.
ææ6 7
Message
ææ7 >
)
ææ> ?
;
ææ? @
}
øø 
}
¿¿ 
private
¬¬ 	
static
¬¬
 
	Hashtable
¬¬ 
CharEntityFor
¬¬ (
=
¬¬) *
new
¬¬+ .
	Hashtable
¬¬/ 8
(
¬¬8 9
)
¬¬9 :
;
¬¬: ;
static
ƒƒ 
	XssFilter
ƒƒ	 
(
ƒƒ 
)
ƒƒ 
{
≈≈ 
CharEntityFor
∆∆ 
[
∆∆ 
$str
∆∆ 
]
∆∆ 
=
∆∆ 
$str
∆∆ #
;
∆∆# $
CharEntityFor
«« 
[
«« 
$str
«« 
]
«« 
=
«« 
$str
«« $
;
««$ %
CharEntityFor
»» 
[
»» 
$str
»» 
]
»» 
=
»» 
$str
»» #
;
»»# $
CharEntityFor
…… 
[
…… 
$str
…… 
]
…… 
=
…… 
$str
…… $
;
……$ %
CharEntityFor
   
[
   
$str
   
]
   
=
   
$str
   %
;
  % &
CharEntityFor
ÀÀ 
[
ÀÀ 
$str
ÀÀ 
]
ÀÀ 
=
ÀÀ 
$str
ÀÀ "
;
ÀÀ" #
CharEntityFor
ÃÃ 
[
ÃÃ 
$str
ÃÃ 
]
ÃÃ 
=
ÃÃ 
$str
ÃÃ %
;
ÃÃ% &
CharEntityFor
ÕÕ 
[
ÕÕ 
$str
ÕÕ 
]
ÕÕ 
=
ÕÕ 
$str
ÕÕ #
;
ÕÕ# $
CharEntityFor
ŒŒ 
[
ŒŒ 
$str
ŒŒ 
]
ŒŒ 
=
ŒŒ 
$str
ŒŒ "
;
ŒŒ" #
CharEntityFor
œœ 
[
œœ 
$str
œœ 
]
œœ 
=
œœ 
$str
œœ #
;
œœ# $
CharEntityFor
–– 
[
–– 
$str
–– 
]
–– 
=
–– 
$str
–– #
;
––# $
CharEntityFor
—— 
[
—— 
$str
—— 
]
—— 
=
—— 
$str
—— $
;
——$ %
CharEntityFor
““ 
[
““ 
$str
““ 
]
““ 
=
““ 
$str
““ "
;
““" #
CharEntityFor
”” 
[
”” 
$str
”” 
]
”” 
=
”” 
$str
”” "
;
””" #
CharEntityFor
‘‘ 
[
‘‘ 
$str
‘‘ 
]
‘‘ 
=
‘‘ 
$str
‘‘ "
;
‘‘" #
CharEntityFor
’’ 
[
’’ 
$str
’’ 
]
’’ 
=
’’ 
$str
’’ #
;
’’# $
CharEntityFor
÷÷ 
[
÷÷ 
$str
÷÷ 
]
÷÷ 
=
÷÷ 
$str
÷÷ "
;
÷÷" #
CharEntityFor
◊◊ 
[
◊◊ 
$str
◊◊ 
]
◊◊ 
=
◊◊ 
$str
◊◊ %
;
◊◊% &
CharEntityFor
ÿÿ 
[
ÿÿ 
$str
ÿÿ 
]
ÿÿ 
=
ÿÿ 
$str
ÿÿ #
;
ÿÿ# $
CharEntityFor
ŸŸ 
[
ŸŸ 
$str
ŸŸ 
]
ŸŸ 
=
ŸŸ 
$str
ŸŸ #
;
ŸŸ# $
CharEntityFor
⁄⁄ 
[
⁄⁄ 
$str
⁄⁄ 
]
⁄⁄ 
=
⁄⁄ 
$str
⁄⁄ $
;
⁄⁄$ %
CharEntityFor
€€ 
[
€€ 
$str
€€ 
]
€€ 
=
€€ 
$str
€€ $
;
€€$ %
CharEntityFor
‹‹ 
[
‹‹ 
$str
‹‹ 
]
‹‹ 
=
‹‹ 
$str
‹‹ #
;
‹‹# $
CharEntityFor
›› 
[
›› 
$str
›› 
]
›› 
=
›› 
$str
›› %
;
››% &
CharEntityFor
ﬁﬁ 
[
ﬁﬁ 
$str
ﬁﬁ 
]
ﬁﬁ 
=
ﬁﬁ 
$str
ﬁﬁ $
;
ﬁﬁ$ %
CharEntityFor
ﬂﬂ 
[
ﬂﬂ 
$str
ﬂﬂ 
]
ﬂﬂ 
=
ﬂﬂ 
$str
ﬂﬂ #
;
ﬂﬂ# $
CharEntityFor
‡‡ 
[
‡‡ 
$str
‡‡ 
]
‡‡ 
=
‡‡ 
$str
‡‡ #
;
‡‡# $
CharEntityFor
·· 
[
·· 
$str
·· 
]
·· 
=
·· 
$str
·· $
;
··$ %
CharEntityFor
‚‚ 
[
‚‚ 
$str
‚‚ 
]
‚‚ 
=
‚‚ 
$str
‚‚ %
;
‚‚% &
CharEntityFor
„„ 
[
„„ 
$str
„„ 
]
„„ 
=
„„ 
$str
„„ %
;
„„% &
CharEntityFor
‰‰ 
[
‰‰ 
$str
‰‰ 
]
‰‰ 
=
‰‰ 
$str
‰‰ %
;
‰‰% &
CharEntityFor
ÂÂ 
[
ÂÂ 
$str
ÂÂ 
]
ÂÂ 
=
ÂÂ 
$str
ÂÂ %
;
ÂÂ% &
CharEntityFor
ÊÊ 
[
ÊÊ 
$str
ÊÊ 
]
ÊÊ 
=
ÊÊ 
$str
ÊÊ %
;
ÊÊ% &
CharEntityFor
ÁÁ 
[
ÁÁ 
$str
ÁÁ 
]
ÁÁ 
=
ÁÁ 
$str
ÁÁ %
;
ÁÁ% &
CharEntityFor
ËË 
[
ËË 
$str
ËË 
]
ËË 
=
ËË 
$str
ËË $
;
ËË$ %
CharEntityFor
ÈÈ 
[
ÈÈ 
$str
ÈÈ 
]
ÈÈ 
=
ÈÈ 
$str
ÈÈ %
;
ÈÈ% &
CharEntityFor
ÍÍ 
[
ÍÍ 
$str
ÍÍ 
]
ÍÍ 
=
ÍÍ 
$str
ÍÍ #
;
ÍÍ# $
CharEntityFor
ÎÎ 
[
ÎÎ 
$str
ÎÎ 
]
ÎÎ 
=
ÎÎ 
$str
ÎÎ $
;
ÎÎ$ %
CharEntityFor
ÏÏ 
[
ÏÏ 
$str
ÏÏ 
]
ÏÏ 
=
ÏÏ 
$str
ÏÏ $
;
ÏÏ$ %
CharEntityFor
ÌÌ 
[
ÌÌ 
$str
ÌÌ 
]
ÌÌ 
=
ÌÌ 
$str
ÌÌ %
;
ÌÌ% &
CharEntityFor
ÓÓ 
[
ÓÓ 
$str
ÓÓ 
]
ÓÓ 
=
ÓÓ 
$str
ÓÓ %
;
ÓÓ% &
CharEntityFor
ÔÔ 
[
ÔÔ 
$str
ÔÔ 
]
ÔÔ 
=
ÔÔ 
$str
ÔÔ %
;
ÔÔ% &
CharEntityFor
 
[
 
$str
 
]
 
=
 
$str
 $
;
$ %
CharEntityFor
ÒÒ 
[
ÒÒ 
$str
ÒÒ 
]
ÒÒ 
=
ÒÒ 
$str
ÒÒ #
;
ÒÒ# $
CharEntityFor
ÚÚ 
[
ÚÚ 
$str
ÚÚ 
]
ÚÚ 
=
ÚÚ 
$str
ÚÚ %
;
ÚÚ% &
CharEntityFor
ÛÛ 
[
ÛÛ 
$str
ÛÛ 
]
ÛÛ 
=
ÛÛ 
$str
ÛÛ %
;
ÛÛ% &
CharEntityFor
ÙÙ 
[
ÙÙ 
$str
ÙÙ 
]
ÙÙ 
=
ÙÙ 
$str
ÙÙ $
;
ÙÙ$ %
CharEntityFor
ıı 
[
ıı 
$str
ıı 
]
ıı 
=
ıı 
$str
ıı #
;
ıı# $
CharEntityFor
ˆˆ 
[
ˆˆ 
$str
ˆˆ 
]
ˆˆ 
=
ˆˆ 
$str
ˆˆ "
;
ˆˆ" #
CharEntityFor
˜˜ 
[
˜˜ 
$str
˜˜ 
]
˜˜ 
=
˜˜ 
$str
˜˜ %
;
˜˜% &
CharEntityFor
¯¯ 
[
¯¯ 
$str
¯¯ 
]
¯¯ 
=
¯¯ 
$str
¯¯ %
;
¯¯% &
CharEntityFor
˘˘ 
[
˘˘ 
$str
˘˘ 
]
˘˘ 
=
˘˘ 
$str
˘˘ %
;
˘˘% &
CharEntityFor
˙˙ 
[
˙˙ 
$str
˙˙ 
]
˙˙ 
=
˙˙ 
$str
˙˙ $
;
˙˙$ %
CharEntityFor
˚˚ 
[
˚˚ 
$str
˚˚ 
]
˚˚ 
=
˚˚ 
$str
˚˚ %
;
˚˚% &
CharEntityFor
¸¸ 
[
¸¸ 
$str
¸¸ 
]
¸¸ 
=
¸¸ 
$str
¸¸ #
;
¸¸# $
CharEntityFor
˝˝ 
[
˝˝ 
$str
˝˝ 
]
˝˝ 
=
˝˝ 
$str
˝˝ $
;
˝˝$ %
CharEntityFor
˛˛ 
[
˛˛ 
$str
˛˛ 
]
˛˛ 
=
˛˛ 
$str
˛˛ %
;
˛˛% &
CharEntityFor
ˇˇ 
[
ˇˇ 
$str
ˇˇ 
]
ˇˇ 
=
ˇˇ 
$str
ˇˇ %
;
ˇˇ% &
CharEntityFor
ÄÄ 
[
ÄÄ 
$str
ÄÄ 
]
ÄÄ 
=
ÄÄ 
$str
ÄÄ %
;
ÄÄ% &
CharEntityFor
ÅÅ 
[
ÅÅ 
$str
ÅÅ 
]
ÅÅ 
=
ÅÅ 
$str
ÅÅ $
;
ÅÅ$ %
CharEntityFor
ÇÇ 
[
ÇÇ 
$str
ÇÇ 
]
ÇÇ 
=
ÇÇ 
$str
ÇÇ #
;
ÇÇ# $
CharEntityFor
ÉÉ 
[
ÉÉ 
$str
ÉÉ 
]
ÉÉ 
=
ÉÉ 
$str
ÉÉ %
;
ÉÉ% &
CharEntityFor
ÑÑ 
[
ÑÑ 
$str
ÑÑ 
]
ÑÑ 
=
ÑÑ 
$str
ÑÑ $
;
ÑÑ$ %
CharEntityFor
ÖÖ 
[
ÖÖ 
$str
ÖÖ 
]
ÖÖ 
=
ÖÖ 
$str
ÖÖ $
;
ÖÖ$ %
CharEntityFor
ÜÜ 
[
ÜÜ 
$str
ÜÜ 
]
ÜÜ 
=
ÜÜ 
$str
ÜÜ %
;
ÜÜ% &
CharEntityFor
áá 
[
áá 
$str
áá 
]
áá 
=
áá 
$str
áá %
;
áá% &
CharEntityFor
àà 
[
àà 
$str
àà 
]
àà 
=
àà 
$str
àà $
;
àà$ %
CharEntityFor
ââ 
[
ââ 
$str
ââ 
]
ââ 
=
ââ 
$str
ââ %
;
ââ% &
CharEntityFor
ää 
[
ää 
$str
ää 
]
ää 
=
ää 
$str
ää #
;
ää# $
CharEntityFor
ãã 
[
ãã 
$str
ãã 
]
ãã 
=
ãã 
$str
ãã $
;
ãã$ %
CharEntityFor
åå 
[
åå 
$str
åå 
]
åå 
=
åå 
$str
åå $
;
åå$ %
CharEntityFor
çç 
[
çç 
$str
çç 
]
çç 
=
çç 
$str
çç %
;
çç% &
CharEntityFor
éé 
[
éé 
$str
éé 
]
éé 
=
éé 
$str
éé %
;
éé% &
CharEntityFor
èè 
[
èè 
$str
èè 
]
èè 
=
èè 
$str
èè %
;
èè% &
CharEntityFor
êê 
[
êê 
$str
êê 
]
êê 
=
êê 
$str
êê $
;
êê$ %
CharEntityFor
ëë 
[
ëë 
$str
ëë 
]
ëë 
=
ëë 
$str
ëë #
;
ëë# $
CharEntityFor
íí 
[
íí 
$str
íí 
]
íí 
=
íí 
$str
íí %
;
íí% &
CharEntityFor
ìì 
[
ìì 
$str
ìì 
]
ìì 
=
ìì 
$str
ìì %
;
ìì% &
CharEntityFor
îî 
[
îî 
$str
îî 
]
îî 
=
îî 
$str
îî $
;
îî$ %
CharEntityFor
ïï 
[
ïï 
$str
ïï 
]
ïï 
=
ïï 
$str
ïï #
;
ïï# $
CharEntityFor
ññ 
[
ññ 
$str
ññ 
]
ññ 
=
ññ 
$str
ññ "
;
ññ" #
CharEntityFor
óó 
[
óó 
$str
óó 
]
óó 
=
óó 
$str
óó %
;
óó% &
CharEntityFor
òò 
[
òò 
$str
òò 
]
òò 
=
òò 
$str
òò %
;
òò% &
CharEntityFor
ôô 
[
ôô 
$str
ôô 
]
ôô 
=
ôô 
$str
ôô %
;
ôô% &
CharEntityFor
öö 
[
öö 
$str
öö 
]
öö 
=
öö 
$str
öö $
;
öö$ %
CharEntityFor
õõ 
[
õõ 
$str
õõ 
]
õõ 
=
õõ 
$str
õõ %
;
õõ% &
CharEntityFor
úú 
[
úú 
$str
úú 
]
úú 
=
úú 
$str
úú #
;
úú# $
CharEntityFor
ùù 
[
ùù 
$str
ùù 
]
ùù 
=
ùù 
$str
ùù %
;
ùù% &
CharEntityFor
ûû 
[
ûû 
$str
ûû 
]
ûû 
=
ûû 
$str
ûû %
;
ûû% &
CharEntityFor
üü 
[
üü 
$str
üü 
]
üü 
=
üü 
$str
üü %
;
üü% &
CharEntityFor
†† 
[
†† 
$str
†† 
]
†† 
=
†† 
$str
†† %
;
††% &
CharEntityFor
°° 
[
°° 
$str
°° 
]
°° 
=
°° 
$str
°° $
;
°°$ %
CharEntityFor
¢¢ 
[
¢¢ 
$str
¢¢ 
]
¢¢ 
=
¢¢ 
$str
¢¢ #
;
¢¢# $
CharEntityFor
££ 
[
££ 
$str
££ 
]
££ 
=
££ 
$str
££ %
;
££% &
CharEntityFor
§§ 
[
§§ 
$str
§§ 
]
§§ 
=
§§ 
$str
§§ $
;
§§$ %
CharEntityFor
•• 
[
•• 
$str
•• 
]
•• 
=
•• 
$str
•• #
;
••# $
CharEntityFor
∏∏ 
[
∏∏ 
$str
∏∏ 
]
∏∏ 
=
∏∏ 
$str
∏∏ "
;
∏∏" #
CharEntityFor
ππ 
[
ππ 
$str
ππ 
]
ππ 
=
ππ 
$str
ππ %
;
ππ% &
CharEntityFor
∫∫ 
[
∫∫ 
$str
∫∫ 
]
∫∫ 
=
∫∫ 
$str
∫∫ $
;
∫∫$ %
CharEntityFor
ªª 
[
ªª 
$str
ªª 
]
ªª 
=
ªª 
$str
ªª  
;
ªª  !
CharEntityFor
ºº 
[
ºº 
$str
ºº 
]
ºº 
=
ºº 
$str
ºº #
;
ºº# $
CharEntityFor
øø 
[
øø 
$str
øø 
]
øø 
=
øø 
$str
øø $
;
øø$ %
CharEntityFor
¿¿ 
[
¿¿ 
$str
¿¿ 
]
¿¿ 
=
¿¿ 
$str
¿¿ $
;
¿¿$ %
CharEntityFor
¬¬ 
[
¬¬ 
$str
¬¬ 
]
¬¬ 
=
¬¬ 
$str
¬¬ %
;
¬¬% &
CharEntityFor
√√ 
[
√√ 
$str
√√ 
]
√√ 
=
√√ 
$str
√√ %
;
√√% &
CharEntityFor
ƒƒ 
[
ƒƒ 
$str
ƒƒ 
]
ƒƒ 
=
ƒƒ 
$str
ƒƒ #
;
ƒƒ# $
CharEntityFor
«« 
[
«« 
$str
«« 
]
«« 
=
«« 
$str
«« #
;
««# $
CharEntityFor
»» 
[
»» 
$str
»» 
]
»» 
=
»» 
$str
»» $
;
»»$ %
CharEntityFor
ÀÀ 
[
ÀÀ 
$str
ÀÀ 
]
ÀÀ 
=
ÀÀ 
$str
ÀÀ $
;
ÀÀ$ %
CharEntityFor
ÃÃ 
[
ÃÃ 
$str
ÃÃ 
]
ÃÃ 
=
ÃÃ 
$str
ÃÃ $
;
ÃÃ$ %
CharEntityFor
ÕÕ 
[
ÕÕ 
$str
ÕÕ 
]
ÕÕ 
=
ÕÕ 
$str
ÕÕ &
;
ÕÕ& '
CharEntityFor
ŒŒ 
[
ŒŒ 
$str
ŒŒ 
]
ŒŒ 
=
ŒŒ 
$str
ŒŒ $
;
ŒŒ$ %
CharEntityFor
œœ 
[
œœ 
$str
œœ 
]
œœ 
=
œœ 
$str
œœ #
;
œœ# $
CharEntityFor
–– 
[
–– 
$str
–– 
]
–– 
=
–– 
$str
–– #
;
––# $
CharEntityFor
—— 
[
—— 
$str
—— 
]
—— 
=
—— 
$str
—— #
;
——# $
CharEntityFor
““ 
[
““ 
$str
““ 
]
““ 
=
““ 
$str
““ %
;
““% &
CharEntityFor
”” 
[
”” 
$str
”” 
]
”” 
=
”” 
$str
”” %
;
””% &
CharEntityFor
‘‘ 
[
‘‘ 
$str
‘‘ 
]
‘‘ 
=
‘‘ 
$str
‘‘ %
;
‘‘% &
CharEntityFor
’’ 
[
’’ 
$str
’’ 
]
’’ 
=
’’ 
$str
’’ %
;
’’% &
CharEntityFor
÷÷ 
[
÷÷ 
$str
÷÷ 
]
÷÷ 
=
÷÷ 
$str
÷÷ %
;
÷÷% &
CharEntityFor
◊◊ 
[
◊◊ 
$str
◊◊ 
]
◊◊ 
=
◊◊ 
$str
◊◊ %
;
◊◊% &
CharEntityFor
ÿÿ 
[
ÿÿ 
$str
ÿÿ 
]
ÿÿ 
=
ÿÿ 
$str
ÿÿ %
;
ÿÿ% &
CharEntityFor
ŸŸ 
[
ŸŸ 
$str
ŸŸ 
]
ŸŸ 
=
ŸŸ 
$str
ŸŸ %
;
ŸŸ% &
CharEntityFor
⁄⁄ 
[
⁄⁄ 
$str
⁄⁄ 
]
⁄⁄ 
=
⁄⁄ 
$str
⁄⁄ &
;
⁄⁄& '
CharEntityFor
€€ 
[
€€ 
$str
€€ 
]
€€ 
=
€€ 
$str
€€ &
;
€€& '
CharEntityFor
‹‹ 
[
‹‹ 
$str
‹‹ 
]
‹‹ 
=
‹‹ 
$str
‹‹ &
;
‹‹& '
CharEntityFor
›› 
[
›› 
$str
›› 
]
›› 
=
›› 
$str
›› &
;
››& '
CharEntityFor
ﬂﬂ 
[
ﬂﬂ 
$str
ﬂﬂ 
]
ﬂﬂ 
=
ﬂﬂ 
$str
ﬂﬂ &
;
ﬂﬂ& '
CharEntityFor
„„ 
[
„„ 
$str
„„ 
]
„„ 
=
„„ 
$str
„„ $
;
„„$ %
CharEntityFor
ıı 
[
ıı 
$str
ıı 
]
ıı 
=
ıı 
$str
ıı #
;
ıı# $
CharEntityFor
¯¯ 
[
¯¯ 
$str
¯¯ 
]
¯¯ 
=
¯¯ 
$str
¯¯ $
;
¯¯$ %
CharEntityFor
˘˘ 
[
˘˘ 
$str
˘˘ 
]
˘˘ 
=
˘˘ 
$str
˘˘ #
;
˘˘# $
CharEntityFor
˙˙ 
[
˙˙ 
$str
˙˙ 
]
˙˙ 
=
˙˙ 
$str
˙˙ $
;
˙˙$ %
CharEntityFor
˚˚ 
[
˚˚ 
$str
˚˚ 
]
˚˚ 
=
˚˚ 
$str
˚˚ $
;
˚˚$ %
CharEntityFor
¸¸ 
[
¸¸ 
$str
¸¸ 
]
¸¸ 
=
¸¸ 
$str
¸¸ &
;
¸¸& '
CharEntityFor
˝˝ 
[
˝˝ 
$str
˝˝ 
]
˝˝ 
=
˝˝ 
$str
˝˝ #
;
˝˝# $
CharEntityFor
˛˛ 
[
˛˛ 
$str
˛˛ 
]
˛˛ 
=
˛˛ 
$str
˛˛ "
;
˛˛" #
CharEntityFor
ˇˇ 
[
ˇˇ 
$str
ˇˇ 
]
ˇˇ 
=
ˇˇ 
$str
ˇˇ $
;
ˇˇ$ %
CharEntityFor
ÄÄ 
[
ÄÄ 
$str
ÄÄ 
]
ÄÄ 
=
ÄÄ 
$str
ÄÄ #
;
ÄÄ# $
CharEntityFor
ÅÅ 
[
ÅÅ 
$str
ÅÅ 
]
ÅÅ 
=
ÅÅ 
$str
ÅÅ $
;
ÅÅ$ %
CharEntityFor
ÇÇ 
[
ÇÇ 
$str
ÇÇ 
]
ÇÇ 
=
ÇÇ 
$str
ÇÇ %
;
ÇÇ% &
CharEntityFor
ÉÉ 
[
ÉÉ 
$str
ÉÉ 
]
ÉÉ 
=
ÉÉ 
$str
ÉÉ !
;
ÉÉ! "
CharEntityFor
ÑÑ 
[
ÑÑ 
$str
ÑÑ 
]
ÑÑ 
=
ÑÑ 
$str
ÑÑ !
;
ÑÑ! "
CharEntityFor
ÖÖ 
[
ÖÖ 
$str
ÖÖ 
]
ÖÖ 
=
ÖÖ 
$str
ÖÖ !
;
ÖÖ! "
CharEntityFor
ÜÜ 
[
ÜÜ 
$str
ÜÜ 
]
ÜÜ 
=
ÜÜ 
$str
ÜÜ &
;
ÜÜ& '
CharEntityFor
áá 
[
áá 
$str
áá 
]
áá 
=
áá 
$str
áá !
;
áá! "
CharEntityFor
àà 
[
àà 
$str
àà 
]
àà 
=
àà 
$str
àà "
;
àà" #
CharEntityFor
ää 
[
ää 
$str
ää 
]
ää 
=
ää 
$str
ää $
;
ää$ %
CharEntityFor
ãã 
[
ãã 
$str
ãã 
]
ãã 
=
ãã 
$str
ãã "
;
ãã" #
CharEntityFor
åå 
[
åå 
$str
åå 
]
åå 
=
åå 
$str
åå &
;
åå& '
CharEntityFor
çç 
[
çç 
$str
çç 
]
çç 
=
çç 
$str
çç "
;
çç" #
CharEntityFor
éé 
[
éé 
$str
éé 
]
éé 
=
éé 
$str
éé "
;
éé" #
CharEntityFor
èè 
[
èè 
$str
èè 
]
èè 
=
èè 
$str
èè "
;
èè" #
CharEntityFor
êê 
[
êê 
$str
êê 
]
êê 
=
êê 
$str
êê $
;
êê$ %
CharEntityFor
íí 
[
íí 
$str
íí 
]
íí 
=
íí 
$str
íí $
;
íí$ %
CharEntityFor
ìì 
[
ìì 
$str
ìì 
]
ìì 
=
ìì 
$str
ìì #
;
ìì# $
CharEntityFor
îî 
[
îî 
$str
îî 
]
îî 
=
îî 
$str
îî $
;
îî$ %
CharEntityFor
ïï 
[
ïï 
$str
ïï 
]
ïï 
=
ïï 
$str
ïï $
;
ïï$ %
CharEntityFor
ññ 
[
ññ 
$str
ññ 
]
ññ 
=
ññ 
$str
ññ &
;
ññ& '
CharEntityFor
óó 
[
óó 
$str
óó 
]
óó 
=
óó 
$str
óó #
;
óó# $
CharEntityFor
òò 
[
òò 
$str
òò 
]
òò 
=
òò 
$str
òò "
;
òò" #
CharEntityFor
ôô 
[
ôô 
$str
ôô 
]
ôô 
=
ôô 
$str
ôô $
;
ôô$ %
CharEntityFor
öö 
[
öö 
$str
öö 
]
öö 
=
öö 
$str
öö #
;
öö# $
CharEntityFor
õõ 
[
õõ 
$str
õõ 
]
õõ 
=
õõ 
$str
õõ $
;
õõ$ %
CharEntityFor
úú 
[
úú 
$str
úú 
]
úú 
=
úú 
$str
úú %
;
úú% &
CharEntityFor
ùù 
[
ùù 
$str
ùù 
]
ùù 
=
ùù 
$str
ùù !
;
ùù! "
CharEntityFor
ûû 
[
ûû 
$str
ûû 
]
ûû 
=
ûû 
$str
ûû !
;
ûû! "
CharEntityFor
üü 
[
üü 
$str
üü 
]
üü 
=
üü 
$str
üü !
;
üü! "
CharEntityFor
†† 
[
†† 
$str
†† 
]
†† 
=
†† 
$str
†† &
;
††& '
CharEntityFor
°° 
[
°° 
$str
°° 
]
°° 
=
°° 
$str
°° !
;
°°! "
CharEntityFor
¢¢ 
[
¢¢ 
$str
¢¢ 
]
¢¢ 
=
¢¢ 
$str
¢¢ "
;
¢¢" #
CharEntityFor
££ 
[
££ 
$str
££ 
]
££ 
=
££ 
$str
££ %
;
££% &
CharEntityFor
§§ 
[
§§ 
$str
§§ 
]
§§ 
=
§§ 
$str
§§ $
;
§§$ %
CharEntityFor
•• 
[
•• 
$str
•• 
]
•• 
=
•• 
$str
•• "
;
••" #
CharEntityFor
¶¶ 
[
¶¶ 
$str
¶¶ 
]
¶¶ 
=
¶¶ 
$str
¶¶ &
;
¶¶& '
CharEntityFor
ßß 
[
ßß 
$str
ßß 
]
ßß 
=
ßß 
$str
ßß "
;
ßß" #
CharEntityFor
®® 
[
®® 
$str
®® 
]
®® 
=
®® 
$str
®® "
;
®®" #
CharEntityFor
©© 
[
©© 
$str
©© 
]
©© 
=
©© 
$str
©© "
;
©©" #
CharEntityFor
™™ 
[
™™ 
$str
™™ 
]
™™ 
=
™™ 
$str
™™ $
;
™™$ %
CharEntityFor
´´ 
[
´´ 
$str
´´ 
]
´´ 
=
´´ 
$str
´´ '
;
´´' (
CharEntityFor
¨¨ 
[
¨¨ 
$str
¨¨ 
]
¨¨ 
=
¨¨ 
$str
¨¨ $
;
¨¨$ %
CharEntityFor
≠≠ 
[
≠≠ 
$str
≠≠ 
]
≠≠ 
=
≠≠ 
$str
≠≠ "
;
≠≠" #
CharEntityFor
∞∞ 
[
∞∞ 
$str
∞∞ 
]
∞∞ 
=
∞∞ 
$str
∞∞ $
;
∞∞$ %
CharEntityFor
≤≤ 
[
≤≤ 
$str
≤≤ 
]
≤≤ 
=
≤≤ 
$str
≤≤ &
;
≤≤& '
CharEntityFor
≥≥ 
[
≥≥ 
$str
≥≥ 
]
≥≥ 
=
≥≥ 
$str
≥≥ %
;
≥≥% &
CharEntityFor
¥¥ 
[
¥¥ 
$str
¥¥ 
]
¥¥ 
=
¥¥ 
$str
¥¥ %
;
¥¥% &
CharEntityFor
µµ 
[
µµ 
$str
µµ 
]
µµ 
=
µµ 
$str
µµ %
;
µµ% &
CharEntityFor
∂∂ 
[
∂∂ 
$str
∂∂ 
]
∂∂ 
=
∂∂ 
$str
∂∂ %
;
∂∂% &
CharEntityFor
ππ 
[
ππ 
$str
ππ 
]
ππ 
=
ππ 
$str
ππ &
;
ππ& '
CharEntityFor
∫∫ 
[
∫∫ 
$str
∫∫ 
]
∫∫ 
=
∫∫ 
$str
∫∫ %
;
∫∫% &
CharEntityFor
ªª 
[
ªª 
$str
ªª 
]
ªª 
=
ªª 
$str
ªª $
;
ªª$ %
CharEntityFor
ºº 
[
ºº 
$str
ºº 
]
ºº 
=
ºº 
$str
ºº %
;
ºº% &
CharEntityFor
ΩΩ 
[
ΩΩ 
$str
ΩΩ 
]
ΩΩ 
=
ΩΩ 
$str
ΩΩ '
;
ΩΩ' (
CharEntityFor
¡¡ 
[
¡¡ 
$str
¡¡ 
]
¡¡ 
=
¡¡ 
$str
¡¡ $
;
¡¡$ %
CharEntityFor
¬¬ 
[
¬¬ 
$str
¬¬ 
]
¬¬ 
=
¬¬ 
$str
¬¬ $
;
¬¬$ %
CharEntityFor
√√ 
[
√√ 
$str
√√ 
]
√√ 
=
√√ 
$str
√√ $
;
√√$ %
CharEntityFor
ƒƒ 
[
ƒƒ 
$str
ƒƒ 
]
ƒƒ 
=
ƒƒ 
$str
ƒƒ $
;
ƒƒ$ %
CharEntityFor
≈≈ 
[
≈≈ 
$str
≈≈ 
]
≈≈ 
=
≈≈ 
$str
≈≈ $
;
≈≈$ %
CharEntityFor
∆∆ 
[
∆∆ 
$str
∆∆ 
]
∆∆ 
=
∆∆ 
$str
∆∆ %
;
∆∆% &
CharEntityFor
«« 
[
«« 
$str
«« 
]
«« 
=
«« 
$str
«« $
;
««$ %
CharEntityFor
ÕÕ 
[
ÕÕ 
$str
ÕÕ 
]
ÕÕ 
=
ÕÕ 
$str
ÕÕ $
;
ÕÕ$ %
CharEntityFor
ŒŒ 
[
ŒŒ 
$str
ŒŒ 
]
ŒŒ 
=
ŒŒ 
$str
ŒŒ $
;
ŒŒ$ %
CharEntityFor
‘‘ 
[
‘‘ 
$str
‘‘ 
]
‘‘ 
=
‘‘ 
$str
‘‘ $
;
‘‘$ %
CharEntityFor
’’ 
[
’’ 
$str
’’ 
]
’’ 
=
’’ 
$str
’’ $
;
’’$ %
CharEntityFor
ÿÿ 
[
ÿÿ 
$str
ÿÿ 
]
ÿÿ 
=
ÿÿ 
$str
ÿÿ &
;
ÿÿ& '
CharEntityFor
ŸŸ 
[
ŸŸ 
$str
ŸŸ 
]
ŸŸ 
=
ŸŸ 
$str
ŸŸ $
;
ŸŸ$ %
CharEntityFor
⁄⁄ 
[
⁄⁄ 
$str
⁄⁄ 
]
⁄⁄ 
=
⁄⁄ 
$str
⁄⁄ %
;
⁄⁄% &
CharEntityFor
€€ 
[
€€ 
$str
€€ 
]
€€ 
=
€€ 
$str
€€ %
;
€€% &
CharEntityFor
‹‹ 
[
‹‹ 
$str
‹‹ 
]
‹‹ 
=
‹‹ 
$str
‹‹ %
;
‹‹% &
CharEntityFor
›› 
[
›› 
$str
›› 
]
›› 
=
›› 
$str
›› $
;
››$ %
CharEntityFor
ﬁﬁ 
[
ﬁﬁ 
$str
ﬁﬁ 
]
ﬁﬁ 
=
ﬁﬁ 
$str
ﬁﬁ %
;
ﬁﬁ% &
CharEntityFor
ﬂﬂ 
[
ﬂﬂ 
$str
ﬂﬂ 
]
ﬂﬂ 
=
ﬂﬂ 
$str
ﬂﬂ "
;
ﬂﬂ" #
CharEntityFor
‡‡ 
[
‡‡ 
$str
‡‡ 
]
‡‡ 
=
‡‡ 
$str
‡‡ $
;
‡‡$ %
CharEntityFor
‚‚ 
[
‚‚ 
$str
‚‚ 
]
‚‚ 
=
‚‚ 
$str
‚‚ #
;
‚‚# $
CharEntityFor
‰‰ 
[
‰‰ 
$str
‰‰ 
]
‰‰ 
=
‰‰ 
$str
‰‰ %
;
‰‰% &
CharEntityFor
ÂÂ 
[
ÂÂ 
$str
ÂÂ 
]
ÂÂ 
=
ÂÂ 
$str
ÂÂ &
;
ÂÂ& '
CharEntityFor
ÊÊ 
[
ÊÊ 
$str
ÊÊ 
]
ÊÊ 
=
ÊÊ 
$str
ÊÊ %
;
ÊÊ% &
CharEntityFor
ÁÁ 
[
ÁÁ 
$str
ÁÁ 
]
ÁÁ 
=
ÁÁ 
$str
ÁÁ $
;
ÁÁ$ %
CharEntityFor
ËË 
[
ËË 
$str
ËË 
]
ËË 
=
ËË 
$str
ËË %
;
ËË% &
CharEntityFor
ÈÈ 
[
ÈÈ 
$str
ÈÈ 
]
ÈÈ 
=
ÈÈ 
$str
ÈÈ #
;
ÈÈ# $
CharEntityFor
ÍÍ 
[
ÍÍ 
$str
ÍÍ 
]
ÍÍ 
=
ÍÍ 
$str
ÍÍ #
;
ÍÍ# $
CharEntityFor
ÎÎ 
[
ÎÎ 
$str
ÎÎ 
]
ÎÎ 
=
ÎÎ 
$str
ÎÎ "
;
ÎÎ" #
CharEntityFor
ÏÏ 
[
ÏÏ 
$str
ÏÏ 
]
ÏÏ 
=
ÏÏ 
$str
ÏÏ #
;
ÏÏ# $
CharEntityFor
ÌÌ 
[
ÌÌ 
$str
ÌÌ 
]
ÌÌ 
=
ÌÌ 
$str
ÌÌ #
;
ÌÌ# $
CharEntityFor
ÓÓ 
[
ÓÓ 
$str
ÓÓ 
]
ÓÓ 
=
ÓÓ 
$str
ÓÓ #
;
ÓÓ# $
CharEntityFor
ÔÔ 
[
ÔÔ 
$str
ÔÔ 
]
ÔÔ 
=
ÔÔ 
$str
ÔÔ &
;
ÔÔ& '
CharEntityFor
 
[
 
$str
 
]
 
=
 
$str
 #
;
# $
CharEntityFor
ÚÚ 
[
ÚÚ 
$str
ÚÚ 
]
ÚÚ 
=
ÚÚ 
$str
ÚÚ $
;
ÚÚ$ %
CharEntityFor
ÛÛ 
[
ÛÛ 
$str
ÛÛ 
]
ÛÛ 
=
ÛÛ 
$str
ÛÛ %
;
ÛÛ% &
CharEntityFor
ÙÙ 
[
ÙÙ 
$str
ÙÙ 
]
ÙÙ 
=
ÙÙ 
$str
ÙÙ "
;
ÙÙ" #
CharEntityFor
ıı 
[
ıı 
$str
ıı 
]
ıı 
=
ıı 
$str
ıı %
;
ıı% &
CharEntityFor
ˆˆ 
[
ˆˆ 
$str
ˆˆ 
]
ˆˆ 
=
ˆˆ 
$str
ˆˆ "
;
ˆˆ" #
CharEntityFor
˜˜ 
[
˜˜ 
$str
˜˜ 
]
˜˜ 
=
˜˜ 
$str
˜˜ "
;
˜˜" #
CharEntityFor
¯¯ 
[
¯¯ 
$str
¯¯ 
]
¯¯ 
=
¯¯ 
$str
¯¯ #
;
¯¯# $
CharEntityFor
˘˘ 
[
˘˘ 
$str
˘˘ 
]
˘˘ 
=
˘˘ 
$str
˘˘ #
;
˘˘# $
CharEntityFor
˙˙ 
[
˙˙ 
$str
˙˙ 
]
˙˙ 
=
˙˙ 
$str
˙˙ $
;
˙˙$ %
CharEntityFor
˚˚ 
[
˚˚ 
$str
˚˚ 
]
˚˚ 
=
˚˚ 
$str
˚˚ $
;
˚˚$ %
CharEntityFor
¸¸ 
[
¸¸ 
$str
¸¸ 
]
¸¸ 
=
¸¸ 
$str
¸¸ $
;
¸¸$ %
CharEntityFor
˝˝ 
[
˝˝ 
$str
˝˝ 
]
˝˝ 
=
˝˝ 
$str
˝˝ %
;
˝˝% &
CharEntityFor
˛˛ 
[
˛˛ 
$str
˛˛ 
]
˛˛ 
=
˛˛ 
$str
˛˛ &
;
˛˛& '
CharEntityFor
ˇˇ 
[
ˇˇ 
$str
ˇˇ 
]
ˇˇ 
=
ˇˇ 
$str
ˇˇ $
;
ˇˇ$ %
CharEntityFor
ÄÄ 
[
ÄÄ 
$str
ÄÄ 
]
ÄÄ 
=
ÄÄ 
$str
ÄÄ $
;
ÄÄ$ %
CharEntityFor
ÑÑ 
[
ÑÑ 
$str
ÑÑ 
]
ÑÑ 
=
ÑÑ 
$str
ÑÑ %
;
ÑÑ% &
CharEntityFor
ÖÖ 
[
ÖÖ 
$str
ÖÖ 
]
ÖÖ 
=
ÖÖ 
$str
ÖÖ %
;
ÖÖ% &
CharEntityFor
ÜÜ 
[
ÜÜ 
$str
ÜÜ 
]
ÜÜ 
=
ÜÜ 
$str
ÜÜ &
;
ÜÜ& '
CharEntityFor
áá 
[
áá 
$str
áá 
]
áá 
=
áá 
$str
áá &
;
áá& '
CharEntityFor
àà 
[
àà 
$str
àà 
]
àà 
=
àà 
$str
àà $
;
àà$ %
CharEntityFor
ää 
[
ää 
$str
ää 
]
ää 
=
ää 
$str
ää $
;
ää$ %
CharEntityFor
éé 
[
éé 
$str
éé 
]
éé 
=
éé 
$str
éé #
;
éé# $
CharEntityFor
ëë 
[
ëë 
$str
ëë 
]
ëë 
=
ëë 
$str
ëë &
;
ëë& '
CharEntityFor
ìì 
[
ìì 
$str
ìì 
]
ìì 
=
ìì 
$str
ìì %
;
ìì% &
CharEntityFor
îî 
[
îî 
$str
îî 
]
îî 
=
îî 
$str
îî &
;
îî& '
CharEntityFor
ïï 
[
ïï 
$str
ïï 
]
ïï 
=
ïï 
$str
ïï %
;
ïï% &
}
ññ 
}
óó 
}òò ˇg
yD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\NeatHtml\XssFilterInfo.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
internal   	
class  
 
XssFilterInfo   
{!! 
internal"" 

XssFilterInfo"" 
("" 
string"" 
schemaLocation""  .
)"". /
{## 
XmlDocument$$ 
	schemaDoc$$ 
=$$ 
GetSchemaDoc$$ '
($$' (
schemaLocation$$( 6
)$$6 7
;$$7 8
	XmlReader%% 
schemaReader%% 
=%% 
new%% 
XmlNodeReader%%  -
(%%- .
	schemaDoc%%. 7
)%%7 8
;%%8 9
try&& 
{'' 
Schema(( 

=(( 
	XmlSchema(( 
.(( 
Read(( 
((( 
schemaReader(( (
,((( )
null((* .
)((. /
;((/ 0
})) 
finally** 

{++ 
schemaReader,, 
.,, 
Close,, 
(,, 
),, 
;,, 
}-- 
Schema// 	
.//	 

Compile//
 
(// 
null// 
)// 
;// 
if00 
(00 
Type00 
.00 
GetType00 
(00 
$str00 "
,00" #
false00$ )
)00) *
!=00+ -
null00. 2
)002 3
{11  
UriAndStyleValidator22 
=22 
new22 #
AttributeValueValidator22 6
(226 7
)227 8
;228 9 
UriAndStyleValidator33 
.33 
Add33 
(33 
	schemaDoc33 &
,33& '
Schema33( .
,33. /
$str330 5
,335 6
Schema337 =
.33= >
TargetNamespace33> M
)33M N
;33N O 
UriAndStyleValidator44 
.44 
Add44 
(44 
	schemaDoc44 &
,44& '
Schema44( .
,44. /
$str440 =
,44= >
Schema44? E
.44E F
TargetNamespace44F U
)44U V
;44V W
}77 
}88 
internal:: 
#
AttributeValueValidator:: " 
UriAndStyleValidator::# 7
=::8 9
null::: >
;::> ?
internal<< 

	XmlSchema<< 
Schema<< 
;<< 
internal== 

Regex== 
UriRegex== 
;== 
private?? 	
static??
 
XmlDocument?? 
GetSchemaDoc?? )
(??) *
string??* 0
schemaLocation??1 ?
)??? @
{@@ 
XmlDocumentAA 
schemaAA 
=AA 
newAA 
XmlDocumentAA '
(AA' (
)AA( )
;AA) *
XmlTextReaderBB 
schemaReaderBB 
=BB 
newBB  #
XmlTextReaderBB$ 1
(BB1 2
schemaLocationBB2 @
)BB@ A
;BBA B
tryCC 
{DD 
schemaEE 

.EE
 
LoadEE 
(EE 
schemaReaderEE 
)EE 
;EE 
}FF 
finallyGG 

{HH 
schemaReaderII 
.II 
CloseII 
(II 
)II 
;II 
}JJ 
ifKK 
(KK 
TypeKK 
.KK 
GetTypeKK 
(KK 
$strKK "
,KK" #
falseKK$ )
)KK) *
!=KK+ -
nullKK. 2
)KK2 3
{LL 
PreProcessSchemaDocMM 
(MM 
schemaMM 
,MM 
schemaLocationMM  .
)MM. /
;MM/ 0
}NN 
returnOO 	
schemaOO
 
;OO 
}PP 
privateRR 	
staticRR
 
voidRR 
PreProcessSchemaDocRR )
(RR) *
XmlDocumentRR* 5
schemaRR6 <
,RR< =
stringRR> D
schemaLocationRRE S
)RRS T
{SS 
	HashtableTT 
includedFileNamesTT 
=TT  
newTT! $
	HashtableTT% .
(TT. /
)TT/ 0
;TT0 1
whileUU 
(UU	 

trueUU
 
)UU 
{VV 
XmlNamespaceManagerWW 
nsMgrWW 
=WW 
newWW  #
SystemWW$ *
.WW* +
XmlWW+ .
.WW. /
XmlNamespaceManagerWW/ B
(WWB C
schemaWWC I
.WWI J
	NameTableWWJ S
)WWS T
;WWT U
nsMgrXX 	
.XX	 

AddNamespaceXX
 
(XX 
$strXX 
,XX 
$strXX ?
)XX? @
;XX@ A
XmlNodeListYY 
importsYY 
=YY 
schemaYY  
.YY  ! 
GetElementsByTagNameYY! 5
(YY5 6
$strYY6 A
)YYA B
;YYB C
ifZZ 
(ZZ 
importsZZ 
.ZZ 
CountZZ 
>ZZ 
$numZZ 
)ZZ 
{[[ 

XmlElement\\ 
import\\ 
=\\ 
imports\\  
[\\  !
$num\\! "
]\\" #
as\\$ &

XmlElement\\' 1
;\\1 2
import]] 
.]] 

ParentNode]] 
.]] 
RemoveChild]] "
(]]" #
import]]# )
)]]) *
;]]* +
continue^^ 
;^^ 
}__ 
XmlNodeList`` 
nodes`` 
=`` 
schema`` 
.`` 
SelectNodes`` *
(``* +
$str``+ G
,``G H
nsMgr``I N
)``N O
;``O P
Debugbb 	
.bb	 

	WriteLinebb
 
(bb 
$strbb %
+bb& '
nodesbb( -
.bb- .
Countbb. 3
)bb3 4
;bb4 5

XmlElementcc 
elemcc 
=cc 
nullcc 
;cc 
fordd 
(dd 	
intdd	 
idd 
=dd 
$numdd 
;dd 
idd 
<dd 
nodesdd 
.dd 
Countdd #
;dd# $
idd% &
++dd& (
)dd( )
{ee 
stringff 
inclSchemaLocationff 
=ff  
nodesff! &
[ff& '
iff' (
]ff( )
.ff) *

Attributesff* 4
[ff4 5
$strff5 E
]ffE F
.ffF G
ValueffG L
;ffL M
ifgg 
(gg 	
includedFileNamesgg	 
[gg 
inclSchemaLocationgg -
]gg- .
==gg/ 1
nullgg2 6
)gg6 7
{hh 
includedFileNamesii 
[ii 
inclSchemaLocationii *
]ii* +
=ii, -
inclSchemaLocationii. @
;ii@ A
elemjj 

=jj 
nodesjj 
[jj 
ijj 
]jj 
asjj 

XmlElementjj #
;jj# $
breakkk 
;kk 
}ll 
elsemm 	
{nn 
nodesoo 
[oo 
ioo 
]oo 
.oo 

ParentNodeoo 
.oo 
RemoveChildoo %
(oo% &
nodesoo& +
[oo+ ,
ioo, -
]oo- .
)oo. /
;oo/ 0
}pp 
}qq 
ifss 
(ss 
elemss 
!=ss 
nullss 
)ss 
{tt 
stringuu 
inclSchemaLocationuu 
=uu  
elemuu! %
.uu% &

Attributesuu& 0
[uu0 1
$struu1 A
]uuA B
.uuB C
ValueuuC H
;uuH I
inclSchemaLocationvv 
=vv 
Pathvv 
.vv 
Combinevv &
(vv& '
Pathvv' +
.vv+ ,
GetDirectoryNamevv, <
(vv< =
schemaLocationvv= K
)vvK L
,vvL M
inclSchemaLocationvvN `
)vv` a
;vva b
XmlDocumentww 

inclSchemaww 
=ww 
newww !
XmlDocumentww" -
(ww- .
)ww. /
;ww/ 0
Debugxx 

.xx
 
	WriteLinexx 
(xx 
$strxx !
+xx" #
inclSchemaLocationxx$ 6
)xx6 7
;xx7 8
XmlTextReaderyy 
schemaReaderyy 
=yy  !
newyy" %
XmlTextReaderyy& 3
(yy3 4
inclSchemaLocationyy4 F
)yyF G
;yyG H
tryzz 
{{{ 

inclSchema|| 
.|| 
Load|| 
(|| 
schemaReader|| "
)||" #
;||# $
}}} 
finally~~ 
{ 
schemaReader
ÄÄ 
.
ÄÄ 
Close
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ 
}
ÅÅ 
foreach
ÉÉ 
(
ÉÉ 
XmlNode
ÉÉ 
contentNode
ÉÉ !
in
ÉÉ" $

inclSchema
ÉÉ% /
.
ÉÉ/ 0
DocumentElement
ÉÉ0 ?
.
ÉÉ? @

ChildNodes
ÉÉ@ J
)
ÉÉJ K
{
ÑÑ 
elem
ÖÖ 

.
ÖÖ
 

ParentNode
ÖÖ 
.
ÖÖ 
InsertBefore
ÖÖ "
(
ÖÖ" #
schema
ÖÖ# )
.
ÖÖ) *

ImportNode
ÖÖ* 4
(
ÖÖ4 5
contentNode
ÖÖ5 @
,
ÖÖ@ A
true
ÖÖB F
)
ÖÖF G
,
ÖÖG H
elem
ÖÖI M
)
ÖÖM N
;
ÖÖN O
}
ÜÜ 
if
áá 
(
áá 	
elem
áá	 
.
áá 
Name
áá 
==
áá 
$str
áá #
)
áá# $
{
àà 
Debug
ââ 
.
ââ 
	WriteLine
ââ 
(
ââ 
$str
ââ #
+
ââ$ % 
inclSchemaLocation
ââ& 8
)
ââ8 9
;
ââ9 :
foreach
ää 
(
ää 
XmlNode
ää 
contentNode
ää "
in
ää# %
elem
ää& *
.
ää* +

ChildNodes
ää+ 5
)
ää5 6
{
ãã 
string
åå 
xpath
åå 
=
åå 
null
åå 
;
åå 
XmlNode
çç 
existingNode
çç 
=
çç 
null
çç "
;
çç" #
if
éé 	
(
éé
 
contentNode
éé 
.
éé 
Name
éé 
!=
éé 
null
éé #
&&
éé$ &
contentNode
éé' 2
.
éé2 3

Attributes
éé3 =
!=
éé> @
null
ééA E
&&
èè 

contentNode
èè 
.
èè 

Attributes
èè !
[
èè! "
$str
èè" (
]
èè( )
!=
èè* ,
null
èè- 1
&&
èè2 4
contentNode
èè5 @
.
èè@ A

Attributes
èèA K
[
èèK L
$str
èèL R
]
èèR S
.
èèS T
Value
èèT Y
!=
èèZ \
null
èè] a
)
èèa b
{
êê 
xpath
ëë 
=
ëë 
$str
ëë 
+
ëë 
$str
ëë 
+
ëë 
contentNode
ëë '
.
ëë' (
Name
ëë( ,
+
íí	 

$str
íí 
+
íí 
contentNode
íí $
.
íí$ %

Attributes
íí% /
[
íí/ 0
$str
íí0 6
]
íí6 7
.
íí7 8
Value
íí8 =
+
íí> ?
$str
íí@ E
;
ííE F
existingNode
ìì 
=
ìì 
schema
ìì 
.
ìì 
SelectSingleNode
ìì .
(
ìì. /
xpath
ìì/ 4
,
ìì4 5
nsMgr
ìì6 ;
)
ìì; <
;
ìì< =
}
îî 
if
ïï 	
(
ïï
 
existingNode
ïï 
!=
ïï 
null
ïï 
)
ïï  
{
ññ 
Debug
óó 
.
óó 
	WriteLine
óó 
(
óó 
$str
óó $
+
óó% &
xpath
óó' ,
)
óó, -
;
óó- .
existingNode
òò 
.
òò 

ParentNode
òò 
.
òò  
ReplaceChild
òò  ,
(
òò, -
contentNode
òò- 8
.
òò8 9
	CloneNode
òò9 B
(
òòB C
true
òòC G
)
òòG H
,
òòH I
existingNode
òòJ V
)
òòV W
;
òòW X
}
ôô 
else
öö 
{
õõ 
Debug
úú 
.
úú 
	WriteLine
úú 
(
úú 
$str
úú !
+
úú" #
xpath
úú$ )
)
úú) *
;
úú* +
elem
ùù 
.
ùù 

ParentNode
ùù 
.
ùù 
InsertBefore
ùù $
(
ùù$ %
contentNode
ùù% 0
.
ùù0 1
	CloneNode
ùù1 :
(
ùù: ;
true
ùù; ?
)
ùù? @
,
ùù@ A
elem
ùùB F
)
ùùF G
;
ùùG H
}
ûû 
}
üü 
}
†† 
elem
¢¢ 	
.
¢¢	 


ParentNode
¢¢
 
.
¢¢ 
RemoveChild
¢¢  
(
¢¢  !
elem
¢¢! %
)
¢¢% &
;
¢¢& '
continue
££ 
;
££ 
}
§§ 
break
•• 	
;
••	 

}
¶¶ 
}
≤≤ 
}
≥≥ 
}¥¥ Ê≥
qD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\ResourceHelper.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public 

static 
class 
ResourceHelper &
{ 
private 
static 
readonly 
ILog  $
log% (
=) *

LogManager+ 5
.5 6
	GetLogger6 ?
(? @
typeof@ F
(F G
ResourceHelperG U
)U V
)V W
;W X
public$$ 
static$$ 
CultureInfo$$ !
GetDefaultUICulture$$" 5
($$5 6
)$$6 7
{%% 	
try&& 
{''  
GlobalizationSection** $ 
globalizationSection**% 9
=**: ;
(**< = 
GlobalizationSection**= Q
)**Q R 
ConfigurationManager**R f
.**f g

GetSection**g q
(**q r
$str	**r å
)
**å ç
;
**ç é
if++ 
(++  
globalizationSection++ (
!=++) +
null++, 0
)++0 1
{,, 
if-- 
(--  
globalizationSection-- ,
.--, -
Culture--- 4
.--4 5
Contains--5 =
(--= >
$str--> A
)--A B
)--B C
{.. 
String// 
cultureString// ,
;//, -
cultureString22 %
=22& ' 
globalizationSection22( <
.22< =
Culture22= D
.22D E
	Substring22E N
(22N O 
globalizationSection22O c
.22c d
Culture22d k
.22k l
LastIndexOf22l w
(22w x
$str22x {
)22{ |
+22} ~
$num	22 Ä
,
22Ä Å
(
22Ç É"
globalizationSection
22É ó
.
22ó ò
Culture
22ò ü
.
22ü †
Length
22† ¶
-
22ß ®
(
22© ™"
globalizationSection
22™ æ
.
22æ ø
Culture
22ø ∆
.
22∆ «
LastIndexOf
22« “
(
22“ ”
$str
22” ÷
)
22÷ ◊
+
22ÿ Ÿ
$num
22⁄ €
)
22€ ‹
)
22‹ ›
)
22› ﬁ
;
22ﬁ ﬂ
return33 
new33 "
CultureInfo33# .
(33. /
cultureString33/ <
)33< =
;33= >
}44 
else55 
{66 
return77 
new77 "
CultureInfo77# .
(77. / 
globalizationSection77/ C
.77C D
Culture77D K
)77K L
;77L M
}88 
}99 
}:: 
catch;; 
(;; 
ArgumentException;; $
ex;;% '
);;' (
{<< 
log== 
.== 
Info== 
(== 
$str== =
,=== >
ex==? A
)==A B
;==B C
}>> 
catch?? 
(?? 
System?? 
.?? 
Security?? "
.??" #
SecurityException??# 4
ex??5 7
)??7 8
{@@ 
logAA 
.AA 
InfoAA 
(AA 
$strAA =
,AA= >
exAA? A
)AAA B
;AAB C
}BB 
returnDD 
newDD 
CultureInfoDD "
(DD" #
$strDD# *
)DD* +
;DD+ ,
}EE 	
publicKK 
staticKK 
CultureInfoKK !
GetDefaultCultureKK" 3
(KK3 4
)KK4 5
{LL 	
tryMM 
{NN  
GlobalizationSectionQQ $ 
globalizationSectionQQ% 9
=QQ: ;
(QQ< = 
GlobalizationSectionQQ= Q
)QQQ R 
ConfigurationManagerQQR f
.QQf g

GetSectionQQg q
(QQq r
$str	QQr å
)
QQå ç
;
QQç é
ifRR 
(RR  
globalizationSectionRR (
!=RR) +
nullRR, 0
)RR0 1
{SS 
ifTT 
(TT  
globalizationSectionTT ,
.TT, -
CultureTT- 4
.TT4 5
ContainsTT5 =
(TT= >
$strTT> A
)TTA B
)TTB C
{UU 
StringVV 
cultureStringVV ,
;VV, -
cultureStringYY %
=YY& ' 
globalizationSectionYY( <
.YY< =
CultureYY= D
.YYD E
	SubstringYYE N
(YYN O 
globalizationSectionYYO c
.YYc d
CultureYYd k
.YYk l
IndexOfYYl s
(YYs t
$strYYt w
)YYw x
+YYy z
$numYY{ |
,YY| }
(YY~ !
globalizationSection	YY ì
.
YYì î
Culture
YYî õ
.
YYõ ú
Length
YYú ¢
-
YY£ §
(
YY• ¶"
globalizationSection
YY¶ ∫
.
YY∫ ª
Culture
YYª ¬
.
YY¬ √
IndexOf
YY√  
(
YY  À
$str
YYÀ Œ
)
YYŒ œ
+
YY– —
$num
YY“ ”
)
YY” ‘
)
YY‘ ’
)
YY’ ÷
;
YY÷ ◊
returnZZ 
newZZ "
CultureInfoZZ# .
(ZZ. /
cultureStringZZ/ <
)ZZ< =
;ZZ= >
}[[ 
else\\ 
{]] 
return^^ 
new^^ "
CultureInfo^^# .
(^^. / 
globalizationSection^^/ C
.^^C D
Culture^^D K
)^^K L
;^^L M
}__ 
}`` 
}aa 
catchbb 
(bb 
ArgumentExceptionbb $
exbb% '
)bb' (
{cc 
logdd 
.dd 
Infodd 
(dd 
$strdd =
,dd= >
exdd? A
)ddA B
;ddB C
}ee 
catchff 
(ff 
Systemff 
.ff 
Securityff "
.ff" #
SecurityExceptionff# 4
exff5 7
)ff7 8
{gg 
loghh 
.hh 
Infohh 
(hh 
$strhh =
,hh= >
exhh? A
)hhA B
;hhB C
}ii 
returnkk 
newkk 
CultureInfokk "
(kk" #
$strkk# *
)kk* +
;kk+ ,
}ll 	
publicss 
staticss 
CultureInfoss !
GetCurrencyCulturess" 4
(ss4 5
stringss5 ;
currencyISOCodess< K
)ssK L
{tt 	
ifuu 
(uu 
stringuu 
.uu 
IsNullOrEmptyuu $
(uu$ %
currencyISOCodeuu% 4
)uu4 5
)uu5 6
{uu7 8
returnuu9 ?
ResourceHelperuu@ N
.uuN O
GetDefaultCultureuuO `
(uu` a
)uua b
;uub c
}uud e
CultureInfoxx 
currencyCulturexx '
=xx( )
CurrencyHelperxx* 8
.xx8 9&
CultureInfoFromCurrencyISOxx9 S
(xxS T
currencyISOCodexxT c
)xxc d
;xxd e
ifyy 
(yy 
currencyCultureyy 
!=yy  "
nullyy# '
)yy' (
{yy) *
returnyy+ 1
currencyCultureyy2 A
;yyA B
}yyC D
return|| 
ResourceHelper|| !
.||! "
GetDefaultCulture||" 3
(||3 4
)||4 5
;||5 6
}~~ 	
public
ÄÄ 
static
ÄÄ 
string
ÄÄ 
GetHelpFileText
ÄÄ ,
(
ÄÄ, -
string
ÄÄ- 3
helpKey
ÄÄ4 ;
)
ÄÄ; <
{
ÅÅ 	
if
ÇÇ 
(
ÇÇ 
String
ÇÇ 
.
ÇÇ 
IsNullOrEmpty
ÇÇ $
(
ÇÇ$ %
helpKey
ÇÇ% ,
)
ÇÇ, -
)
ÇÇ- .
return
ÇÇ/ 5
String
ÇÇ6 <
.
ÇÇ< =
Empty
ÇÇ= B
;
ÇÇB C
string
ÑÑ 
fileExtension
ÑÑ  
=
ÑÑ! "
$str
ÑÑ# ,
;
ÑÑ, -
string
ÖÖ 

helpFolder
ÖÖ 
=
ÖÖ 
GetHelpFolder
ÖÖ  -
(
ÖÖ- .
)
ÖÖ. /
;
ÖÖ/ 0
string
ÜÜ 
helpFile
ÜÜ 
;
ÜÜ 
helpFile
áá 
=
áá %
GetFullResourceFilePath
áá .
(
áá. /
CultureInfo
áá/ :
.
áá: ;
CurrentUICulture
áá; K
,
ááK L

helpFolder
ááM W
,
ááW X
helpKey
ááY `
+
ááa b
fileExtension
áác p
)
ááp q
;
ááq r
string
ââ 
message
ââ 
=
ââ 
String
ââ #
.
ââ# $
Empty
ââ$ )
;
ââ) *
if
ää 
(
ää 
File
ää 
.
ää 
Exists
ää 
(
ää 
helpFile
ää $
)
ää$ %
)
ää% &
{
ãã 
FileInfo
åå 
file
åå 
=
åå 
new
åå  #
FileInfo
åå$ ,
(
åå, -
helpFile
åå- 5
)
åå5 6
;
åå6 7
StreamReader
çç 
sr
çç 
=
çç  !
file
çç" &
.
çç& '
OpenText
çç' /
(
çç/ 0
)
çç0 1
;
çç1 2
message
éé 
=
éé 
sr
éé 
.
éé 
	ReadToEnd
éé &
(
éé& '
)
éé' (
;
éé( )
sr
èè 
.
èè 
Close
èè 
(
èè 
)
èè 
;
èè 
}
êê 
return
ëë 
message
ëë 
;
ëë 
}
íí 	
public
îî 
static
îî 
void
îî 
SetHelpFileText
îî *
(
îî* +
String
îî+ 1
helpKey
îî2 9
,
îî9 :
String
îî; A
helpText
îîB J
)
îîJ K
{
ïï 	
if
ññ 
(
ññ 
String
ññ 
.
ññ 
IsNullOrEmpty
ññ $
(
ññ$ %
helpKey
ññ% ,
)
ññ, -
||
ññ. 0
String
ññ1 7
.
ññ7 8
IsNullOrEmpty
ññ8 E
(
ññE F
helpText
ññF N
)
ññN O
)
ññO P
return
ññQ W
;
ññW X
string
òò 
culture
òò 
=
òò 
CultureInfo
òò (
.
òò( )
CurrentUICulture
òò) 9
.
òò9 :
Name
òò: >
;
òò> ?
string
ôô 
fileExtension
ôô  
=
ôô! "
$str
ôô# ,
;
ôô, -
string
öö 

helpFolder
öö 
=
öö 
GetHelpFolder
öö  -
(
öö- .
)
öö. /
;
öö/ 0
string
õõ 
helpFile
õõ 
;
õõ 
helpFile
úú 
=
úú 

helpFolder
úú !
+
úú" #
culture
úú$ +
+
úú, -
$str
úú. 1
+
úú2 3
helpKey
úú4 ;
+
úú< =
fileExtension
úú> K
;
úúK L
StreamWriter
ûû 
streamWriter
ûû %
=
ûû& '
File
ûû( ,
.
ûû, -

CreateText
ûû- 7
(
ûû7 8
helpFile
ûû8 @
)
ûû@ A
;
ûûA B
streamWriter
üü 
.
üü 
Write
üü 
(
üü 
helpText
üü '
)
üü' (
;
üü( )
streamWriter
†† 
.
†† 
Close
†† 
(
†† 
)
††  
;
††  !
}
°° 	
public
££ 
static
££ 
String
££ 
GetHelpFolder
££ *
(
££* +
)
££+ ,
{
§§ 	
if
•• 
(
•• 
HttpContext
•• 
.
•• 
Current
•• #
==
••$ &
null
••' +
)
••+ ,
return
••- 3
String
••4 :
.
••: ;
Empty
••; @
;
••@ A
return
¶¶ 
HttpContext
¶¶ 
.
¶¶ 
Current
¶¶ &
.
¶¶& '
Server
¶¶' -
.
¶¶- .
MapPath
¶¶. 5
(
¶¶5 6
WebUtils
¶¶6 >
.
¶¶> ? 
GetApplicationRoot
¶¶? Q
(
¶¶Q R
)
¶¶R S
+
ßß 
$str
ßß '
)
ßß' (
+
ßß) *
Path
ßß+ /
.
ßß/ 0$
DirectorySeparatorChar
ßß0 F
;
ßßF G
}
®® 	
public
™™ 
static
™™ 
string
™™ %
GetFullResourceFilePath
™™ 4
(
™™4 5
CultureInfo
™™5 @
cultureInfo
™™A L
,
™™L M
string
™™N T
folder
™™U [
,
™™[ \
string
™™] c
filename
™™d l
)
™™l m
{
´´ 	
string
¨¨ 
path
¨¨ 
=
¨¨ !
GetResourceFilePath
¨¨ -
(
¨¨- .
cultureInfo
¨¨. 9
,
¨¨9 :
folder
¨¨; A
,
¨¨A B
filename
¨¨C K
)
¨¨K L
;
¨¨L M
return
≠≠ 
string
ÆÆ 
.
ÆÆ 
IsNullOrEmpty
ÆÆ $
(
ÆÆ$ %
path
ÆÆ% )
)
ÆÆ) *
?
ÆÆ+ ,
string
ØØ 
.
ØØ 
Format
ØØ 
(
ØØ 
$str
ØØ *
,
ØØ* +
folder
ØØ, 2
,
ØØ2 3
$str
ØØ4 ;
,
ØØi j
filename
ØØk s
)
ØØs t
:
ØØu v
path
∞∞ 
;
∞∞ 
}
±± 	
public
≥≥ 
static
≥≥ 
string
≥≥ !
GetResourceFilePath
≥≥ 0
(
≥≥0 1
CultureInfo
≥≥1 <
curltureInfo
≥≥= I
,
≥≥I J
string
≥≥K Q
folder
≥≥R X
,
≥≥X Y
string
≥≥Z `
filename
≥≥a i
)
≥≥i j
{
¥¥ 	
if
µµ 
(
µµ 
curltureInfo
µµ 
==
µµ 
null
µµ  $
||
µµ% '
curltureInfo
µµ( 4
.
µµ4 5
LCID
µµ5 9
.
µµ9 :
Equals
µµ: @
(
µµ@ A
CultureInfo
µµA L
.
µµL M
InvariantCulture
µµM ]
.
µµ] ^
LCID
µµ^ b
)
µµb c
)
µµc d
return
∂∂ 
string
∂∂ 
.
∂∂ 
Empty
∂∂ #
;
∂∂# $
string
∏∏ 
path
∏∏ 
=
∏∏ 
string
∏∏  
.
∏∏  !
Format
∏∏! '
(
∏∏' (
$str
∏∏( 4
,
∏∏4 5
folder
∏∏6 <
,
∏∏< =
curltureInfo
∏∏> J
.
∏∏J K
Name
∏∏K O
,
∏∏O P
filename
∏∏Q Y
)
∏∏Y Z
;
∏∏Z [
if
∫∫ 
(
∫∫ 
File
∫∫ 
.
∫∫ 
Exists
∫∫ 
(
∫∫ 
path
∫∫  
)
∫∫  !
)
∫∫! "
{
ªª 
return
ºº 
path
ºº 
;
ºº 
}
ΩΩ 
path
¿¿ 
=
¿¿ 
string
¿¿ 
.
¿¿ 
Format
¿¿  
(
¿¿  !
$str
¿¿! -
,
¿¿- .
folder
¿¿/ 5
,
¿¿5 6
$str
¿¿7 >
,
¿¿> ?
filename
¿¿@ H
)
¿¿H I
;
¿¿I J
return
¡¡ 
path
¡¡ 
;
¡¡ 
}
ƒƒ 	
public
   
static
   
string
    
GetMessageTemplate
   /
(
  / 0
string
  0 6
templateFile
  7 C
)
  C D
{
ÀÀ 	
return
ÃÃ  
GetMessageTemplate
ÃÃ %
(
ÃÃ% &
CultureInfo
ÃÃ& 1
.
ÃÃ1 2
CurrentUICulture
ÃÃ2 B
,
ÃÃB C
templateFile
ÃÃD P
)
ÃÃP Q
;
ÃÃQ R
}
ÕÕ 	
public
œœ 
static
œœ 
string
œœ  
GetMessageTemplate
œœ /
(
œœ/ 0
CultureInfo
œœ0 ;
cultureInfo
œœ< G
,
œœG H
string
œœI O
templateFile
œœP \
)
œœ\ ]
{
–– 	
if
—— 
(
—— 
String
—— 
.
—— 
IsNullOrEmpty
—— $
(
——$ %
templateFile
——% 1
)
——1 2
)
——2 3
return
——4 :
String
——; A
.
——A B
Empty
——B G
;
——G H
string
”” 
templateFolder
”” !
=
””" #&
GetMessageTemplateFolder
””$ <
(
””< =
)
””= >
;
””> ?
string
‘‘ 
messageFile
‘‘ 
;
‘‘ 
messageFile
÷÷ 
=
÷÷ %
GetFullResourceFilePath
÷÷ 1
(
÷÷1 2
cultureInfo
÷÷2 =
,
÷÷= >
templateFolder
÷÷? M
,
÷÷M N
templateFile
÷÷O [
)
÷÷[ \
;
÷÷\ ]
if
ÿÿ 
(
ÿÿ 
File
ÿÿ 
.
ÿÿ 
Exists
ÿÿ 
(
ÿÿ 
messageFile
ÿÿ '
)
ÿÿ' (
)
ÿÿ( )
{
ŸŸ 
string
⁄⁄ 
message
⁄⁄ 
=
⁄⁄  
File
⁄⁄! %
.
⁄⁄% &
ReadAllText
⁄⁄& 1
(
⁄⁄1 2
messageFile
⁄⁄2 =
)
⁄⁄= >
;
⁄⁄> ?
return
‹‹ 
message
‹‹ 
;
‹‹ 
}
›› 
else
ﬁﬁ 
{
ﬂﬂ 
return
‡‡ 
string
‡‡ 
.
‡‡ 
Empty
‡‡ #
;
‡‡# $
}
·· 
}
‚‚ 	
public
˙˙ 
static
˙˙ 
String
˙˙ &
GetMessageTemplateFolder
˙˙ 5
(
˙˙5 6
)
˙˙6 7
{
˚˚ 	
if
¸¸ 
(
¸¸ 
HttpContext
¸¸ 
.
¸¸ 
Current
¸¸ #
==
¸¸$ &
null
¸¸' +
)
¸¸+ ,
return
¸¸- 3
String
¸¸4 :
.
¸¸: ;
Empty
¸¸; @
;
¸¸@ A
return
˝˝ 
HttpContext
˝˝ 
.
˝˝ 
Current
˝˝ &
.
˝˝& '
Server
˝˝' -
.
˝˝- .
MapPath
˝˝. 5
(
˝˝5 6
WebUtils
˝˝6 >
.
˝˝> ? 
GetApplicationRoot
˝˝? Q
(
˝˝Q R
)
˝˝R S
+
˛˛ 
$str
˛˛ .
)
˛˛. /
+
˛˛0 1
Path
˛˛2 6
.
˛˛6 7$
DirectorySeparatorChar
˛˛7 M
;
˛˛M N
}
ˇˇ 	
public
ÑÑ 
static
ÑÑ 
string
ÑÑ 
GetResourceString
ÑÑ .
(
ÑÑ. /
string
ÖÖ 
resourceFile
ÖÖ 
,
ÖÖ  
string
ÜÜ 
resourceKey
ÜÜ 
)
ÜÜ 
{
áá 	
bool
àà  
useConfigOverrides
àà #
=
àà$ %
false
àà& +
;
àà+ ,
return
ää 
GetResourceString
ää $
(
ää$ %
resourceFile
ää% 1
,
ää1 2
resourceKey
ää3 >
,
ää> ? 
useConfigOverrides
ää@ R
)
ääR S
;
ääS T
}
åå 	
public
éé 
static
éé 
string
éé 
GetResourceString
éé .
(
éé. /
string
èè 
resourceFile
èè 
,
èè  
string
êê 
resourceKey
êê 
,
êê 
bool
ëë  
useConfigOverrides
ëë #
)
ëë# $
{
íí 	
return
ìì 
GetResourceString
ìì $
(
ìì$ %
resourceFile
îî 
,
îî 
resourceKey
ïï 
,
ïï 
null
ññ 
,
ññ  
useConfigOverrides
óó "
)
óó" #
;
óó# $
}
ôô 	
public
õõ 
static
õõ 
string
õõ 
GetResourceString
õõ .
(
õõ. /
string
úú 
resourceFile
úú 
,
úú  
string
ùù 
resourceKey
ùù 
,
ùù 
CultureInfo
ûû 
culture
ûû 
,
ûû  
bool
üü  
useConfigOverrides
üü #
)
üü# $
{
†† 	
if
°° 
(
°° 
HttpContext
°° 
.
°° 
Current
°° #
==
°°$ &
null
°°' +
)
°°+ ,
return
°°- 3
resourceKey
°°4 ?
;
°°? @
if
¢¢ 
(
¢¢ 
resourceFile
¢¢ 
.
¢¢ 
Length
¢¢ #
==
¢¢$ &
$num
¢¢' (
)
¢¢( )
resourceFile
¢¢* 6
=
¢¢7 8
$str
¢¢9 C
;
¢¢C D
if
§§ 
(
§§ "
ConfigurationManager
§§ $
.
§§$ %
AppSettings
§§% 0
[
§§0 1
resourceKey
§§1 <
]
§§< =
!=
§§> @
null
§§A E
)
§§E F
{
•• 
return
¶¶ "
ConfigurationManager
¶¶ +
.
¶¶+ ,
AppSettings
¶¶, 7
[
¶¶7 8
resourceKey
¶¶8 C
]
¶¶C D
;
¶¶D E
}
ßß 
try
©© 
{
™™ 
object
´´ 
resource
´´ 
;
´´  
if
¨¨ 
(
¨¨ 
culture
¨¨ 
!=
¨¨ 
null
¨¨ #
)
¨¨# $
{
≠≠ 
resource
ÆÆ 
=
ÆÆ 
HttpContext
ÆÆ *
.
ÆÆ* +%
GetGlobalResourceObject
ÆÆ+ B
(
ÆÆB C
resourceFile
ÆÆC O
,
ÆÆO P
resourceKey
ÆÆQ \
,
ÆÆ\ ]
culture
ÆÆ^ e
)
ÆÆe f
;
ÆÆf g
}
ØØ 
else
∞∞ 
{
±± 
resource
≤≤ 
=
≤≤ 
HttpContext
≤≤ *
.
≤≤* +%
GetGlobalResourceObject
≤≤+ B
(
≤≤B C
resourceFile
≤≤C O
,
≤≤O P
resourceKey
≤≤Q \
)
≤≤\ ]
;
≤≤] ^
}
≥≥ 
if
µµ 
(
µµ 
resource
µµ 
!=
µµ 
null
µµ  $
)
µµ$ %
return
µµ& ,
resource
µµ- 5
.
µµ5 6
ToString
µµ6 >
(
µµ> ?
)
µµ? @
;
µµ@ A
}
∂∂ 
catch
∑∑ 
{
∑∑ 
}
∑∑ 
return
ππ 
resourceKey
ππ 
;
ππ 
}
ªª 	
public
ΩΩ 
static
ΩΩ 
string
ΩΩ $
FormatCategoryLinkText
ΩΩ 3
(
ΩΩ3 4
string
ΩΩ4 :
category
ΩΩ; C
,
ΩΩC D
int
ΩΩE H
	postCount
ΩΩI R
)
ΩΩR S
{
ææ 	
if
øø 
(
øø 
CultureInfo
øø 
.
øø 
CurrentUICulture
øø ,
.
øø, -
TextInfo
øø- 5
.
øø5 6
IsRightToLeft
øø6 C
)
øøC D
{
¿¿ 
return
¡¡ 
$str
¡¡ 
+
¡¡ 
	postCount
¡¡ &
.
¡¡& '
ToString
¡¡' /
(
¡¡/ 0
)
¡¡0 1
+
¡¡2 3
$str
¡¡4 8
+
¡¡9 :
category
¡¡; C
;
¡¡C D
}
¬¬ 
return
ƒƒ 
category
ƒƒ 
+
ƒƒ 
$str
ƒƒ "
+
ƒƒ# $
	postCount
ƒƒ% .
.
ƒƒ. /
ToString
ƒƒ/ 7
(
ƒƒ7 8
)
ƒƒ8 9
+
ƒƒ: ;
$str
ƒƒ< ?
;
ƒƒ? @
}
«« 	
}
…… 
}   ∞
zD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\Properties\AssemblyInfo.cs
[		 
assembly		 	
:			 

AssemblyTitle		 
(		 
$str		 3
)		3 4
]		4 5
[

 
assembly

 	
:

	 

AssemblyDescription

 
(

 
$str

 !
)

! "
]

" #
[ 
assembly 	
:	 
!
AssemblyConfiguration  
(  !
$str! #
)# $
]$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str 5
)5 6
]6 7
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *
[%% 
assembly%% 	
:%%	 

CLSCompliant%% 
(%% 
true%% 
)%% 
]%% ƒì
tD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\ScriptDeferFilter.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public 

class 
ScriptDeferFilter "
:# $
Stream% +
{ 
Stream 
responseStream 
; 
long 
position 
; 
bool!! 
captureScripts!! 
;!! 
StringBuilder'' 
scriptBlocks'' "
;''" #
Encoding)) 
encoding)) 
;)) 
char00 
[00 
]00 
pendingBuffer00 
=00 
null00 #
;00# $
bool77 !
lastScriptTagIsPinned77 "
=77# $
false77% *
;77* +
bool<< 
scriptTagStarted<< 
=<< 
false<<  %
;<<% &
boolEE $
useHackyScriptExceptionsEE %
=EE& '
falseEE( -
;EE- .
publicGG 
ScriptDeferFilterGG  
(GG  !
HttpResponseGG! -
responseGG. 6
)GG6 7
{HH 	
thisII 
.II 
encodingII 
=II 
responseII $
.II$ %
OutputII% +
.II+ ,
EncodingII, 4
;II4 5
thisJJ 
.JJ 
responseStreamJJ 
=JJ  !
responseJJ" *
.JJ* +
FilterJJ+ 1
;JJ1 2
thisLL 
.LL 
scriptBlocksLL 
=LL 
newLL  #
StringBuilderLL$ 1
(LL1 2
$numLL2 6
)LL6 7
;LL7 8
thisNN 
.NN 
captureScriptsNN 
=NN  !
trueNN" &
;NN& '
thisOO 
.OO $
useHackyScriptExceptionsOO )
=OO* +
ConfigHelperOO, 8
.OO8 9
GetBoolPropertyOO9 H
(OOH I
$strOOI 
,	OO Ä
this
OOÅ Ö
.
OOÖ Ü&
useHackyScriptExceptions
OOÜ û
)
OOû ü
;
OOü †
}PP 	
publicSS 
overrideSS 
boolSS 
CanReadSS $
{TT 	
getUU 
{UU 
returnUU 
falseUU 
;UU 
}UU  !
}VV 	
publicXX 
overrideXX 
boolXX 
CanSeekXX $
{YY 	
getZZ 
{ZZ 
returnZZ 
falseZZ 
;ZZ 
}ZZ  !
}[[ 	
public]] 
override]] 
bool]] 
CanWrite]] %
{^^ 	
get__ 
{__ 
return__ 
true__ 
;__ 
}__  
}`` 	
publicbb 
overridebb 
voidbb 
Closebb "
(bb" #
)bb# $
{cc 	
thisdd 
.dd 
FlushPendingBufferdd #
(dd# $
)dd$ %
;dd% &
responseStreamee 
.ee 
Closeee  
(ee  !
)ee! "
;ee" #
}ff 	
privatehh 
voidhh 
FlushPendingBufferhh '
(hh' (
)hh( )
{ii 	
ifkk 
(kk 
nullkk 
!=kk 
thiskk 
.kk 
pendingBufferkk *
)kk* +
{ll 
thismm 
.mm 
WriteOutputmm  
(mm  !
thismm! %
.mm% &
pendingBuffermm& 3
,mm3 4
$nummm5 6
,mm6 7
thismm8 <
.mm< =
pendingBuffermm= J
.mmJ K
LengthmmK Q
)mmQ R
;mmR S
thisnn 
.nn 
pendingBuffernn "
=nn# $
nullnn% )
;nn) *
}oo 
}qq 	
publicss 
overridess 
voidss 
Flushss "
(ss" #
)ss# $
{tt 	
thisuu 
.uu 
FlushPendingBufferuu #
(uu# $
)uu$ %
;uu% &
responseStreamvv 
.vv 
Flushvv  
(vv  !
)vv! "
;vv" #
}ww 	
publicyy 
overrideyy 
longyy 
Lengthyy #
{zz 	
get{{ 
{{{ 
return{{ 
$num{{ 
;{{ 
}{{ 
}|| 	
public~~ 
override~~ 
long~~ 
Position~~ %
{ 	
get
ÄÄ 
{
ÄÄ 
return
ÄÄ 
position
ÄÄ !
;
ÄÄ! "
}
ÄÄ# $
set
ÅÅ 
{
ÅÅ 
position
ÅÅ 
=
ÅÅ 
value
ÅÅ "
;
ÅÅ" #
}
ÅÅ$ %
}
ÇÇ 	
public
ÑÑ 
override
ÑÑ 
long
ÑÑ 
Seek
ÑÑ !
(
ÑÑ! "
long
ÑÑ" &
offset
ÑÑ' -
,
ÑÑ- .

SeekOrigin
ÑÑ/ 9
origin
ÑÑ: @
)
ÑÑ@ A
{
ÖÖ 	
return
ÜÜ 
responseStream
ÜÜ !
.
ÜÜ! "
Seek
ÜÜ" &
(
ÜÜ& '
offset
ÜÜ' -
,
ÜÜ- .
origin
ÜÜ/ 5
)
ÜÜ5 6
;
ÜÜ6 7
}
áá 	
public
ââ 
override
ââ 
void
ââ 
	SetLength
ââ &
(
ââ& '
long
ââ' +
length
ââ, 2
)
ââ2 3
{
ää 	
responseStream
ãã 
.
ãã 
	SetLength
ãã $
(
ãã$ %
length
ãã% +
)
ãã+ ,
;
ãã, -
}
åå 	
public
éé 
override
éé 
int
éé 
Read
éé  
(
éé  !
byte
éé! %
[
éé% &
]
éé& '
buffer
éé( .
,
éé. /
int
éé0 3
offset
éé4 :
,
éé: ;
int
éé< ?
count
éé@ E
)
ééE F
{
èè 	
return
êê 
responseStream
êê !
.
êê! "
Read
êê" &
(
êê& '
buffer
êê' -
,
êê- .
offset
êê/ 5
,
êê5 6
count
êê7 <
)
êê< =
;
êê= >
}
ëë 	
public
îî 
override
îî 
void
îî 
Write
îî "
(
îî" #
byte
îî# '
[
îî' (
]
îî( )
buffer
îî* 0
,
îî0 1
int
îî2 5
offset
îî6 <
,
îî< =
int
îî> A
count
îîB G
)
îîG H
{
ïï 	
if
óó 
(
óó 
!
óó 
this
óó 
.
óó 
captureScripts
óó $
)
óó$ %
{
òò 
this
ôô 
.
ôô 
responseStream
ôô #
.
ôô# $
Write
ôô$ )
(
ôô) *
buffer
ôô* 0
,
ôô0 1
offset
ôô2 8
,
ôô8 9
count
ôô: ?
)
ôô? @
;
ôô@ A
return
öö 
;
öö 
}
õõ 
char
≠≠ 
[
≠≠ 
]
≠≠ 
content
≠≠ 
;
≠≠ 
char
ÆÆ 
[
ÆÆ 
]
ÆÆ 

charBuffer
ÆÆ 
=
ÆÆ 
this
ÆÆ  $
.
ÆÆ$ %
encoding
ÆÆ% -
.
ÆÆ- .
GetChars
ÆÆ. 6
(
ÆÆ6 7
buffer
ÆÆ7 =
,
ÆÆ= >
offset
ÆÆ? E
,
ÆÆE F
count
ÆÆG L
)
ÆÆL M
;
ÆÆM N
if
¥¥ 
(
¥¥ 
null
¥¥ 
!=
¥¥ 
this
¥¥ 
.
¥¥ 
pendingBuffer
¥¥ *
)
¥¥* +
{
µµ 
content
∂∂ 
=
∂∂ 
new
∂∂ 
char
∂∂ "
[
∂∂" #

charBuffer
∂∂# -
.
∂∂- .
Length
∂∂. 4
+
∂∂5 6
this
∂∂7 ;
.
∂∂; <
pendingBuffer
∂∂< I
.
∂∂I J
Length
∂∂J P
]
∂∂P Q
;
∂∂Q R
Array
∑∑ 
.
∑∑ 
Copy
∑∑ 
(
∑∑ 
this
∑∑ 
.
∑∑  
pendingBuffer
∑∑  -
,
∑∑- .
$num
∑∑/ 0
,
∑∑0 1
content
∑∑2 9
,
∑∑9 :
$num
∑∑; <
,
∑∑< =
this
∑∑> B
.
∑∑B C
pendingBuffer
∑∑C P
.
∑∑P Q
Length
∑∑Q W
)
∑∑W X
;
∑∑X Y
Array
∏∏ 
.
∏∏ 
Copy
∏∏ 
(
∏∏ 

charBuffer
∏∏ %
,
∏∏% &
$num
∏∏' (
,
∏∏( )
content
∏∏* 1
,
∏∏1 2
this
∏∏3 7
.
∏∏7 8
pendingBuffer
∏∏8 E
.
∏∏E F
Length
∏∏F L
,
∏∏L M

charBuffer
∏∏N X
.
∏∏X Y
Length
∏∏Y _
)
∏∏_ `
;
∏∏` a
this
ππ 
.
ππ 
pendingBuffer
ππ "
=
ππ# $
null
ππ% )
;
ππ) *
}
∫∫ 
else
ªª 
{
ºº 
content
ΩΩ 
=
ΩΩ 

charBuffer
ΩΩ $
;
ΩΩ$ %
}
ææ 
int
¿¿ 
scriptTagStart
¿¿ 
=
¿¿  
$num
¿¿! "
;
¿¿" #
int
¡¡ 
lastScriptTagEnd
¡¡  
=
¡¡! "
$num
¡¡# $
;
¡¡$ %
int
√√ 
pos
√√ 
;
√√ 
for
ƒƒ 
(
ƒƒ 
pos
ƒƒ 
=
ƒƒ 
$num
ƒƒ 
;
ƒƒ 
pos
ƒƒ 
<
ƒƒ 
content
ƒƒ  '
.
ƒƒ' (
Length
ƒƒ( .
;
ƒƒ. /
pos
ƒƒ0 3
++
ƒƒ3 5
)
ƒƒ5 6
{
≈≈ 
char
«« 
c
«« 
=
«« 
content
««  
[
««  !
pos
««! $
]
««$ %
;
««% &
if
»» 
(
»» 
c
»» 
==
»» 
$char
»» 
)
»» 
{
…… 
if
““ 
(
““ 
pos
““ 
+
““ 
$str
““ *
.
““* +
Length
““+ 1
>
““2 3
content
““4 ;
.
““; <
Length
““< B
)
““B C
{
”” 
this
◊◊ 
.
◊◊ 
pendingBuffer
◊◊ *
=
◊◊+ ,
new
◊◊- 0
char
◊◊1 5
[
◊◊5 6
content
◊◊6 =
.
◊◊= >
Length
◊◊> D
-
◊◊E F
pos
◊◊G J
]
◊◊J K
;
◊◊K L
Array
ÿÿ 
.
ÿÿ 
Copy
ÿÿ "
(
ÿÿ" #
content
ÿÿ# *
,
ÿÿ* +
pos
ÿÿ, /
,
ÿÿ/ 0
this
ÿÿ1 5
.
ÿÿ5 6
pendingBuffer
ÿÿ6 C
,
ÿÿC D
$num
ÿÿE F
,
ÿÿF G
content
ÿÿH O
.
ÿÿO P
Length
ÿÿP V
-
ÿÿW X
pos
ÿÿY \
)
ÿÿ\ ]
;
ÿÿ] ^
break
ŸŸ 
;
ŸŸ 
}
⁄⁄ 
int
‹‹ 
tagStart
‹‹  
=
‹‹! "
pos
‹‹# &
;
‹‹& '
if
ﬂﬂ 
(
ﬂﬂ 
content
ﬂﬂ 
[
ﬂﬂ  
pos
ﬂﬂ  #
+
ﬂﬂ$ %
$num
ﬂﬂ& '
]
ﬂﬂ' (
==
ﬂﬂ) +
$char
ﬂﬂ, /
)
ﬂﬂ/ 0
{
‡‡ 
pos
·· 
+=
·· 
$num
··  
;
··  !
if
‰‰ 
(
‰‰ 
isScriptTag
‰‰ '
(
‰‰' (
content
‰‰( /
,
‰‰/ 0
pos
‰‰1 4
)
‰‰4 5
)
‰‰5 6
{
ÂÂ 
if
ÊÊ 
(
ÊÊ  
this
ÊÊ  $
.
ÊÊ$ %#
lastScriptTagIsPinned
ÊÊ% :
)
ÊÊ: ;
{
ÁÁ 
this
ÈÈ  $
.
ÈÈ$ %#
lastScriptTagIsPinned
ÈÈ% :
=
ÈÈ; <
false
ÈÈ= B
;
ÈÈB C
pos
ÏÏ  #
++
ÏÏ# %
;
ÏÏ% &
}
ÌÌ 
else
ÓÓ  
{
ÔÔ 
pos
ÛÛ  #
=
ÛÛ$ %
pos
ÛÛ& )
+
ÛÛ* +
$str
ÛÛ, 5
.
ÛÛ5 6
Length
ÛÛ6 <
;
ÛÛ< =
scriptBlocks
ıı  ,
.
ıı, -
Append
ıı- 3
(
ıı3 4
content
ıı4 ;
,
ıı; <
scriptTagStart
ıı= K
,
ııK L
pos
ııM P
-
ııQ R
scriptTagStart
ııS a
)
ııa b
;
ııb c
scriptBlocks
ˆˆ  ,
.
ˆˆ, -
Append
ˆˆ- 3
(
ˆˆ3 4
Environment
ˆˆ4 ?
.
ˆˆ? @
NewLine
ˆˆ@ G
)
ˆˆG H
;
ˆˆH I
lastScriptTagEnd
¯¯  0
=
¯¯1 2
pos
¯¯3 6
;
¯¯6 7
scriptTagStarted
˘˘  0
=
˘˘1 2
false
˘˘3 8
;
˘˘8 9
pos
˚˚  #
--
˚˚# %
;
˚˚% &
continue
¸¸  (
;
¸¸( )
}
˝˝ 
}
˛˛ 
else
ˇˇ 
if
ˇˇ 
(
ˇˇ  !
	isBodyTag
ˇˇ! *
(
ˇˇ* +
content
ˇˇ+ 2
,
ˇˇ2 3
pos
ˇˇ4 7
)
ˇˇ7 8
)
ˇˇ8 9
{
ÄÄ 
if
ÑÑ 
(
ÑÑ  
this
ÑÑ  $
.
ÑÑ$ %
scriptBlocks
ÑÑ% 1
.
ÑÑ1 2
Length
ÑÑ2 8
>
ÑÑ9 :
$num
ÑÑ; <
)
ÑÑ< =
{
ÖÖ 
this
áá  $
.
áá$ %
WriteOutput
áá% 0
(
áá0 1
content
áá1 8
,
áá8 9
lastScriptTagEnd
áá: J
,
ááJ K
tagStart
ááL T
-
ááU V
lastScriptTagEnd
ááW g
)
áág h
;
ááh i
this
ää  $
.
ää$ %#
RenderAllScriptBlocks
ää% :
(
ää: ;
)
ää; <
;
ää< =
this
çç  $
.
çç$ %
captureScripts
çç% 3
=
çç4 5
false
çç6 ;
;
çç; <
this
ëë  $
.
ëë$ %
WriteOutput
ëë% 0
(
ëë0 1
content
ëë1 8
,
ëë8 9
tagStart
ëë: B
,
ëëB C
content
ëëD K
.
ëëK L
Length
ëëL R
-
ëëS T
tagStart
ëëU ]
)
ëë] ^
;
ëë^ _
return
íí  &
;
íí& '
}
ìì 
}
îî 
else
ïï 
{
ññ 
pos
ôô 
++
ôô !
;
ôô! "
}
öö 
}
õõ 
else
úú 
{
ùù 
if
üü 
(
üü 
isScriptTag
üü '
(
üü' (
content
üü( /
,
üü/ 0
pos
üü1 4
+
üü5 6
$num
üü7 8
)
üü8 9
)
üü9 :
{
†† 
if
££ 
(
££  &
useHackyScriptExceptions
££  8
)
££8 9
{
§§ 
int
´´  #
charsToSkip
´´$ /
=
´´0 1
$num
´´2 3
;
´´3 4
if
¨¨  "
(
¨¨# $!
ShouldNotMoveScript
¨¨$ 7
(
¨¨7 8
content
¨¨8 ?
,
¨¨? @
pos
¨¨A D
,
¨¨D E
out
¨¨F I
charsToSkip
¨¨J U
)
¨¨U V
)
¨¨V W
{
≠≠  !#
lastScriptTagIsPinned
ÆÆ$ 9
=
ÆÆ: ;
true
ÆÆ< @
;
ÆÆ@ A
pos
ØØ$ '
+=
ØØ( *
charsToSkip
ØØ+ 6
;
ØØ6 7
continue
∞∞$ ,
;
∞∞, -
}
±±  !
}
≤≤ 
this
∑∑  
.
∑∑  !#
lastScriptTagIsPinned
∑∑! 6
=
∑∑7 8
isPinned
∑∑9 A
(
∑∑A B
content
∑∑B I
,
∑∑I J
pos
∑∑K N
+
∑∑O P
$num
∑∑Q R
)
∑∑R S
;
∑∑S T
if
ππ 
(
ππ  
!
ππ  !
this
ππ! %
.
ππ% &#
lastScriptTagIsPinned
ππ& ;
)
ππ; <
{
∫∫ 
scriptTagStart
ææ  .
=
ææ/ 0
pos
ææ1 4
;
ææ4 5
this
¡¡  $
.
¡¡$ %
WriteOutput
¡¡% 0
(
¡¡0 1
content
¡¡1 8
,
¡¡8 9
lastScriptTagEnd
¡¡: J
,
¡¡J K
scriptTagStart
¡¡L Z
-
¡¡[ \
lastScriptTagEnd
¡¡] m
)
¡¡m n
;
¡¡n o
pos
≈≈  #
+=
≈≈$ &
$num
≈≈' (
;
≈≈( )
scriptTagStarted
««  0
=
««1 2
true
««3 7
;
««7 8
}
»» 
else
……  
{
   
pos
ÀÀ  #
++
ÀÀ# %
;
ÀÀ% &
}
ÃÃ 
}
ÕÕ 
else
ŒŒ 
{
œœ 
pos
”” 
++
”” !
;
””! "
}
‘‘ 
}
’’ 
}
÷÷ 
}
ÿÿ 
if
‹‹ 
(
‹‹ 
scriptTagStarted
‹‹  
)
‹‹  !
{
›› 
this
ﬁﬁ 
.
ﬁﬁ 
scriptBlocks
ﬁﬁ !
.
ﬁﬁ! "
Append
ﬁﬁ" (
(
ﬁﬁ( )
content
ﬁﬁ) 0
,
ﬁﬁ0 1
scriptTagStart
ﬁﬁ2 @
,
ﬁﬁ@ A
pos
ﬁﬁB E
-
ﬁﬁF G
scriptTagStart
ﬁﬁH V
)
ﬁﬁV W
;
ﬁﬁW X
}
ﬂﬂ 
else
‡‡ 
{
·· 
this
„„ 
.
„„ 
WriteOutput
„„  
(
„„  !
content
„„! (
,
„„( )
lastScriptTagEnd
„„* :
,
„„: ;
pos
„„< ?
-
„„@ A
lastScriptTagEnd
„„B R
)
„„R S
;
„„S T
}
‰‰ 
}
ÂÂ 	
private
ÍÍ 
void
ÍÍ #
RenderAllScriptBlocks
ÍÍ *
(
ÍÍ* +
)
ÍÍ+ ,
{
ÎÎ 	
string
ÏÏ 
output
ÏÏ 
=
ÏÏ 
CombineScripts
ÏÏ *
.
ÏÏ* +!
CombineScriptBlocks
ÏÏ+ >
(
ÏÏ> ?
this
ÏÏ? C
.
ÏÏC D
scriptBlocks
ÏÏD P
.
ÏÏP Q
ToString
ÏÏQ Y
(
ÏÏY Z
)
ÏÏZ [
)
ÏÏ[ \
;
ÏÏ\ ]
byte
ÌÌ 
[
ÌÌ 
]
ÌÌ 
scriptBytes
ÌÌ 
=
ÌÌ  
this
ÌÌ! %
.
ÌÌ% &
encoding
ÌÌ& .
.
ÌÌ. /
GetBytes
ÌÌ/ 7
(
ÌÌ7 8
output
ÌÌ8 >
)
ÌÌ> ?
;
ÌÌ? @
this
ÓÓ 
.
ÓÓ 
responseStream
ÓÓ 
.
ÓÓ  
Write
ÓÓ  %
(
ÓÓ% &
scriptBytes
ÓÓ& 1
,
ÓÓ1 2
$num
ÓÓ3 4
,
ÓÓ4 5
scriptBytes
ÓÓ6 A
.
ÓÓA B
Length
ÓÓB H
)
ÓÓH I
;
ÓÓI J
}
ÔÔ 	
private
ÒÒ 
void
ÒÒ 
WriteOutput
ÒÒ  
(
ÒÒ  !
char
ÒÒ! %
[
ÒÒ% &
]
ÒÒ& '
content
ÒÒ( /
,
ÒÒ/ 0
int
ÒÒ1 4
pos
ÒÒ5 8
,
ÒÒ8 9
int
ÒÒ: =
length
ÒÒ> D
)
ÒÒD E
{
ÚÚ 	
if
ÛÛ 
(
ÛÛ 
length
ÛÛ 
==
ÛÛ 
$num
ÛÛ 
)
ÛÛ 
return
ÛÛ #
;
ÛÛ# $
byte
ıı 
[
ıı 
]
ıı 
buffer
ıı 
=
ıı 
this
ıı  
.
ıı  !
encoding
ıı! )
.
ıı) *
GetBytes
ıı* 2
(
ıı2 3
content
ıı3 :
,
ıı: ;
pos
ıı< ?
,
ıı? @
length
ııA G
)
ııG H
;
ııH I
this
ˆˆ 
.
ˆˆ 
responseStream
ˆˆ 
.
ˆˆ  
Write
ˆˆ  %
(
ˆˆ% &
buffer
ˆˆ& ,
,
ˆˆ, -
$num
ˆˆ. /
,
ˆˆ/ 0
buffer
ˆˆ1 7
.
ˆˆ7 8
Length
ˆˆ8 >
)
ˆˆ> ?
;
ˆˆ? @
}
˜˜ 	
private
¯¯ 
void
¯¯ 
WriteOutput
¯¯  
(
¯¯  !
string
¯¯! '
content
¯¯( /
)
¯¯/ 0
{
˘˘ 	
byte
˙˙ 
[
˙˙ 
]
˙˙ 
buffer
˙˙ 
=
˙˙ 
this
˙˙  
.
˙˙  !
encoding
˙˙! )
.
˙˙) *
GetBytes
˙˙* 2
(
˙˙2 3
content
˙˙3 :
)
˙˙: ;
;
˙˙; <
this
˚˚ 
.
˚˚ 
responseStream
˚˚ 
.
˚˚  
Write
˚˚  %
(
˚˚% &
buffer
˚˚& ,
,
˚˚, -
$num
˚˚. /
,
˚˚/ 0
buffer
˚˚1 7
.
˚˚7 8
Length
˚˚8 >
)
˚˚> ?
;
˚˚? @
}
¸¸ 	
private
ÄÄ 
bool
ÄÄ 
isPinned
ÄÄ 
(
ÄÄ 
char
ÄÄ "
[
ÄÄ" #
]
ÄÄ# $
content
ÄÄ% ,
,
ÄÄ, -
int
ÄÄ. 1
pos
ÄÄ2 5
)
ÄÄ5 6
{
ÅÅ 	
return
àà 
false
àà 
;
àà 
}
ââ 	
private
ãã 
bool
ãã 
	isBodyTag
ãã 
(
ãã 
char
ãã #
[
ãã# $
]
ãã$ %
content
ãã& -
,
ãã- .
int
ãã/ 2
pos
ãã3 6
)
ãã6 7
{
åå 	
if
çç 
(
çç 
pos
çç 
+
çç 
$num
çç 
<
çç 
content
çç !
.
çç! "
Length
çç" (
)
çç( )
return
éé 
(
éé 
(
éé 
content
éé  
[
éé  !
pos
éé! $
]
éé$ %
==
éé& (
$char
éé) ,
||
éé- /
content
éé0 7
[
éé7 8
pos
éé8 ;
]
éé; <
==
éé= ?
$char
éé@ C
)
ééC D
&&
èè 
(
èè 
content
èè 
[
èè  
pos
èè  #
+
èè$ %
$num
èè& '
]
èè' (
==
èè) +
$char
èè, /
||
èè0 2
content
èè3 :
[
èè: ;
pos
èè; >
+
èè? @
$num
èèA B
]
èèB C
==
èèD F
$char
èèG J
)
èèJ K
&&
êê 
(
êê 
content
êê 
[
êê  
pos
êê  #
+
êê$ %
$num
êê& '
]
êê' (
==
êê) +
$char
êê, /
||
êê0 2
content
êê3 :
[
êê: ;
pos
êê; >
+
êê? @
$num
êêA B
]
êêB C
==
êêD F
$char
êêG J
)
êêJ K
&&
ëë 
(
ëë 
content
ëë 
[
ëë  
pos
ëë  #
+
ëë$ %
$num
ëë& '
]
ëë' (
==
ëë) +
$char
ëë, /
||
ëë0 2
content
ëë3 :
[
ëë: ;
pos
ëë; >
+
ëë? @
$num
ëëA B
]
ëëB C
==
ëëD F
$char
ëëG J
)
ëëJ K
)
ëëK L
;
ëëL M
else
íí 
return
ìì 
false
ìì 
;
ìì 
}
îî 	
private
úú 
bool
úú 
isScriptTag
úú  
(
úú  !
char
úú! %
[
úú% &
]
úú& '
content
úú( /
,
úú/ 0
int
úú1 4
pos
úú5 8
)
úú8 9
{
ùù 	
if
ûû 
(
ûû 
pos
ûû 
+
ûû 
$num
ûû 
<
ûû 
content
ûû !
.
ûû! "
Length
ûû" (
)
ûû( )
return
üü 
(
üü 
(
üü 
content
üü  
[
üü  !
pos
üü! $
]
üü$ %
==
üü& (
$char
üü) ,
||
üü- /
content
üü0 7
[
üü7 8
pos
üü8 ;
]
üü; <
==
üü= ?
$char
üü@ C
)
üüC D
&&
†† 
(
†† 
content
†† 
[
††  
pos
††  #
+
††$ %
$num
††& '
]
††' (
==
††) +
$char
††, /
||
††0 2
content
††3 :
[
††: ;
pos
††; >
+
††? @
$num
††A B
]
††B C
==
††D F
$char
††G J
)
††J K
&&
°° 
(
°° 
content
°° 
[
°°  
pos
°°  #
+
°°$ %
$num
°°& '
]
°°' (
==
°°) +
$char
°°, /
||
°°0 2
content
°°3 :
[
°°: ;
pos
°°; >
+
°°? @
$num
°°A B
]
°°B C
==
°°D F
$char
°°G J
)
°°J K
&&
¢¢ 
(
¢¢ 
content
¢¢ 
[
¢¢  
pos
¢¢  #
+
¢¢$ %
$num
¢¢& '
]
¢¢' (
==
¢¢) +
$char
¢¢, /
||
¢¢0 2
content
¢¢3 :
[
¢¢: ;
pos
¢¢; >
+
¢¢? @
$num
¢¢A B
]
¢¢B C
==
¢¢D F
$char
¢¢G J
)
¢¢J K
&&
££ 
(
££ 
content
££ 
[
££  
pos
££  #
+
££$ %
$num
££& '
]
££' (
==
££) +
$char
££, /
||
££0 2
content
££3 :
[
££: ;
pos
££; >
+
££? @
$num
££A B
]
££B C
==
££D F
$char
££G J
)
££J K
&&
§§ 
(
§§ 
content
§§ 
[
§§  
pos
§§  #
+
§§$ %
$num
§§& '
]
§§' (
==
§§) +
$char
§§, /
||
§§0 2
content
§§3 :
[
§§: ;
pos
§§; >
+
§§? @
$num
§§A B
]
§§B C
==
§§D F
$char
§§G J
)
§§J K
)
§§K L
;
§§L M
else
•• 
return
¶¶ 
false
¶¶ 
;
¶¶ 
}
®® 	
private
∫∫ 
bool
∫∫ !
ShouldNotMoveScript
∫∫ (
(
∫∫( )
char
∫∫) -
[
∫∫- .
]
∫∫. /
content
∫∫0 7
,
∫∫7 8
int
∫∫9 <
pos
∫∫= @
,
∫∫@ A
out
∫∫B E
int
∫∫F I
charsToSkip
∫∫J U
)
∫∫U V
{
ªª 	
charsToSkip
ΩΩ 
=
ΩΩ 
$num
ΩΩ 
;
ΩΩ 
int
øø  
closingScriptIndex
øø "
=
øø# $*
GetOffsetOfNextClosingScript
øø% A
(
øøA B
content
øøB I
,
øøI J
pos
øøK N
)
øøN O
;
øøO P
int
¿¿ 
srcIndex
¿¿ 
=
¿¿ %
GetOffsetNextIndexOfSrc
¿¿ 2
(
¿¿2 3
content
¿¿3 :
,
¿¿: ;
pos
¿¿< ?
,
¿¿? @ 
closingScriptIndex
¿¿A S
)
¿¿S T
;
¿¿T U
int
ƒƒ 
indexOfInitScript
ƒƒ !
=
ƒƒ" #(
GetOffsetNextIndexOfSysDot
ƒƒ$ >
(
ƒƒ> ?
content
ƒƒ? F
,
ƒƒF G
pos
ƒƒH K
,
ƒƒK L 
closingScriptIndex
ƒƒM _
)
ƒƒ_ `
;
ƒƒ` a
if
≈≈ 
(
≈≈ 
(
≈≈ 
indexOfInitScript
≈≈ "
>
≈≈# $
-
≈≈% &
$num
≈≈& '
)
≈≈' (
&&
≈≈) +
(
≈≈, -
indexOfInitScript
≈≈- >
<
≈≈? @ 
closingScriptIndex
≈≈A S
)
≈≈S T
)
≈≈T U
{
≈≈V W
return
≈≈X ^
false
≈≈_ d
;
≈≈d e
}
≈≈f g
indexOfInitScript
…… 
=
…… 5
'GetOffsetNextIndexOfWebFormInitCallback
……  G
(
……G H
content
……H O
,
……O P
pos
……Q T
,
……T U 
closingScriptIndex
……V h
)
……h i
;
……i j
if
ÀÀ 
(
ÀÀ 
(
ÀÀ 
indexOfInitScript
ÀÀ "
>
ÀÀ# $
-
ÀÀ% &
$num
ÀÀ& '
)
ÀÀ' (
&&
ÀÀ) +
(
ÀÀ, -
indexOfInitScript
ÀÀ- >
<
ÀÀ? @ 
closingScriptIndex
ÀÀA S
)
ÀÀS T
)
ÀÀT U
{
ÀÀV W
return
ÀÀX ^
false
ÀÀ_ d
;
ÀÀd e
}
ÀÀf g
int
’’ 
indexOfException
’’  
=
’’! "'
GetOffsetNextIndexOfYAHOO
’’# <
(
’’< =
content
’’= D
,
’’D E
pos
’’F I
,
’’I J 
closingScriptIndex
’’K ]
)
’’] ^
;
’’^ _
if
◊◊ 
(
◊◊ 
(
◊◊ 
indexOfException
◊◊ !
>
◊◊" #
-
◊◊$ %
$num
◊◊% &
)
◊◊& '
&&
◊◊( *
(
◊◊+ ,
indexOfException
◊◊, <
<
◊◊= > 
closingScriptIndex
◊◊? Q
)
◊◊Q R
)
◊◊R S
{
◊◊T U
return
◊◊V \
false
◊◊] b
;
◊◊b c
}
◊◊d e
indexOfException
⁄⁄ 
=
⁄⁄ $
GetOffsetNextIndexOfGA
⁄⁄ 5
(
⁄⁄5 6
content
⁄⁄6 =
,
⁄⁄= >
pos
⁄⁄? B
,
⁄⁄B C 
closingScriptIndex
⁄⁄D V
)
⁄⁄V W
;
⁄⁄W X
if
€€ 
(
€€ 
(
€€ 
indexOfException
€€ !
>
€€" #
-
€€$ %
$num
€€% &
)
€€& '
&&
€€( *
(
€€+ ,
indexOfException
€€, <
<
€€= > 
closingScriptIndex
€€? Q
)
€€Q R
)
€€R S
{
‹‹ 
charsToSkip
›› 
=
››  
closingScriptIndex
›› 0
+
››1 2
$num
››3 4
;
››4 5
return
ﬁﬁ 
true
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 
if
·· 
(
·· 
(
‚‚  
closingScriptIndex
‚‚ #
>
‚‚$ %
-
‚‚& '
$num
‚‚' (
)
‚‚( )
&&
„„ 
(
„„ 
(
„„ 
srcIndex
„„ 
==
„„  
-
„„! "
$num
„„" #
)
„„# $
||
„„% '
(
„„( )
srcIndex
„„) 1
>
„„2 3 
closingScriptIndex
„„4 F
)
„„F G
)
„„G H
)
‰‰ 
{
ÂÂ 
charsToSkip
ÁÁ 
=
ÁÁ  
closingScriptIndex
ÁÁ 0
+
ÁÁ1 2
$num
ÁÁ3 4
;
ÁÁ4 5
return
ËË 
true
ËË 
;
ËË 
}
ÍÍ 
if
ÏÏ 
(
ÏÏ 
(
ÌÌ  
closingScriptIndex
ÌÌ #
>
ÌÌ$ %
-
ÌÌ& '
$num
ÌÌ' (
)
ÌÌ( )
&&
ÓÓ 
(
ÓÓ 
(
ÓÓ 
srcIndex
ÓÓ 
>
ÓÓ 
-
ÓÓ  !
$num
ÓÓ! "
)
ÓÓ" #
&&
ÓÓ$ &
(
ÓÓ' (
srcIndex
ÓÓ( 0
<
ÓÓ1 2 
closingScriptIndex
ÓÓ3 E
)
ÓÓE F
)
ÓÓF G
)
ÔÔ 
{
 
indexOfException
ıı  
=
ıı! "*
GetOffsetNextIndexOfNeatHtml
ıı# ?
(
ıı? @
content
ıı@ G
,
ııG H
pos
ııI L
,
ııL M 
closingScriptIndex
ııN `
)
ıı` a
;
ııa b
if
˜˜ 
(
˜˜ 
(
˜˜ 
indexOfException
˜˜ %
>
˜˜& '
-
˜˜( )
$num
˜˜) *
)
˜˜* +
&&
˜˜, .
(
˜˜/ 0
indexOfException
˜˜0 @
<
˜˜A B 
closingScriptIndex
˜˜C U
)
˜˜U V
)
˜˜V W
{
¯¯ 
charsToSkip
˘˘ 
=
˘˘  ! 
closingScriptIndex
˘˘" 4
+
˘˘5 6
$num
˘˘7 8
;
˘˘8 9
return
˙˙ 
true
˙˙ 
;
˙˙  
}
˚˚ 
indexOfException
˝˝  
=
˝˝! "4
&GetOffsetNextIndexOfFriendlyUrlSuggest
˝˝# I
(
˝˝I J
content
˝˝J Q
,
˝˝Q R
pos
˝˝S V
,
˝˝V W 
closingScriptIndex
˝˝X j
)
˝˝j k
;
˝˝k l
if
ˇˇ 
(
ˇˇ 
(
ˇˇ 
indexOfException
ˇˇ %
>
ˇˇ& '
-
ˇˇ( )
$num
ˇˇ) *
)
ˇˇ* +
&&
ˇˇ, .
(
ˇˇ/ 0
indexOfException
ˇˇ0 @
<
ˇˇA B 
closingScriptIndex
ˇˇC U
)
ˇˇU V
)
ˇˇV W
{
ÄÄ 
charsToSkip
ÅÅ 
=
ÅÅ  ! 
closingScriptIndex
ÅÅ" 4
+
ÅÅ5 6
$num
ÅÅ7 8
;
ÅÅ8 9
return
ÇÇ 
true
ÇÇ 
;
ÇÇ  
}
ÉÉ 
indexOfException
ÖÖ  
=
ÖÖ! ",
GetOffsetNextIndexOfDatePicker
ÖÖ# A
(
ÖÖA B
content
ÖÖB I
,
ÖÖI J
pos
ÖÖK N
,
ÖÖN O 
closingScriptIndex
ÖÖP b
)
ÖÖb c
;
ÖÖc d
if
áá 
(
áá 
(
áá 
indexOfException
áá %
>
áá& '
-
áá( )
$num
áá) *
)
áá* +
&&
áá, .
(
áá/ 0
indexOfException
áá0 @
<
ááA B 
closingScriptIndex
ááC U
)
ááU V
)
ááV W
{
àà 
charsToSkip
ââ 
=
ââ  ! 
closingScriptIndex
ââ" 4
+
ââ5 6
$num
ââ7 8
;
ââ8 9
return
ää 
true
ää 
;
ää  
}
ãã 
indexOfException
çç  
=
çç! "+
GetOffsetNextIndexOfGoogleMap
çç# @
(
çç@ A
content
ççA H
,
ççH I
pos
ççJ M
,
ççM N 
closingScriptIndex
ççO a
)
çça b
;
ççb c
if
èè 
(
èè 
(
èè 
indexOfException
èè %
>
èè& '
-
èè( )
$num
èè) *
)
èè* +
&&
èè, .
(
èè/ 0
indexOfException
èè0 @
<
èèA B 
closingScriptIndex
èèC U
)
èèU V
)
èèV W
{
êê 
charsToSkip
ëë 
=
ëë  ! 
closingScriptIndex
ëë" 4
+
ëë5 6
$num
ëë7 8
;
ëë8 9
return
íí 
true
íí 
;
íí  
}
ìì 
indexOfException
ïï  
=
ïï! ".
 GetOffsetNextIndexOfGoogleMapUds
ïï# C
(
ïïC D
content
ïïD K
,
ïïK L
pos
ïïM P
,
ïïP Q 
closingScriptIndex
ïïR d
)
ïïd e
;
ïïe f
if
óó 
(
óó 
(
óó 
indexOfException
óó %
>
óó& '
-
óó( )
$num
óó) *
)
óó* +
&&
óó, .
(
óó/ 0
indexOfException
óó0 @
<
óóA B 
closingScriptIndex
óóC U
)
óóU V
)
óóV W
{
òò 
charsToSkip
ôô 
=
ôô  ! 
closingScriptIndex
ôô" 4
+
ôô5 6
$num
ôô7 8
;
ôô8 9
return
öö 
true
öö 
;
öö  
}
õõ 
indexOfException
ùù  
=
ùù! ")
GetOffsetNextIndexOfmojoMap
ùù# >
(
ùù> ?
content
ùù? F
,
ùùF G
pos
ùùH K
,
ùùK L 
closingScriptIndex
ùùM _
)
ùù_ `
;
ùù` a
if
üü 
(
üü 
(
üü 
indexOfException
üü %
>
üü& '
-
üü( )
$num
üü) *
)
üü* +
&&
üü, .
(
üü/ 0
indexOfException
üü0 @
<
üüA B 
closingScriptIndex
üüC U
)
üüU V
)
üüV W
{
†† 
charsToSkip
°° 
=
°°  ! 
closingScriptIndex
°°" 4
+
°°5 6
$num
°°7 8
;
°°8 9
return
¢¢ 
true
¢¢ 
;
¢¢  
}
££ 
indexOfException
¨¨  
=
¨¨! "(
GetOffsetNextIndexOfOdiogo
¨¨# =
(
¨¨= >
content
¨¨> E
,
¨¨E F
pos
¨¨G J
,
¨¨J K 
closingScriptIndex
¨¨L ^
)
¨¨^ _
;
¨¨_ `
if
ÆÆ 
(
ÆÆ 
(
ÆÆ 
indexOfException
ÆÆ %
>
ÆÆ& '
-
ÆÆ( )
$num
ÆÆ) *
)
ÆÆ* +
&&
ÆÆ, .
(
ÆÆ/ 0
indexOfException
ÆÆ0 @
<
ÆÆA B 
closingScriptIndex
ÆÆC U
)
ÆÆU V
)
ÆÆV W
{
ØØ 
charsToSkip
∞∞ 
=
∞∞  ! 
closingScriptIndex
∞∞" 4
+
∞∞5 6
$num
∞∞7 8
;
∞∞8 9
return
±± 
true
±± 
;
±±  
}
≤≤ 
}
∂∂ 
return
ªª 
false
ªª 
;
ªª 
}
ºº 	
private
ƒƒ 
int
ƒƒ *
GetOffsetOfNextClosingScript
ƒƒ 0
(
ƒƒ0 1
char
ƒƒ1 5
[
ƒƒ5 6
]
ƒƒ6 7
content
ƒƒ8 ?
,
ƒƒ? @
int
ƒƒA D
pos
ƒƒE H
)
ƒƒH I
{
≈≈ 	
bool
«« 
found
«« 
=
«« 
false
«« 
;
«« 
int
»» 
currentPosition
»» 
=
»»  !
pos
»»" %
;
»»% &
int
…… 

stepsAdded
…… 
=
…… 
$num
…… 
;
…… 
int
   
maxSteps
   
=
   
$num
   
;
   
while
ÀÀ 
(
ÀÀ 
(
ÃÃ 
!
ÃÃ 
found
ÃÃ 
)
ÃÃ 
&&
ÕÕ 
(
ÕÕ 
currentPosition
ÕÕ #
<
ÕÕ$ %
content
ÕÕ& -
.
ÕÕ- .
Length
ÕÕ. 4
-
ÕÕ5 6
$num
ÕÕ7 9
)
ÕÕ9 :
&&
ŒŒ 
(
ŒŒ 

stepsAdded
ŒŒ 
<=
ŒŒ !
maxSteps
ŒŒ" *
)
ŒŒ* +
)
œœ 
{
–– 
currentPosition
—— 
+=
——  "
$num
——# $
;
——$ %

stepsAdded
““ 
+=
““ 
$num
““ 
;
““  
if
‘‘ 
(
‘‘ 
(
’’ 
content
’’ 
[
’’ 
currentPosition
’’ ,
]
’’, -
==
’’. 0
$char
’’1 4
)
’’4 5
&&
÷÷ 
(
÷÷ 
content
÷÷ 
[
÷÷  
currentPosition
÷÷  /
+
÷÷0 1
$num
÷÷2 3
]
÷÷3 4
==
÷÷5 7
$char
÷÷8 ;
)
÷÷; <
&&
◊◊ 
(
◊◊ 
content
◊◊ 
[
◊◊  
currentPosition
◊◊  /
+
◊◊0 1
$num
◊◊2 3
]
◊◊3 4
==
◊◊5 7
$char
◊◊8 ;
||
◊◊< >
content
◊◊? F
[
◊◊F G
currentPosition
◊◊G V
+
◊◊W X
$num
◊◊Y Z
]
◊◊Z [
==
◊◊\ ^
$char
◊◊_ b
)
◊◊b c
&&
ÿÿ 
(
ÿÿ 
content
ÿÿ 
[
ÿÿ  
currentPosition
ÿÿ  /
+
ÿÿ0 1
$num
ÿÿ2 3
]
ÿÿ3 4
==
ÿÿ5 7
$char
ÿÿ8 ;
||
ÿÿ< >
content
ÿÿ? F
[
ÿÿF G
currentPosition
ÿÿG V
+
ÿÿW X
$num
ÿÿY Z
]
ÿÿZ [
==
ÿÿ\ ^
$char
ÿÿ_ b
)
ÿÿb c
&&
ŸŸ 
(
ŸŸ 
content
ŸŸ 
[
ŸŸ  
currentPosition
ŸŸ  /
+
ŸŸ0 1
$num
ŸŸ2 3
]
ŸŸ3 4
==
ŸŸ5 7
$char
ŸŸ8 ;
||
ŸŸ< >
content
ŸŸ? F
[
ŸŸF G
currentPosition
ŸŸG V
+
ŸŸW X
$num
ŸŸY Z
]
ŸŸZ [
==
ŸŸ\ ^
$char
ŸŸ_ b
)
ŸŸb c
&&
⁄⁄ 
(
⁄⁄ 
content
⁄⁄ 
[
⁄⁄  
currentPosition
⁄⁄  /
+
⁄⁄0 1
$num
⁄⁄2 3
]
⁄⁄3 4
==
⁄⁄5 7
$char
⁄⁄8 ;
||
⁄⁄< >
content
⁄⁄? F
[
⁄⁄F G
currentPosition
⁄⁄G V
+
⁄⁄W X
$num
⁄⁄Y Z
]
⁄⁄Z [
==
⁄⁄\ ^
$char
⁄⁄_ b
)
⁄⁄b c
&&
€€ 
(
€€ 
content
€€ 
[
€€  
currentPosition
€€  /
+
€€0 1
$num
€€2 3
]
€€3 4
==
€€5 7
$char
€€8 ;
||
€€< >
content
€€? F
[
€€F G
currentPosition
€€G V
+
€€W X
$num
€€Y Z
]
€€Z [
==
€€\ ^
$char
€€_ b
)
€€b c
&&
‹‹ 
(
‹‹ 
content
‹‹ 
[
‹‹  
currentPosition
‹‹  /
+
‹‹0 1
$num
‹‹2 3
]
‹‹3 4
==
‹‹5 7
$char
‹‹8 ;
||
‹‹< >
content
‹‹? F
[
‹‹F G
currentPosition
‹‹G V
+
‹‹W X
$num
‹‹Y Z
]
‹‹Z [
==
‹‹\ ^
$char
‹‹_ b
)
‹‹b c
&&
›› 
(
›› 
content
›› 
[
››  
currentPosition
››  /
+
››0 1
$num
››2 3
]
››3 4
==
››5 7
$char
››8 ;
)
››; <
)
ﬁﬁ 
{
ﬂﬂ 
found
‡‡ 
=
‡‡ 
true
‡‡  
;
‡‡  !
}
·· 
}
„„ 
if
ÂÂ 
(
ÂÂ 
found
ÂÂ 
)
ÂÂ 
{
ÂÂ 
return
ÂÂ 

stepsAdded
ÂÂ  *
;
ÂÂ* +
}
ÂÂ, -
return
ÁÁ 
-
ÁÁ 
$num
ÁÁ 
;
ÁÁ 
}
ËË 	
private
ÌÌ 
int
ÌÌ %
GetOffsetNextIndexOfSrc
ÌÌ +
(
ÌÌ+ ,
char
ÌÌ, 0
[
ÌÌ0 1
]
ÌÌ1 2
content
ÌÌ3 :
,
ÌÌ: ;
int
ÌÌ< ?
pos
ÌÌ@ C
,
ÌÌC D
int
ÌÌE H
maxSteps
ÌÌI Q
)
ÌÌQ R
{
ÓÓ 	
bool
 
found
 
=
 
false
 
;
 
int
ÒÒ 
currentPosition
ÒÒ 
=
ÒÒ  !
pos
ÒÒ" %
;
ÒÒ% &
int
ÚÚ 

stepsAdded
ÚÚ 
=
ÚÚ 
$num
ÚÚ 
;
ÚÚ 
while
ÙÙ 
(
ÙÙ 
(
ıı 
!
ıı 
found
ıı 
)
ıı 
&&
ˆˆ 
(
ˆˆ 
currentPosition
ˆˆ #
<
ˆˆ$ %
content
ˆˆ& -
.
ˆˆ- .
Length
ˆˆ. 4
-
ˆˆ5 6
$num
ˆˆ7 9
)
ˆˆ9 :
&&
˜˜ 
(
˜˜ 

stepsAdded
˜˜ 
<=
˜˜ !
maxSteps
˜˜" *
)
˜˜* +
)
¯¯ 
{
˘˘ 
currentPosition
˙˙ 
+=
˙˙  "
$num
˙˙# $
;
˙˙$ %

stepsAdded
˚˚ 
+=
˚˚ 
$num
˚˚ 
;
˚˚  
if
˝˝ 
(
˝˝ 
(
˛˛ 
content
˛˛ 
[
˛˛ 
currentPosition
˛˛ ,
]
˛˛, -
==
˛˛. 0
$char
˛˛1 4
||
˛˛5 7
content
˛˛8 ?
[
˛˛? @
currentPosition
˛˛@ O
]
˛˛O P
==
˛˛Q S
$char
˛˛T W
)
˛˛W X
&&
ˇˇ 
(
ˇˇ 
content
ˇˇ 
[
ˇˇ  
currentPosition
ˇˇ  /
+
ˇˇ0 1
$num
ˇˇ2 3
]
ˇˇ3 4
==
ˇˇ5 7
$char
ˇˇ8 ;
||
ˇˇ< >
content
ˇˇ? F
[
ˇˇF G
currentPosition
ˇˇG V
+
ˇˇW X
$num
ˇˇY Z
]
ˇˇZ [
==
ˇˇ\ ^
$char
ˇˇ_ b
)
ˇˇb c
&&
ÄÄ 
(
ÄÄ 
content
ÄÄ 
[
ÄÄ  
currentPosition
ÄÄ  /
+
ÄÄ0 1
$num
ÄÄ2 3
]
ÄÄ3 4
==
ÄÄ5 7
$char
ÄÄ8 ;
||
ÄÄ< >
content
ÄÄ? F
[
ÄÄF G
currentPosition
ÄÄG V
+
ÄÄW X
$num
ÄÄY Z
]
ÄÄZ [
==
ÄÄ\ ^
$char
ÄÄ_ b
)
ÄÄb c
&&
ÅÅ 
(
ÅÅ 
content
ÅÅ 
[
ÅÅ  
currentPosition
ÅÅ  /
+
ÅÅ0 1
$num
ÅÅ2 3
]
ÅÅ3 4
==
ÅÅ5 7
$char
ÅÅ8 ;
)
ÅÅ; <
)
ÇÇ 
{
ÉÉ 
found
ÑÑ 
=
ÑÑ 
true
ÑÑ  
;
ÑÑ  !
}
ÖÖ 
}
áá 
if
ââ 
(
ââ 
found
ââ 
)
ââ 
{
ââ 
return
ââ 

stepsAdded
ââ  *
;
ââ* +
}
ââ, -
return
ãã 
-
ãã 
$num
ãã 
;
ãã 
}
çç 	
private
íí 
int
íí (
GetOffsetNextIndexOfSysDot
íí .
(
íí. /
char
íí/ 3
[
íí3 4
]
íí4 5
content
íí6 =
,
íí= >
int
íí? B
pos
ííC F
,
ííF G
int
ííH K
maxSteps
ííL T
)
ííT U
{
ìì 	
bool
ïï 
found
ïï 
=
ïï 
false
ïï 
;
ïï 
int
ññ 
currentPosition
ññ 
=
ññ  !
pos
ññ" %
;
ññ% &
int
óó 

stepsAdded
óó 
=
óó 
$num
óó 
;
óó 
while
ôô 
(
ôô 
(
öö 
!
öö 
found
öö 
)
öö 
&&
õõ 
(
õõ 
currentPosition
õõ #
<
õõ$ %
content
õõ& -
.
õõ- .
Length
õõ. 4
-
õõ5 6
$num
õõ7 9
)
õõ9 :
&&
úú 
(
úú 

stepsAdded
úú 
<=
úú !
maxSteps
úú" *
)
úú* +
)
ùù 
{
ûû 
currentPosition
üü 
+=
üü  "
$num
üü# $
;
üü$ %

stepsAdded
†† 
+=
†† 
$num
†† 
;
††  
if
¢¢ 
(
¢¢ 
(
££ 
content
££ 
[
££ 
currentPosition
££ ,
]
££, -
==
££. 0
$char
££1 4
)
££4 5
&&
§§ 
(
§§ 
content
§§ 
[
§§  
currentPosition
§§  /
+
§§0 1
$num
§§2 3
]
§§3 4
==
§§5 7
$char
§§8 ;
)
§§; <
&&
•• 
(
•• 
content
••  
[
••  !
currentPosition
••! 0
+
••1 2
$num
••3 4
]
••4 5
==
••6 8
$char
••9 <
)
••< =
&&
¶¶ 
(
¶¶ 
content
¶¶ 
[
¶¶  
currentPosition
¶¶  /
+
¶¶0 1
$num
¶¶2 3
]
¶¶3 4
==
¶¶5 7
$char
¶¶8 ;
)
¶¶; <
)
ßß 
{
®® 
found
©© 
=
©© 
true
©©  
;
©©  !
}
™™ 
}
¨¨ 
if
ÆÆ 
(
ÆÆ 
found
ÆÆ 
)
ÆÆ 
{
ÆÆ 
return
ÆÆ 

stepsAdded
ÆÆ  *
;
ÆÆ* +
}
ÆÆ, -
return
∞∞ 
-
∞∞ 
$num
∞∞ 
;
∞∞ 
}
≤≤ 	
private
∑∑ 
int
∑∑ 5
'GetOffsetNextIndexOfWebFormInitCallback
∑∑ ;
(
∑∑; <
char
∑∑< @
[
∑∑@ A
]
∑∑A B
content
∑∑C J
,
∑∑J K
int
∑∑L O
pos
∑∑P S
,
∑∑S T
int
∑∑U X
maxSteps
∑∑Y a
)
∑∑a b
{
∏∏ 	
bool
∫∫ 
found
∫∫ 
=
∫∫ 
false
∫∫ 
;
∫∫ 
int
ªª 
currentPosition
ªª 
=
ªª  !
pos
ªª" %
;
ªª% &
int
ºº 

stepsAdded
ºº 
=
ºº 
$num
ºº 
;
ºº 
while
ææ 
(
ææ 
(
øø 
!
øø 
found
øø 
)
øø 
&&
¿¿ 
(
¿¿ 
currentPosition
¿¿ #
<
¿¿$ %
content
¿¿& -
.
¿¿- .
Length
¿¿. 4
-
¿¿5 6
$num
¿¿7 9
)
¿¿9 :
&&
¡¡ 
(
¡¡ 

stepsAdded
¡¡ 
<=
¡¡ !
maxSteps
¡¡" *
)
¡¡* +
)
¬¬ 
{
√√ 
currentPosition
ƒƒ 
+=
ƒƒ  "
$num
ƒƒ# $
;
ƒƒ$ %

stepsAdded
≈≈ 
+=
≈≈ 
$num
≈≈ 
;
≈≈  
if
«« 
(
«« 
(
»» 
content
»» 
[
»» 
currentPosition
»» ,
]
»», -
==
»». 0
$char
»»1 4
)
»»4 5
&&
…… 
(
…… 
content
…… 
[
……  
currentPosition
……  /
+
……0 1
$num
……2 3
]
……3 4
==
……5 7
$char
……8 ;
)
……; <
&&
   
(
   
content
   
[
    
currentPosition
    /
+
  0 1
$num
  2 3
]
  3 4
==
  5 7
$char
  8 ;
)
  ; <
&&
ÀÀ 
(
ÀÀ 
content
ÀÀ 
[
ÀÀ  
currentPosition
ÀÀ  /
+
ÀÀ0 1
$num
ÀÀ2 3
]
ÀÀ3 4
==
ÀÀ5 7
$char
ÀÀ8 ;
)
ÀÀ; <
&&
ÃÃ 
(
ÃÃ 
content
ÃÃ 
[
ÃÃ  
currentPosition
ÃÃ  /
+
ÃÃ0 1
$num
ÃÃ2 3
]
ÃÃ3 4
==
ÃÃ5 7
$char
ÃÃ8 ;
)
ÃÃ; <
&&
ÕÕ 
(
ÕÕ 
content
ÕÕ 
[
ÕÕ  
currentPosition
ÕÕ  /
+
ÕÕ0 1
$num
ÕÕ2 3
]
ÕÕ3 4
==
ÕÕ5 7
$char
ÕÕ8 ;
)
ÕÕ; <
&&
ŒŒ 
(
ŒŒ 
content
ŒŒ 
[
ŒŒ  
currentPosition
ŒŒ  /
+
ŒŒ0 1
$num
ŒŒ2 3
]
ŒŒ3 4
==
ŒŒ5 7
$char
ŒŒ8 ;
)
ŒŒ; <
&&
œœ 
(
œœ 
content
œœ 
[
œœ  
currentPosition
œœ  /
+
œœ0 1
$num
œœ2 3
]
œœ3 4
==
œœ5 7
$char
œœ8 ;
)
œœ; <
&&
–– 
(
–– 
content
–– 
[
––  
currentPosition
––  /
+
––0 1
$num
––2 3
]
––3 4
==
––5 7
$char
––8 ;
)
––; <
&&
—— 
(
—— 
content
—— 
[
——  
currentPosition
——  /
+
——0 1
$num
——2 3
]
——3 4
==
——5 7
$char
——8 ;
)
——; <
&&
““ 
(
““ 
content
““ 
[
““  
currentPosition
““  /
+
““0 1
$num
““2 4
]
““4 5
==
““6 8
$char
““9 <
)
““< =
&&
”” 
(
”” 
content
”” 
[
””  
currentPosition
””  /
+
””0 1
$num
””2 4
]
””4 5
==
””6 8
$char
””9 <
)
””< =
&&
‘‘ 
(
‘‘ 
content
‘‘ 
[
‘‘  
currentPosition
‘‘  /
+
‘‘0 1
$num
‘‘2 4
]
‘‘4 5
==
‘‘6 8
$char
‘‘9 <
)
‘‘< =
&&
’’ 
(
’’ 
content
’’ 
[
’’  
currentPosition
’’  /
+
’’0 1
$num
’’2 4
]
’’4 5
==
’’6 8
$char
’’9 <
)
’’< =
&&
÷÷ 
(
÷÷ 
content
÷÷ 
[
÷÷  
currentPosition
÷÷  /
+
÷÷0 1
$num
÷÷2 4
]
÷÷4 5
==
÷÷6 8
$char
÷÷9 <
)
÷÷< =
&&
◊◊ 
(
◊◊ 
content
◊◊ 
[
◊◊  
currentPosition
◊◊  /
+
◊◊0 1
$num
◊◊2 4
]
◊◊4 5
==
◊◊6 8
$char
◊◊9 <
)
◊◊< =
&&
ÿÿ 
(
ÿÿ 
content
ÿÿ 
[
ÿÿ  
currentPosition
ÿÿ  /
+
ÿÿ0 1
$num
ÿÿ2 4
]
ÿÿ4 5
==
ÿÿ6 8
$char
ÿÿ9 <
)
ÿÿ< =
)
ŸŸ 
{
⁄⁄ 
found
€€ 
=
€€ 
true
€€  
;
€€  !
}
‹‹ 
}
ﬁﬁ 
if
‡‡ 
(
‡‡ 
found
‡‡ 
)
‡‡ 
{
‡‡ 
return
‡‡ 

stepsAdded
‡‡  *
;
‡‡* +
}
‡‡, -
return
‚‚ 
-
‚‚ 
$num
‚‚ 
;
‚‚ 
}
‰‰ 	
private
ÊÊ 
int
ÊÊ '
GetOffsetNextIndexOfYAHOO
ÊÊ -
(
ÊÊ- .
char
ÊÊ. 2
[
ÊÊ2 3
]
ÊÊ3 4
content
ÊÊ5 <
,
ÊÊ< =
int
ÊÊ> A
pos
ÊÊB E
,
ÊÊE F
int
ÊÊG J
maxSteps
ÊÊK S
)
ÊÊS T
{
ÁÁ 	
bool
ÈÈ 
found
ÈÈ 
=
ÈÈ 
false
ÈÈ 
;
ÈÈ 
int
ÍÍ 
currentPosition
ÍÍ 
=
ÍÍ  !
pos
ÍÍ" %
;
ÍÍ% &
int
ÎÎ 

stepsAdded
ÎÎ 
=
ÎÎ 
$num
ÎÎ 
;
ÎÎ 
while
ÌÌ 
(
ÌÌ 
(
ÓÓ 
!
ÓÓ 
found
ÓÓ 
)
ÓÓ 
&&
ÔÔ 
(
ÔÔ 
currentPosition
ÔÔ #
<
ÔÔ$ %
content
ÔÔ& -
.
ÔÔ- .
Length
ÔÔ. 4
-
ÔÔ5 6
$num
ÔÔ7 9
)
ÔÔ9 :
&&
 
(
 

stepsAdded
 
<=
 !
maxSteps
" *
)
* +
)
ÒÒ 
{
ÚÚ 
currentPosition
ÛÛ 
+=
ÛÛ  "
$num
ÛÛ# $
;
ÛÛ$ %

stepsAdded
ÙÙ 
+=
ÙÙ 
$num
ÙÙ 
;
ÙÙ  
if
ˆˆ 
(
ˆˆ 
(
˜˜ 
content
˜˜ 
[
˜˜ 
currentPosition
˜˜ ,
]
˜˜, -
==
˜˜. 0
$char
˜˜1 4
)
˜˜4 5
&&
¯¯ 
(
¯¯ 
content
¯¯ 
[
¯¯  
currentPosition
¯¯  /
+
¯¯0 1
$num
¯¯2 3
]
¯¯3 4
==
¯¯5 7
$char
¯¯8 ;
)
¯¯; <
&&
˘˘ 
(
˘˘ 
content
˘˘ 
[
˘˘  
currentPosition
˘˘  /
+
˘˘0 1
$num
˘˘2 3
]
˘˘3 4
==
˘˘5 7
$char
˘˘8 ;
)
˘˘; <
&&
˙˙ 
(
˙˙ 
content
˙˙ 
[
˙˙  
currentPosition
˙˙  /
+
˙˙0 1
$num
˙˙2 3
]
˙˙3 4
==
˙˙5 7
$char
˙˙8 ;
)
˙˙; <
&&
˚˚ 
(
˚˚ 
content
˚˚ 
[
˚˚  
currentPosition
˚˚  /
+
˚˚0 1
$num
˚˚2 3
]
˚˚3 4
==
˚˚5 7
$char
˚˚8 ;
)
˚˚; <
)
¸¸ 
{
˝˝ 
found
˛˛ 
=
˛˛ 
true
˛˛  
;
˛˛  !
}
ˇˇ 
}
ÅÅ 
if
ÉÉ 
(
ÉÉ 
found
ÉÉ 
)
ÉÉ 
{
ÉÉ 
return
ÉÉ 

stepsAdded
ÉÉ  *
;
ÉÉ* +
}
ÉÉ, -
return
ÖÖ 
-
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
áá 	
private
ää 
int
ää *
GetOffsetNextIndexOfNeatHtml
ää 0
(
ää0 1
char
ää1 5
[
ää5 6
]
ää6 7
content
ää8 ?
,
ää? @
int
ääA D
pos
ääE H
,
ääH I
int
ääJ M
maxSteps
ääN V
)
ääV W
{
ãã 	
bool
çç 
found
çç 
=
çç 
false
çç 
;
çç 
int
éé 
currentPosition
éé 
=
éé  !
pos
éé" %
;
éé% &
int
èè 

stepsAdded
èè 
=
èè 
$num
èè 
;
èè 
while
ëë 
(
ëë 
(
íí 
!
íí 
found
íí 
)
íí 
&&
ìì 
(
ìì 
currentPosition
ìì #
<
ìì$ %
content
ìì& -
.
ìì- .
Length
ìì. 4
-
ìì5 6
$num
ìì7 9
)
ìì9 :
&&
îî 
(
îî 

stepsAdded
îî 
<=
îî !
maxSteps
îî" *
)
îî* +
)
ïï 
{
ññ 
currentPosition
óó 
+=
óó  "
$num
óó# $
;
óó$ %

stepsAdded
òò 
+=
òò 
$num
òò 
;
òò  
if
öö 
(
öö 
(
õõ 
content
õõ 
[
õõ 
currentPosition
õõ ,
]
õõ, -
==
õõ. 0
$char
õõ1 4
)
õõ4 5
&&
úú 
(
úú 
content
úú 
[
úú  
currentPosition
úú  /
+
úú0 1
$num
úú2 3
]
úú3 4
==
úú5 7
$char
úú8 ;
)
úú; <
&&
ùù 
(
ùù 
content
ùù 
[
ùù  
currentPosition
ùù  /
+
ùù0 1
$num
ùù2 3
]
ùù3 4
==
ùù5 7
$char
ùù8 ;
)
ùù; <
&&
ûû 
(
ûû 
content
ûû 
[
ûû  
currentPosition
ûû  /
+
ûû0 1
$num
ûû2 3
]
ûû3 4
==
ûû5 7
$char
ûû8 ;
)
ûû; <
&&
üü 
(
üü 
content
üü 
[
üü  
currentPosition
üü  /
+
üü0 1
$num
üü2 3
]
üü3 4
==
üü5 7
$char
üü8 ;
)
üü; <
&&
†† 
(
†† 
content
†† 
[
††  
currentPosition
††  /
+
††0 1
$num
††2 3
]
††3 4
==
††5 7
$char
††8 ;
)
††; <
&&
°° 
(
°° 
content
°° 
[
°°  
currentPosition
°°  /
+
°°0 1
$num
°°2 3
]
°°3 4
==
°°5 7
$char
°°8 ;
)
°°; <
&&
¢¢ 
(
¢¢ 
content
¢¢ 
[
¢¢  
currentPosition
¢¢  /
+
¢¢0 1
$num
¢¢2 3
]
¢¢3 4
==
¢¢5 7
$char
¢¢8 ;
)
¢¢; <
)
¶¶ 
{
ßß 
found
®® 
=
®® 
true
®®  
;
®®  !
}
©© 
}
´´ 
if
≠≠ 
(
≠≠ 
found
≠≠ 
)
≠≠ 
{
≠≠ 
return
≠≠ 

stepsAdded
≠≠  *
;
≠≠* +
}
≠≠, -
return
ØØ 
-
ØØ 
$num
ØØ 
;
ØØ 
}
±± 	
private
≥≥ 
int
≥≥ 4
&GetOffsetNextIndexOfFriendlyUrlSuggest
≥≥ :
(
≥≥: ;
char
≥≥; ?
[
≥≥? @
]
≥≥@ A
content
≥≥B I
,
≥≥I J
int
≥≥K N
pos
≥≥O R
,
≥≥R S
int
≥≥T W
maxSteps
≥≥X `
)
≥≥` a
{
¥¥ 	
bool
∂∂ 
found
∂∂ 
=
∂∂ 
false
∂∂ 
;
∂∂ 
int
∑∑ 
currentPosition
∑∑ 
=
∑∑  !
pos
∑∑" %
;
∑∑% &
int
∏∏ 

stepsAdded
∏∏ 
=
∏∏ 
$num
∏∏ 
;
∏∏ 
while
∫∫ 
(
∫∫ 
(
ªª 
!
ªª 
found
ªª 
)
ªª 
&&
ºº 
(
ºº 
currentPosition
ºº #
<
ºº$ %
content
ºº& -
.
ºº- .
Length
ºº. 4
-
ºº5 6
$num
ºº7 9
)
ºº9 :
&&
ΩΩ 
(
ΩΩ 

stepsAdded
ΩΩ 
<=
ΩΩ !
maxSteps
ΩΩ" *
)
ΩΩ* +
)
ææ 
{
øø 
currentPosition
¿¿ 
+=
¿¿  "
$num
¿¿# $
;
¿¿$ %

stepsAdded
¡¡ 
+=
¡¡ 
$num
¡¡ 
;
¡¡  
if
√√ 
(
√√ 
(
ƒƒ 
content
ƒƒ 
[
ƒƒ 
currentPosition
ƒƒ ,
]
ƒƒ, -
==
ƒƒ. 0
$char
ƒƒ1 4
)
ƒƒ4 5
&&
≈≈ 
(
≈≈ 
content
≈≈ 
[
≈≈  
currentPosition
≈≈  /
+
≈≈0 1
$num
≈≈2 3
]
≈≈3 4
==
≈≈5 7
$char
≈≈8 ;
)
≈≈; <
&&
∆∆ 
(
∆∆ 
content
∆∆ 
[
∆∆  
currentPosition
∆∆  /
+
∆∆0 1
$num
∆∆2 3
]
∆∆3 4
==
∆∆5 7
$char
∆∆8 ;
)
∆∆; <
&&
«« 
(
«« 
content
«« 
[
««  
currentPosition
««  /
+
««0 1
$num
««2 3
]
««3 4
==
««5 7
$char
««8 ;
)
««; <
&&
»» 
(
»» 
content
»» 
[
»»  
currentPosition
»»  /
+
»»0 1
$num
»»2 3
]
»»3 4
==
»»5 7
$char
»»8 ;
)
»»; <
&&
…… 
(
…… 
content
…… 
[
……  
currentPosition
……  /
+
……0 1
$num
……2 3
]
……3 4
==
……5 7
$char
……8 ;
)
……; <
&&
   
(
   
content
   
[
    
currentPosition
    /
+
  0 1
$num
  2 3
]
  3 4
==
  5 7
$char
  8 ;
)
  ; <
&&
ÀÀ 
(
ÀÀ 
content
ÀÀ 
[
ÀÀ  
currentPosition
ÀÀ  /
+
ÀÀ0 1
$num
ÀÀ2 3
]
ÀÀ3 4
==
ÀÀ5 7
$char
ÀÀ8 ;
)
ÀÀ; <
&&
ÃÃ 
(
ÃÃ 
content
ÃÃ 
[
ÃÃ  
currentPosition
ÃÃ  /
+
ÃÃ0 1
$num
ÃÃ2 3
]
ÃÃ3 4
==
ÃÃ5 7
$char
ÃÃ8 ;
)
ÃÃ; <
&&
ÕÕ 
(
ÕÕ 
content
ÕÕ 
[
ÕÕ  
currentPosition
ÕÕ  /
+
ÕÕ0 1
$num
ÕÕ2 3
]
ÕÕ3 4
==
ÕÕ5 7
$char
ÕÕ8 ;
)
ÕÕ; <
&&
ŒŒ 
(
ŒŒ 
content
ŒŒ 
[
ŒŒ  
currentPosition
ŒŒ  /
+
ŒŒ0 1
$num
ŒŒ2 4
]
ŒŒ4 5
==
ŒŒ6 8
$char
ŒŒ9 <
)
ŒŒ< =
)
œœ 
{
–– 
found
—— 
=
—— 
true
——  
;
——  !
}
““ 
}
‘‘ 
if
÷÷ 
(
÷÷ 
found
÷÷ 
)
÷÷ 
{
÷÷ 
return
÷÷ 

stepsAdded
÷÷  *
;
÷÷* +
}
÷÷, -
return
ÿÿ 
-
ÿÿ 
$num
ÿÿ 
;
ÿÿ 
}
⁄⁄ 	
private
‹‹ 
int
‹‹ ,
GetOffsetNextIndexOfDatePicker
‹‹ 2
(
‹‹2 3
char
‹‹3 7
[
‹‹7 8
]
‹‹8 9
content
‹‹: A
,
‹‹A B
int
‹‹C F
pos
‹‹G J
,
‹‹J K
int
‹‹L O
maxSteps
‹‹P X
)
‹‹X Y
{
›› 	
bool
ﬂﬂ 
found
ﬂﬂ 
=
ﬂﬂ 
false
ﬂﬂ 
;
ﬂﬂ 
int
‡‡ 
currentPosition
‡‡ 
=
‡‡  !
pos
‡‡" %
;
‡‡% &
int
·· 

stepsAdded
·· 
=
·· 
$num
·· 
;
·· 
while
„„ 
(
„„ 
(
‰‰ 
!
‰‰ 
found
‰‰ 
)
‰‰ 
&&
ÂÂ 
(
ÂÂ 
currentPosition
ÂÂ #
<
ÂÂ$ %
content
ÂÂ& -
.
ÂÂ- .
Length
ÂÂ. 4
-
ÂÂ5 6
$num
ÂÂ7 9
)
ÂÂ9 :
&&
ÊÊ 
(
ÊÊ 

stepsAdded
ÊÊ 
<=
ÊÊ !
maxSteps
ÊÊ" *
)
ÊÊ* +
)
ÁÁ 
{
ËË 
currentPosition
ÈÈ 
+=
ÈÈ  "
$num
ÈÈ# $
;
ÈÈ$ %

stepsAdded
ÍÍ 
+=
ÍÍ 
$num
ÍÍ 
;
ÍÍ  
if
ÏÏ 
(
ÏÏ 
(
ÌÌ 
content
ÌÌ 
[
ÌÌ 
currentPosition
ÌÌ ,
]
ÌÌ, -
==
ÌÌ. 0
$char
ÌÌ1 4
)
ÌÌ4 5
&&
ÓÓ 
(
ÓÓ 
content
ÓÓ 
[
ÓÓ  
currentPosition
ÓÓ  /
+
ÓÓ0 1
$num
ÓÓ2 3
]
ÓÓ3 4
==
ÓÓ5 7
$char
ÓÓ8 ;
)
ÓÓ; <
&&
ÔÔ 
(
ÔÔ 
content
ÔÔ 
[
ÔÔ  
currentPosition
ÔÔ  /
+
ÔÔ0 1
$num
ÔÔ2 3
]
ÔÔ3 4
==
ÔÔ5 7
$char
ÔÔ8 ;
)
ÔÔ; <
&&
 
(
 
content
 
[
  
currentPosition
  /
+
0 1
$num
2 3
]
3 4
==
5 7
$char
8 ;
)
; <
&&
ÒÒ 
(
ÒÒ 
content
ÒÒ 
[
ÒÒ  
currentPosition
ÒÒ  /
+
ÒÒ0 1
$num
ÒÒ2 3
]
ÒÒ3 4
==
ÒÒ5 7
$char
ÒÒ8 ;
)
ÒÒ; <
&&
ÚÚ 
(
ÚÚ 
content
ÚÚ 
[
ÚÚ  
currentPosition
ÚÚ  /
+
ÚÚ0 1
$num
ÚÚ2 3
]
ÚÚ3 4
==
ÚÚ5 7
$char
ÚÚ8 ;
)
ÚÚ; <
&&
ÛÛ 
(
ÛÛ 
content
ÛÛ 
[
ÛÛ  
currentPosition
ÛÛ  /
+
ÛÛ0 1
$num
ÛÛ2 3
]
ÛÛ3 4
==
ÛÛ5 7
$char
ÛÛ8 ;
)
ÛÛ; <
&&
ÙÙ 
(
ÙÙ 
content
ÙÙ 
[
ÙÙ  
currentPosition
ÙÙ  /
+
ÙÙ0 1
$num
ÙÙ2 3
]
ÙÙ3 4
==
ÙÙ5 7
$char
ÙÙ8 ;
)
ÙÙ; <
&&
ıı 
(
ıı 
content
ıı 
[
ıı  
currentPosition
ıı  /
+
ıı0 1
$num
ıı2 3
]
ıı3 4
==
ıı5 7
$char
ıı8 ;
)
ıı; <
&&
ˆˆ 
(
ˆˆ 
content
ˆˆ 
[
ˆˆ  
currentPosition
ˆˆ  /
+
ˆˆ0 1
$num
ˆˆ2 3
]
ˆˆ3 4
==
ˆˆ5 7
$char
ˆˆ8 ;
)
ˆˆ; <
&&
˜˜ 
(
˜˜ 
content
˜˜ 
[
˜˜  
currentPosition
˜˜  /
+
˜˜0 1
$num
˜˜2 4
]
˜˜4 5
==
˜˜6 8
$char
˜˜9 <
)
˜˜< =
)
¯¯ 
{
˘˘ 
found
˙˙ 
=
˙˙ 
true
˙˙  
;
˙˙  !
}
˚˚ 
}
˝˝ 
if
ˇˇ 
(
ˇˇ 
found
ˇˇ 
)
ˇˇ 
{
ˇˇ 
return
ˇˇ 

stepsAdded
ˇˇ  *
;
ˇˇ* +
}
ˇˇ, -
return
ÅÅ 
-
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
}
ÉÉ 	
private
ÖÖ 
int
ÖÖ (
GetOffsetNextIndexOfOdiogo
ÖÖ .
(
ÖÖ. /
char
ÖÖ/ 3
[
ÖÖ3 4
]
ÖÖ4 5
content
ÖÖ6 =
,
ÖÖ= >
int
ÖÖ? B
pos
ÖÖC F
,
ÖÖF G
int
ÖÖH K
maxSteps
ÖÖL T
)
ÖÖT U
{
ÜÜ 	
bool
àà 
found
àà 
=
àà 
false
àà 
;
àà 
int
ââ 
currentPosition
ââ 
=
ââ  !
pos
ââ" %
;
ââ% &
int
ää 

stepsAdded
ää 
=
ää 
$num
ää 
;
ää 
while
åå 
(
åå 
(
çç 
!
çç 
found
çç 
)
çç 
&&
éé 
(
éé 
currentPosition
éé #
<
éé$ %
content
éé& -
.
éé- .
Length
éé. 4
-
éé5 6
$num
éé7 9
)
éé9 :
&&
èè 
(
èè 

stepsAdded
èè 
<=
èè !
maxSteps
èè" *
)
èè* +
)
êê 
{
ëë 
currentPosition
íí 
+=
íí  "
$num
íí# $
;
íí$ %

stepsAdded
ìì 
+=
ìì 
$num
ìì 
;
ìì  
if
ïï 
(
ïï 
(
ññ 
content
ññ 
[
ññ 
currentPosition
ññ ,
]
ññ, -
==
ññ. 0
$char
ññ1 4
)
ññ4 5
&&
óó 
(
óó 
content
óó 
[
óó  
currentPosition
óó  /
+
óó0 1
$num
óó2 3
]
óó3 4
==
óó5 7
$char
óó8 ;
)
óó; <
&&
òò 
(
òò 
content
òò 
[
òò  
currentPosition
òò  /
+
òò0 1
$num
òò2 3
]
òò3 4
==
òò5 7
$char
òò8 ;
)
òò; <
&&
ôô 
(
ôô 
content
ôô 
[
ôô  
currentPosition
ôô  /
+
ôô0 1
$num
ôô2 3
]
ôô3 4
==
ôô5 7
$char
ôô8 ;
)
ôô; <
&&
öö 
(
öö 
content
öö 
[
öö  
currentPosition
öö  /
+
öö0 1
$num
öö2 3
]
öö3 4
==
öö5 7
$char
öö8 ;
)
öö; <
&&
õõ 
(
õõ 
content
õõ 
[
õõ  
currentPosition
õõ  /
+
õõ0 1
$num
õõ2 3
]
õõ3 4
==
õõ5 7
$char
õõ8 ;
)
õõ; <
)
ùù 
{
ûû 
found
üü 
=
üü 
true
üü  
;
üü  !
}
†† 
}
¢¢ 
if
§§ 
(
§§ 
found
§§ 
)
§§ 
{
§§ 
return
§§ 

stepsAdded
§§  *
;
§§* +
}
§§, -
return
¶¶ 
-
¶¶ 
$num
¶¶ 
;
¶¶ 
}
®® 	
private
™™ 
int
™™ $
GetOffsetNextIndexOfGA
™™ *
(
™™* +
char
™™+ /
[
™™/ 0
]
™™0 1
content
™™2 9
,
™™9 :
int
™™; >
pos
™™? B
,
™™B C
int
™™D G
maxSteps
™™H P
)
™™P Q
{
´´ 	
bool
≠≠ 
found
≠≠ 
=
≠≠ 
false
≠≠ 
;
≠≠ 
int
ÆÆ 
currentPosition
ÆÆ 
=
ÆÆ  !
pos
ÆÆ" %
;
ÆÆ% &
int
ØØ 

stepsAdded
ØØ 
=
ØØ 
$num
ØØ 
;
ØØ 
while
±± 
(
±± 
(
≤≤ 
!
≤≤ 
found
≤≤ 
)
≤≤ 
&&
≥≥ 
(
≥≥ 
currentPosition
≥≥ #
<
≥≥$ %
content
≥≥& -
.
≥≥- .
Length
≥≥. 4
-
≥≥5 6
$num
≥≥7 9
)
≥≥9 :
&&
¥¥ 
(
¥¥ 

stepsAdded
¥¥ 
<=
¥¥ !
maxSteps
¥¥" *
)
¥¥* +
)
µµ 
{
∂∂ 
currentPosition
∑∑ 
+=
∑∑  "
$num
∑∑# $
;
∑∑$ %

stepsAdded
∏∏ 
+=
∏∏ 
$num
∏∏ 
;
∏∏  
if
∫∫ 
(
∫∫ 
(
ªª 
content
ªª 
[
ªª 
currentPosition
ªª ,
]
ªª, -
==
ªª. 0
$char
ªª1 4
)
ªª4 5
&&
ºº 
(
ºº 
content
ºº 
[
ºº  
currentPosition
ºº  /
+
ºº0 1
$num
ºº2 3
]
ºº3 4
==
ºº5 7
$char
ºº8 ;
)
ºº; <
&&
ΩΩ 
(
ΩΩ 
content
ΩΩ 
[
ΩΩ  
currentPosition
ΩΩ  /
+
ΩΩ0 1
$num
ΩΩ2 3
]
ΩΩ3 4
==
ΩΩ5 7
$char
ΩΩ8 ;
)
ΩΩ; <
&&
ææ 
(
ææ 
content
ææ 
[
ææ  
currentPosition
ææ  /
+
ææ0 1
$num
ææ2 3
]
ææ3 4
==
ææ5 7
$char
ææ8 ;
)
ææ; <
&&
øø 
(
øø 
content
øø 
[
øø  
currentPosition
øø  /
+
øø0 1
$num
øø2 3
]
øø3 4
==
øø5 7
$char
øø8 ;
)
øø; <
&&
¿¿ 
(
¿¿ 
content
¿¿ 
[
¿¿  
currentPosition
¿¿  /
+
¿¿0 1
$num
¿¿2 3
]
¿¿3 4
==
¿¿5 7
$char
¿¿8 ;
)
¿¿; <
&&
¡¡ 
(
¡¡ 
content
¡¡ 
[
¡¡  
currentPosition
¡¡  /
+
¡¡0 1
$num
¡¡2 3
]
¡¡3 4
==
¡¡5 7
$char
¡¡8 ;
)
¡¡; <
&&
¬¬ 
(
¬¬ 
content
¬¬ 
[
¬¬  
currentPosition
¬¬  /
+
¬¬0 1
$num
¬¬2 3
]
¬¬3 4
==
¬¬5 7
$char
¬¬8 ;
)
¬¬; <
)
ƒƒ 
{
≈≈ 
found
∆∆ 
=
∆∆ 
true
∆∆  
;
∆∆  !
}
«« 
}
…… 
if
ÀÀ 
(
ÀÀ 
found
ÀÀ 
)
ÀÀ 
{
ÀÀ 
return
ÀÀ 

stepsAdded
ÀÀ  *
;
ÀÀ* +
}
ÀÀ, -
return
ÕÕ 
-
ÕÕ 
$num
ÕÕ 
;
ÕÕ 
}
œœ 	
private
—— 
int
—— +
GetOffsetNextIndexOfGoogleMap
—— 1
(
——1 2
char
——2 6
[
——6 7
]
——7 8
content
——9 @
,
——@ A
int
——B E
pos
——F I
,
——I J
int
——K N
maxSteps
——O W
)
——W X
{
““ 	
bool
”” 
found
”” 
=
”” 
false
”” 
;
”” 
int
‘‘ 
currentPosition
‘‘ 
=
‘‘  !
pos
‘‘" %
;
‘‘% &
int
’’ 

stepsAdded
’’ 
=
’’ 
$num
’’ 
;
’’ 
while
◊◊ 
(
◊◊ 
(
ÿÿ 
!
ÿÿ 
found
ÿÿ 
)
ÿÿ 
&&
ŸŸ 
(
ŸŸ 
currentPosition
ŸŸ #
<
ŸŸ$ %
content
ŸŸ& -
.
ŸŸ- .
Length
ŸŸ. 4
-
ŸŸ5 6
$num
ŸŸ7 9
)
ŸŸ9 :
&&
⁄⁄ 
(
⁄⁄ 

stepsAdded
⁄⁄ 
<=
⁄⁄ !
maxSteps
⁄⁄" *
)
⁄⁄* +
)
€€ 
{
‹‹ 
currentPosition
›› 
+=
››  "
$num
››# $
;
››$ %

stepsAdded
ﬁﬁ 
+=
ﬁﬁ 
$num
ﬁﬁ 
;
ﬁﬁ  
if
‡‡ 
(
‡‡ 
(
·· 
content
·· 
[
·· 
currentPosition
·· ,
]
··, -
==
··. 0
$char
··1 4
)
··4 5
&&
‚‚ 
(
‚‚ 
content
‚‚ 
[
‚‚  
currentPosition
‚‚  /
+
‚‚0 1
$num
‚‚2 3
]
‚‚3 4
==
‚‚5 7
$char
‚‚8 ;
)
‚‚; <
&&
„„ 
(
„„ 
content
„„ 
[
„„  
currentPosition
„„  /
+
„„0 1
$num
„„2 3
]
„„3 4
==
„„5 7
$char
„„8 ;
)
„„; <
&&
‰‰ 
(
‰‰ 
content
‰‰ 
[
‰‰  
currentPosition
‰‰  /
+
‰‰0 1
$num
‰‰2 3
]
‰‰3 4
==
‰‰5 7
$char
‰‰8 ;
)
‰‰; <
&&
ÂÂ 
(
ÂÂ 
content
ÂÂ 
[
ÂÂ  
currentPosition
ÂÂ  /
+
ÂÂ0 1
$num
ÂÂ2 3
]
ÂÂ3 4
==
ÂÂ5 7
$char
ÂÂ8 ;
)
ÂÂ; <
&&
ÊÊ 
(
ÊÊ 
content
ÊÊ 
[
ÊÊ  
currentPosition
ÊÊ  /
+
ÊÊ0 1
$num
ÊÊ2 3
]
ÊÊ3 4
==
ÊÊ5 7
$char
ÊÊ8 ;
)
ÊÊ; <
&&
ÁÁ 
(
ÁÁ 
content
ÁÁ 
[
ÁÁ  
currentPosition
ÁÁ  /
+
ÁÁ0 1
$num
ÁÁ2 3
]
ÁÁ3 4
==
ÁÁ5 7
$char
ÁÁ8 ;
)
ÁÁ; <
&&
ËË 
(
ËË 
content
ËË 
[
ËË  
currentPosition
ËË  /
+
ËË0 1
$num
ËË2 3
]
ËË3 4
==
ËË5 7
$char
ËË8 ;
)
ËË; <
&&
ÈÈ 
(
ÈÈ 
content
ÈÈ 
[
ÈÈ  
currentPosition
ÈÈ  /
+
ÈÈ0 1
$num
ÈÈ2 3
]
ÈÈ3 4
==
ÈÈ5 7
$char
ÈÈ8 ;
)
ÈÈ; <
&&
ÍÍ 
(
ÍÍ 
content
ÍÍ 
[
ÍÍ  
currentPosition
ÍÍ  /
+
ÍÍ0 1
$num
ÍÍ2 3
]
ÍÍ3 4
==
ÍÍ5 7
$char
ÍÍ8 ;
)
ÍÍ; <
&&
ÎÎ 
(
ÎÎ 
content
ÎÎ 
[
ÎÎ  
currentPosition
ÎÎ  /
+
ÎÎ0 1
$num
ÎÎ2 4
]
ÎÎ4 5
==
ÎÎ6 8
$char
ÎÎ9 <
)
ÎÎ< =
)
ÏÏ 
{
ÌÌ 
found
ÓÓ 
=
ÓÓ 
true
ÓÓ  
;
ÓÓ  !
}
ÔÔ 
}
ÒÒ 
if
ÛÛ 
(
ÛÛ 
found
ÛÛ 
)
ÛÛ 
{
ÛÛ 
return
ÛÛ 

stepsAdded
ÛÛ  *
;
ÛÛ* +
}
ÛÛ, -
return
ıı 
-
ıı 
$num
ıı 
;
ıı 
}
˜˜ 	
private
˘˘ 
int
˘˘ .
 GetOffsetNextIndexOfGoogleMapUds
˘˘ 4
(
˘˘4 5
char
˘˘5 9
[
˘˘9 :
]
˘˘: ;
content
˘˘< C
,
˘˘C D
int
˘˘E H
pos
˘˘I L
,
˘˘L M
int
˘˘N Q
maxSteps
˘˘R Z
)
˘˘Z [
{
˙˙ 	
bool
˚˚ 
found
˚˚ 
=
˚˚ 
false
˚˚ 
;
˚˚ 
int
¸¸ 
currentPosition
¸¸ 
=
¸¸  !
pos
¸¸" %
;
¸¸% &
int
˝˝ 

stepsAdded
˝˝ 
=
˝˝ 
$num
˝˝ 
;
˝˝ 
while
ˇˇ 
(
ˇˇ 
(
ÄÄ 
!
ÄÄ 
found
ÄÄ 
)
ÄÄ 
&&
ÅÅ 
(
ÅÅ 
currentPosition
ÅÅ #
<
ÅÅ$ %
content
ÅÅ& -
.
ÅÅ- .
Length
ÅÅ. 4
-
ÅÅ5 6
$num
ÅÅ7 9
)
ÅÅ9 :
&&
ÇÇ 
(
ÇÇ 

stepsAdded
ÇÇ 
<=
ÇÇ !
maxSteps
ÇÇ" *
)
ÇÇ* +
)
ÉÉ 
{
ÑÑ 
currentPosition
ÖÖ 
+=
ÖÖ  "
$num
ÖÖ# $
;
ÖÖ$ %

stepsAdded
ÜÜ 
+=
ÜÜ 
$num
ÜÜ 
;
ÜÜ  
if
àà 
(
àà 
(
ââ 
content
ââ 
[
ââ 
currentPosition
ââ ,
]
ââ, -
==
ââ. 0
$char
ââ1 4
)
ââ4 5
&&
ää 
(
ää 
content
ää 
[
ää  
currentPosition
ää  /
+
ää0 1
$num
ää2 3
]
ää3 4
==
ää5 7
$char
ää8 ;
)
ää; <
&&
ãã 
(
ãã 
content
ãã 
[
ãã  
currentPosition
ãã  /
+
ãã0 1
$num
ãã2 3
]
ãã3 4
==
ãã5 7
$char
ãã8 ;
)
ãã; <
&&
åå 
(
åå 
content
åå 
[
åå  
currentPosition
åå  /
+
åå0 1
$num
åå2 3
]
åå3 4
==
åå5 7
$char
åå8 ;
)
åå; <
&&
çç 
(
çç 
content
çç 
[
çç  
currentPosition
çç  /
+
çç0 1
$num
çç2 3
]
çç3 4
==
çç5 7
$char
çç8 ;
)
çç; <
&&
éé 
(
éé 
content
éé 
[
éé  
currentPosition
éé  /
+
éé0 1
$num
éé2 3
]
éé3 4
==
éé5 7
$char
éé8 ;
)
éé; <
&&
èè 
(
èè 
content
èè 
[
èè  
currentPosition
èè  /
+
èè0 1
$num
èè2 3
]
èè3 4
==
èè5 7
$char
èè8 ;
)
èè; <
&&
êê 
(
êê 
content
êê 
[
êê  
currentPosition
êê  /
+
êê0 1
$num
êê2 3
]
êê3 4
==
êê5 7
$char
êê8 ;
)
êê; <
&&
ëë 
(
ëë 
content
ëë 
[
ëë  
currentPosition
ëë  /
+
ëë0 1
$num
ëë2 3
]
ëë3 4
==
ëë5 7
$char
ëë8 ;
)
ëë; <
&&
íí 
(
íí 
content
íí 
[
íí  
currentPosition
íí  /
+
íí0 1
$num
íí2 3
]
íí3 4
==
íí5 7
$char
íí8 ;
)
íí; <
&&
ìì 
(
ìì 
content
ìì 
[
ìì  
currentPosition
ìì  /
+
ìì0 1
$num
ìì2 4
]
ìì4 5
==
ìì6 8
$char
ìì9 <
)
ìì< =
&&
îî 
(
îî 
content
îî 
[
îî  
currentPosition
îî  /
+
îî0 1
$num
îî2 4
]
îî4 5
==
îî6 8
$char
îî9 <
)
îî< =
&&
ïï 
(
ïï 
content
ïï 
[
ïï  
currentPosition
ïï  /
+
ïï0 1
$num
ïï2 4
]
ïï4 5
==
ïï6 8
$char
ïï9 <
)
ïï< =
&&
ññ 
(
ññ 
content
ññ 
[
ññ  
currentPosition
ññ  /
+
ññ0 1
$num
ññ2 4
]
ññ4 5
==
ññ6 8
$char
ññ9 <
)
ññ< =
)
óó 
{
òò 
found
ôô 
=
ôô 
true
ôô  
;
ôô  !
}
öö 
}
úú 
if
ûû 
(
ûû 
found
ûû 
)
ûû 
{
ûû 
return
ûû 

stepsAdded
ûû  *
;
ûû* +
}
ûû, -
return
†† 
-
†† 
$num
†† 
;
†† 
}
¢¢ 	
private
§§ 
int
§§ )
GetOffsetNextIndexOfmojoMap
§§ /
(
§§/ 0
char
§§0 4
[
§§4 5
]
§§5 6
content
§§7 >
,
§§> ?
int
§§@ C
pos
§§D G
,
§§G H
int
§§I L
maxSteps
§§M U
)
§§U V
{
•• 	
bool
¶¶ 
found
¶¶ 
=
¶¶ 
false
¶¶ 
;
¶¶ 
int
ßß 
currentPosition
ßß 
=
ßß  !
pos
ßß" %
;
ßß% &
int
®® 

stepsAdded
®® 
=
®® 
$num
®® 
;
®® 
while
™™ 
(
™™ 
(
´´ 
!
´´ 
found
´´ 
)
´´ 
&&
¨¨ 
(
¨¨ 
currentPosition
¨¨ #
<
¨¨$ %
content
¨¨& -
.
¨¨- .
Length
¨¨. 4
-
¨¨5 6
$num
¨¨7 9
)
¨¨9 :
&&
≠≠ 
(
≠≠ 

stepsAdded
≠≠ 
<=
≠≠ !
maxSteps
≠≠" *
)
≠≠* +
)
ÆÆ 
{
ØØ 
currentPosition
∞∞ 
+=
∞∞  "
$num
∞∞# $
;
∞∞$ %

stepsAdded
±± 
+=
±± 
$num
±± 
;
±±  
if
≥≥ 
(
≥≥ 
(
¥¥ 
content
¥¥ 
[
¥¥ 
currentPosition
¥¥ ,
]
¥¥, -
==
¥¥. 0
$char
¥¥1 4
)
¥¥4 5
&&
µµ 
(
µµ 
content
µµ 
[
µµ  
currentPosition
µµ  /
+
µµ0 1
$num
µµ2 3
]
µµ3 4
==
µµ5 7
$char
µµ8 ;
)
µµ; <
&&
∂∂ 
(
∂∂ 
content
∂∂ 
[
∂∂  
currentPosition
∂∂  /
+
∂∂0 1
$num
∂∂2 3
]
∂∂3 4
==
∂∂5 7
$char
∂∂8 ;
)
∂∂; <
&&
∑∑ 
(
∑∑ 
content
∑∑ 
[
∑∑  
currentPosition
∑∑  /
+
∑∑0 1
$num
∑∑2 3
]
∑∑3 4
==
∑∑5 7
$char
∑∑8 ;
)
∑∑; <
&&
∏∏ 
(
∏∏ 
content
∏∏ 
[
∏∏  
currentPosition
∏∏  /
+
∏∏0 1
$num
∏∏2 3
]
∏∏3 4
==
∏∏5 7
$char
∏∏8 ;
)
∏∏; <
&&
ππ 
(
ππ 
content
ππ 
[
ππ  
currentPosition
ππ  /
+
ππ0 1
$num
ππ2 3
]
ππ3 4
==
ππ5 7
$char
ππ8 ;
)
ππ; <
&&
∫∫ 
(
∫∫ 
content
∫∫ 
[
∫∫  
currentPosition
∫∫  /
+
∫∫0 1
$num
∫∫2 3
]
∫∫3 4
==
∫∫5 7
$char
∫∫8 ;
)
∫∫; <
&&
ªª 
(
ªª 
content
ªª 
[
ªª  
currentPosition
ªª  /
+
ªª0 1
$num
ªª2 3
]
ªª3 4
==
ªª5 7
$char
ªª8 ;
)
ªª; <
&&
ºº 
(
ºº 
content
ºº 
[
ºº  
currentPosition
ºº  /
+
ºº0 1
$num
ºº2 3
]
ºº3 4
==
ºº5 7
$char
ºº8 ;
)
ºº; <
&&
ΩΩ 
(
ΩΩ 
content
ΩΩ 
[
ΩΩ  
currentPosition
ΩΩ  /
+
ΩΩ0 1
$num
ΩΩ2 3
]
ΩΩ3 4
==
ΩΩ5 7
$char
ΩΩ8 ;
)
ΩΩ; <
&&
ææ 
(
ææ 
content
ææ 
[
ææ  
currentPosition
ææ  /
+
ææ0 1
$num
ææ2 4
]
ææ4 5
==
ææ6 8
$char
ææ9 <
)
ææ< =
)
¿¿ 
{
¡¡ 
found
¬¬ 
=
¬¬ 
true
¬¬  
;
¬¬  !
}
√√ 
}
≈≈ 
if
«« 
(
«« 
found
«« 
)
«« 
{
«« 
return
«« 

stepsAdded
««  *
;
««* +
}
««, -
return
…… 
-
…… 
$num
…… 
;
…… 
}
ÀÀ 	
}
œœ 
}–– Ék
pD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\ScriptHandler.cs
	namespace

 	

mojoPortal


 
.

 
Web

 
.

 
	Framework

 "
{ 
public 

class 
ScriptHandler 
:  
IHttpHandler! -
{ 
public 
void 
ProcessRequest "
(" #
HttpContext# .
context/ 6
)6 7
{ 	
string 
queryString 
=  
HttpUtility! ,
., -
	UrlDecode- 6
(6 7
context7 >
.> ?
Request? F
.F G
QueryStringG R
.R S
ToStringS [
([ \
)\ ]
)] ^
;^ _
string 
[ 
] 
urlSplit 
= 
queryString  +
.+ ,
Split, 1
(1 2
$char2 5
)5 6
;6 7
string 
setInfo 
= 
urlSplit %
[% &
$num& '
]' (
;( )
string 
	urlPrefix 
= 
urlSplit '
[' (
$num( )
]) *
;* +
string 
[ 
] 
tokens 
= 
setInfo %
.% &
Split& +
(+ ,
$char, /
)/ 0
;0 1
string 
setName 
= 
tokens #
[# $
$num$ %
]% &
;& '
string 
[ 
] 
urlMaps 
= 
tokens %
[% &
$num& '
]' (
.( )
Split) .
(. /
$char/ 2
)2 3
;3 4
byte 
[ 
] 
encodedBytes 
;  
if   
(   
context   
.   
Cache   
[   
setInfo   %
]  % &
==  ' )
null  * .
)  . /
{!! 
	UrlMapSet## 
set## 
=## 
CombineScripts##  .
.##. /
LoadSets##/ 7
(##7 8
)##8 9
.##9 :
Find##: >
(##> ?
new$$ 
	Predicate$$ !
<$$! "
	UrlMapSet$$" +
>$$+ ,
($$, -
delegate$$- 5
($$5 6
	UrlMapSet$$6 ?
match$$@ E
)$$E F
{%% 
return&& 
match&& $
.&&$ %
Name&&% )
==&&* ,
setName&&- 4
;&&4 5
}'' 
)'' 
)'' 
;'' 
List** 
<** 
UrlMap** 
>** 
maps** !
=**" #
string**$ *
.*** +
IsNullOrEmpty**+ 8
(**8 9
tokens**9 ?
[**? @
$num**@ A
]**A B
)**B C
?**D E
set**F I
.**I J
Urls**J N
:++ 
set++ 
.++ 
Urls++ 
.++ 
FindAll++ &
(++& '
new++' *
	Predicate+++ 4
<++4 5
UrlMap++5 ;
>++; <
(++< =
delegate++= E
(++E F
UrlMap++F L
map++M P
)++P Q
{,, 
return-- 
Array-- $
.--$ %
BinarySearch--% 1
<--1 2
string--2 8
>--8 9
(--9 :
urlMaps--: A
,--A B
map--C F
.--F G
Name--G K
)--K L
>=--M O
$num--P Q
;--Q R
}.. 
).. 
).. 
;.. 
string00 
	urlScheme00  
=00! "
context00# *
.00* +
Request00+ 2
.002 3
Url003 6
.006 7
GetComponents007 D
(00D E
UriComponents00E R
.00R S
SchemeAndServer00S b
,00b c
	UriFormat00d m
.00m n
	Unescaped00n w
)00w x
;00x y
StringBuilder22 
buffer22 $
=22% &
new22' *
StringBuilder22+ 8
(228 9
)229 :
;22: ;
foreach33 
(33 
UrlMap33 
map33  #
in33$ &
maps33' +
)33+ ,
{44 
string<< 
fullUrl<< "
=<<# $
map<<% (
.<<( )
Url<<) ,
;<<, -
if== 
(== 
map== 
.== 
Url== 
.==  

StartsWith==  *
(==* +
$str==+ 4
)==4 5
)==5 6
fullUrl==7 >
===? @
map==A D
.==D E
Url==E H
;==H I
else>> 
if>> 
(>> 
map>>  
.>>  !
Url>>! $
.>>$ %

StartsWith>>% /
(>>/ 0
context>>0 7
.>>7 8
Request>>8 ?
.>>? @
ApplicationPath>>@ O
)>>O P
)>>P Q
fullUrl>>R Y
=>>Z [
	urlScheme>>\ e
+>>f g
map>>h k
.>>k l
Url>>l o
;>>o p
else?? 
fullUrl??  
=??! "
	urlScheme??# ,
+??- .
	urlPrefix??/ 8
+??9 :
map??; >
.??> ?
Url??? B
;??B C
stringAA 
mapUrlForJSAA &
=AA' (
HttpUtilityAA) 4
.AA4 5

HtmlDecodeAA5 ?
(AA? @
mapAA@ C
.AAC D
UrlAAD G
)AAG H
.AAH I
ReplaceAAI P
(AAP Q
$strAAQ T
,AAT U
$strAAV Z
)AAZ [
;AA[ \
HttpWebRequestBB "
requestBB# *
=BB+ ,
thisBB- 1
.BB1 2 
CreateHttpWebRequestBB2 F
(BBF G
fullUrlBBG N
)BBN O
;BBO P
tryCC 
{DD 
usingEE 
(EE 
HttpWebResponseEE .
responseEE/ 7
=EE8 9
requestEE: A
.EEA B
GetResponseEEB M
(EEM N
)EEN O
asEEP R
HttpWebResponseEES b
)EEb c
{FF 
ifGG 
(GG  
responseGG  (
.GG( )

StatusCodeGG) 3
==GG4 6
HttpStatusCodeGG7 E
.GGE F
OKGGF H
)GGH I
{HH 
usingII  %
(II& '
StreamReaderII' 3
readerII4 :
=II; <
newII= @
StreamReaderIIA M
(IIM N
responseIIN V
.IIV W
GetResponseStreamIIW h
(IIh i
)IIi j
)IIj k
)IIk l
{JJ  !
stringKK$ *
responseContentKK+ :
=KK; <
readerKK= C
.KKC D
	ReadToEndKKD M
(KKM N
)KKN O
;KKO P
bufferLL$ *
.LL* +
AppendLL+ 1
(LL1 2
responseContentLL2 A
)LLA B
;LLB C
bufferMM$ *
.MM* +
AppendMM+ 1
(MM1 2
EnvironmentMM2 =
.MM= >
NewLineMM> E
)MME F
;MMF G
bufferNN$ *
.NN* +
AppendNN+ 1
(NN1 2
$strNO2 m
+OOn o
mapUrlForJSOOp {
+OO| }
$strOQ~ ;
+QQ< =
mapUrlForJSQQ> I
+QQJ K
$strQQL R
)QQR S
;QQS T
bufferRR$ *
.RR* +
AppendRR+ 1
(RR1 2
EnvironmentRR2 =
.RR= >
NewLineRR> E
)RRE F
;RRF G
}SS  !
}TT 
elseUU  
{VV 
bufferWW  &
.WW& '
AppendWW' -
(WW- .
$strWW. P
+WWQ R
mapUrlForJSWWS ^
+WW_ `
$str	WWa Å
+
WWÇ É
map
WWÑ á
.
WWá à
Name
WWà å
+
WWç é
$str
WWè ≤
)
WW≤ ≥
;
WW≥ ¥
bufferXX  &
.XX& '
AppendXX' -
(XX- .
EnvironmentXX. 9
.XX9 :
NewLineXX: A
)XXA B
;XXB C
}YY 
}ZZ 
}[[ 
catch\\ 
(\\ 
	Exception\\ $
)\\$ %
{]] 
buffer^^ 
.^^ 
Append^^ %
(^^% &
$str^^& H
+^^I J
mapUrlForJS^^K V
+^^W X
$str^^Y y
+^^z {
map^^| 
.	^^ Ä
Name
^^Ä Ñ
+
^^Ö Ü
$str
^^á ™
)
^^™ ´
;
^^´ ¨
buffer__ 
.__ 
Append__ %
(__% &
Environment__& 1
.__1 2
NewLine__2 9
)__9 :
;__: ;
}`` 
}aa 
buffercc 
.cc 
Appendcc 
(cc 
$strcu 
)uu 
;uu 
stringww 
responseStringww %
=ww& '
bufferww( .
.ww. /
ToStringww/ 7
(ww7 8
)ww8 9
;ww9 :
encodedBytesxx 
=xx 
contextxx &
.xx& '
Requestxx' .
.xx. /
ContentEncodingxx/ >
.xx> ?
GetBytesxx? G
(xxG H
responseStringxxH V
)xxV W
;xxW X
}{{ 
else|| 
{}} 
encodedBytes~~ 
=~~ 
context~~ &
.~~& '
Cache~~' ,
[~~, -
setInfo~~- 4
]~~4 5
as~~6 8
byte~~9 =
[~~= >
]~~> ?
;~~? @
} 
context
ÅÅ 
.
ÅÅ 
Response
ÅÅ 
.
ÅÅ 
ContentType
ÅÅ (
=
ÅÅ) *
$str
ÅÅ+ <
;
ÅÅ< =
context
ÇÇ 
.
ÇÇ 
Response
ÇÇ 
.
ÇÇ 
ContentEncoding
ÇÇ ,
=
ÇÇ- .
context
ÇÇ/ 6
.
ÇÇ6 7
Request
ÇÇ7 >
.
ÇÇ> ?
ContentEncoding
ÇÇ? N
;
ÇÇN O
context
ÉÉ 
.
ÉÉ 
Response
ÉÉ 
.
ÉÉ 
Cache
ÉÉ "
.
ÉÉ" #
	SetMaxAge
ÉÉ# ,
(
ÉÉ, -
TimeSpan
ÉÉ- 5
.
ÉÉ5 6
FromDays
ÉÉ6 >
(
ÉÉ> ?
$num
ÉÉ? A
)
ÉÉA B
)
ÉÉB C
;
ÉÉC D
context
ÑÑ 
.
ÑÑ 
Response
ÑÑ 
.
ÑÑ 
Cache
ÑÑ "
.
ÑÑ" #

SetExpires
ÑÑ# -
(
ÑÑ- .
DateTime
ÑÑ. 6
.
ÑÑ6 7
Now
ÑÑ7 :
.
ÑÑ: ;
AddDays
ÑÑ; B
(
ÑÑB C
$num
ÑÑC E
)
ÑÑE F
)
ÑÑF G
;
ÑÑG H
context
ÖÖ 
.
ÖÖ 
Response
ÖÖ 
.
ÖÖ 
Cache
ÖÖ "
.
ÖÖ" #
SetCacheability
ÖÖ# 2
(
ÖÖ2 3
HttpCacheability
ÖÖ3 C
.
ÖÖC D
Private
ÖÖD K
)
ÖÖK L
;
ÖÖL M
context
ÜÜ 
.
ÜÜ 
Response
ÜÜ 
.
ÜÜ 
AppendHeader
ÜÜ )
(
ÜÜ) *
$str
ÜÜ* :
,
ÜÜ: ;
encodedBytes
ÜÜ< H
.
ÜÜH I
Length
ÜÜI O
.
ÜÜO P
ToString
ÜÜP X
(
ÜÜX Y
)
ÜÜY Z
)
ÜÜZ [
;
ÜÜ[ \
context
àà 
.
àà 
Response
àà 
.
àà 
OutputStream
àà )
.
àà) *
Write
àà* /
(
àà/ 0
encodedBytes
àà0 <
,
àà< =
$num
àà> ?
,
àà? @
encodedBytes
ààA M
.
ààM N
Length
ààN T
)
ààT U
;
ààU V
context
ââ 
.
ââ 
Response
ââ 
.
ââ 
Flush
ââ "
(
ââ" #
)
ââ# $
;
ââ$ %
}
ää 	
public
åå 
bool
åå 

IsReusable
åå 
{
çç 	
get
éé 
{
èè 
return
êê 
false
êê 
;
êê 
}
ëë 
}
íí 	
private
îî 
HttpWebRequest
îî "
CreateHttpWebRequest
îî 3
(
îî3 4
string
îî4 :
url
îî; >
)
îî> ?
{
ïï 	
HttpWebRequest
ññ 
request
ññ "
=
ññ# $

WebRequest
ññ% /
.
ññ/ 0
Create
ññ0 6
(
ññ6 7
url
ññ7 :
)
ññ: ;
as
ññ< >
HttpWebRequest
ññ? M
;
ññM N
request
óó 
.
óó 
Headers
óó 
.
óó 
Add
óó 
(
óó  
$str
óó  1
,
óó1 2
$str
óó3 9
)
óó9 :
;
óó: ;
request
òò 
.
òò $
AutomaticDecompression
òò *
=
òò+ ,"
DecompressionMethods
òò- A
.
òòA B
GZip
òòB F
;
òòF G
request
ôô 
.
ôô *
MaximumAutomaticRedirections
ôô 0
=
ôô1 2
$num
ôô3 4
;
ôô4 5
request
öö 
.
öö *
MaximumResponseHeadersLength
öö 0
=
öö1 2
$num
öö3 4
*
öö5 6
$num
öö7 ;
;
öö; <
request
õõ 
.
õõ 
ReadWriteTimeout
õõ $
=
õõ% &
$num
õõ' (
*
õõ) *
$num
õõ+ /
;
õõ/ 0
request
úú 
.
úú 
Timeout
úú 
=
úú 
$num
úú 
*
úú  !
$num
úú" &
;
úú& '
return
ûû 
request
ûû 
;
ûû 
}
üü 	
}
†† 
}°° òŸ
qD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\SecurityHelper.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public 

static 
class 
SecurityHelper &
{ 
private 
static 
readonly 
ILog  $
log% (
=) *

LogManager+ 5
.5 6
	GetLogger6 ?
(? @
typeof@ F
(F G
SecurityHelperG U
)U V
)V W
;W X
public 
const 
string '
RegexRelativeImageUrlPatern 7
=8 9
$str: t
;t u
public 
const 
string "
RegexAnyImageUrlPatern 2
=3 4
$str5 n
;n o
public 
const 
string "
RegexAnyHttpOrHttpsUrl 2
=3 4
$str5 R
;R S
public!! 
const!! 
string!! '
RegexEmailValidationPattern!! 7
="" 
$str"" m
;""m n
public55 
static55 
string55 #
GetEmailRegexExpression55 4
(554 5
)555 6
{66 	
string77 
overrideRegex77  
=77! "
ConfigHelper77# /
.77/ 0
GetStringProperty770 A
(77A B
$str77B T
,77T U
string77V \
.77\ ]
Empty77] b
)77b c
;77c d
if88 
(88 
overrideRegex88 
.88 
Length88 $
>88% &
$num88' (
)88( )
{88* +
return88, 2
overrideRegex883 @
;88@ A
}88B C
return;; '
RegexEmailValidationPattern;; .
;;;. /
}<< 	
public?? 
static?? 
bool?? 
IsValidEmailAddress?? .
(??. /
string??/ 5
email??6 ;
)??; <
{@@ 	
ifAA 
(AA 
stringAA 
.AA 
IsNullOrEmptyAA $
(AA$ %
emailAA% *
)AA* +
)AA+ ,
{AA- .
returnAA/ 5
falseAA6 ;
;AA; <
}AA= >
tryCC 
{DD 
MailAddressEE 
mEE 
=EE 
newEE  #
MailAddressEE$ /
(EE/ 0
emailEE0 5
)EE5 6
;EE6 7
returnGG 
trueGG 
;GG 
}HH 
catchII 
(II 
FormatExceptionII "
)II" #
{II$ %
}II& '
returnKK 
falseKK 
;KK 
}LL 	
publicaa 
staticaa 
stringaa 2
&GetRegexValidationForAllowedExtensionsaa C
(aaC D
stringaaD J#
pipeSeparatedExtensionsaaK b
)aab c
{bb 	
StringBuildercc 
regexcc 
=cc  !
newcc" %
StringBuildercc& 3
(cc3 4
)cc4 5
;cc5 6
regexgg 
.gg 
Appendgg 
(gg 
$strgg )
)gg) *
;gg* +
Listii 
<ii 
stringii 
>ii 
allowedExtensionsii *
=ii+ ,
StringHelperii- 9
.ii9 :
SplitOnPipesii: F
(iiF G#
pipeSeparatedExtensionsiiG ^
)ii^ _
;ii_ `
stringjj 
pipejj 
=jj 
stringjj  
.jj  !
Emptyjj! &
;jj& '
foreachkk 
(kk 
stringkk 
extkk 
inkk  "
allowedExtensionskk# 4
)kk4 5
{ll 
regexmm 
.mm 
Appendmm 
(mm 
pipemm !
+mm" #
extmm$ '
.mm' (
Replacemm( /
(mm/ 0
$strmm0 3
,mm3 4
stringmm4 :
.mm: ;
Emptymm; @
)mm@ A
)mmA B
;mmB C
pipenn 
=nn 
$strnn 
;nn 
regexoo 
.oo 
Appendoo 
(oo 
pipeoo !
+oo" #
extoo$ '
.oo' (
Replaceoo( /
(oo/ 0
$stroo0 3
,oo3 4
stringoo5 ;
.oo; <
Emptyoo< A
)ooA B
.ooB C
ToUpperooC J
(ooJ K
)ooK L
)ooL M
;ooM N
}pp 
regexrr 
.rr 
Appendrr 
(rr 
$strrr /
)rr/ 0
;rr0 1
pipett 
=tt 
stringtt 
.tt 
Emptytt 
;tt  
foreachuu 
(uu 
stringuu 
extuu 
inuu  "
allowedExtensionsuu# 4
)uu4 5
{vv 
regexww 
.ww 
Appendww 
(ww 
pipeww !
+ww" #
extww$ '
.ww' (
Replaceww( /
(ww/ 0
$strww0 3
,ww3 4
stringww5 ;
.ww; <
Emptyww< A
)wwA B
)wwB C
;wwC D
pipexx 
=xx 
$strxx 
;xx 
regexyy 
.yy 
Appendyy 
(yy 
pipeyy !
+yy" #
extyy$ '
.yy' (
Replaceyy( /
(yy/ 0
$stryy0 3
,yy3 4
stringyy5 ;
.yy; <
Emptyyy< A
)yyA B
.yyB C
ToUpperyyC J
(yyJ K
)yyK L
)yyL M
;yyM N
}zz 
regex|| 
.|| 
Append|| 
(|| 
$str|| 
)||  
;||  !
return~~ 
regex~~ 
.~~ 
ToString~~ !
(~~! "
)~~" #
;~~# $
}
ÅÅ 	
public
ÉÉ 
static
ÉÉ 
string
ÉÉ F
8GetRegexValidationForAllowedExtensionsJqueryFileUploader
ÉÉ U
(
ÉÉU V
string
ÉÉV \%
pipeSeparatedExtensions
ÉÉ] t
)
ÉÉt u
{
ÑÑ 	
StringBuilder
ÖÖ 
regex
ÖÖ 
=
ÖÖ  !
new
ÖÖ" %
StringBuilder
ÖÖ& 3
(
ÖÖ3 4
)
ÖÖ4 5
;
ÖÖ5 6
regex
ââ 
.
ââ 
Append
ââ 
(
ââ 
$str
ââ %
)
ââ% &
;
ââ& '
List
ãã 
<
ãã 
string
ãã 
>
ãã 
allowedExtensions
ãã *
=
ãã+ ,
StringHelper
ãã- 9
.
ãã9 :
SplitOnPipes
ãã: F
(
ããF G%
pipeSeparatedExtensions
ããG ^
)
ãã^ _
;
ãã_ `
string
åå 
pipe
åå 
=
åå 
string
åå  
.
åå  !
Empty
åå! &
;
åå& '
foreach
çç 
(
çç 
string
çç 
ext
çç 
in
çç  "
allowedExtensions
çç# 4
)
çç4 5
{
éé 
regex
èè 
.
èè 
Append
èè 
(
èè 
pipe
èè !
+
èè" #
ext
èè$ '
.
èè' (
Replace
èè( /
(
èè/ 0
$str
èè0 3
,
èè3 4
string
èè5 ;
.
èè; <
Empty
èè< A
)
èèA B
)
èèB C
;
èèC D
pipe
êê 
=
êê 
$str
êê 
;
êê 
regex
ëë 
.
ëë 
Append
ëë 
(
ëë 
pipe
ëë !
+
ëë" #
ext
ëë$ '
.
ëë' (
Replace
ëë( /
(
ëë/ 0
$str
ëë0 3
,
ëë3 4
string
ëë5 ;
.
ëë; <
Empty
ëë< A
)
ëëA B
.
ëëB C
ToUpper
ëëC J
(
ëëJ K
)
ëëK L
)
ëëL M
;
ëëM N
}
íí 
regex
ûû 
.
ûû 
Append
ûû 
(
ûû 
$str
ûû 
)
ûû  
;
ûû  !
return
†† 
regex
†† 
.
†† 
ToString
†† !
(
††! "
)
††" #
;
††# $
}
££ 	
public
¶¶ 
static
¶¶ 
string
¶¶ 3
%GetMaxLengthRegexValidationExpression
¶¶ B
(
¶¶B C
int
¶¶C F
length
¶¶G M
)
¶¶M N
{
ßß 	
return
®® 
$str
®®  
+
®®! "
length
®®# )
.
®®) *
ToInvariantString
®®* ;
(
®®; <
)
®®< =
+
®®> ?
$str
®®@ C
;
®®C D
}
©© 	
public
¨¨ 
static
¨¨ 
string
¨¨ '
PreventCrossSiteScripting
¨¨ 6
(
¨¨6 7
String
¨¨7 =
html
¨¨> B
)
¨¨B C
{
≠≠ 	
String
ØØ 
errorHeader
ØØ 
=
ØØ  
ResourceHelper
ØØ! /
.
ØØ/ 0 
GetMessageTemplate
ØØ0 B
(
ØØB C
$str
ØØC i
)
ØØi j
;
ØØj k
return
∞∞ '
PreventCrossSiteScripting
∞∞ ,
(
∞∞, -
html
∞∞- 1
,
∞∞1 2
errorHeader
∞∞3 >
)
∞∞> ?
;
∞∞? @
}
≤≤ 	
public
¥¥ 
static
¥¥ 
string
¥¥ '
PreventCrossSiteScripting
¥¥ 6
(
¥¥6 7
String
¥¥7 =
html
¥¥> B
,
¥¥B C
String
¥¥D J
errorHeader
¥¥K V
)
¥¥V W
{
µµ 	
return
∑∑ '
PreventCrossSiteScripting
∑∑ ,
(
∑∑, -
html
∑∑- 1
,
∑∑1 2
errorHeader
∑∑3 >
,
∑∑> ?
false
∑∑@ E
)
∑∑E F
;
∑∑F G
}
ππ 	
public
ªª 
static
ªª 
string
ªª '
PreventCrossSiteScripting
ªª 6
(
ªª6 7
String
ªª7 =
html
ªª> B
,
ªªB C
String
ªªD J
errorHeader
ªªK V
,
ªªV W
bool
ªªX \#
removeMarkupOnFailure
ªª] r
)
ªªr s
{
ºº 	
try
ææ 
{
øø 
	XssFilter
¿¿ 
filter
¿¿  
=
¿¿! "
GetXssFilter
¿¿# /
(
¿¿/ 0
)
¿¿0 1
;
¿¿1 2
if
¬¬ 
(
¬¬ 
filter
¬¬ 
==
¬¬ 
null
¬¬ "
)
¬¬" #
{
√√ 
log
ƒƒ 
.
ƒƒ 
Info
ƒƒ 
(
ƒƒ 
$str
ƒƒ 1
)
ƒƒ1 2
;
ƒƒ2 3
return
≈≈ 
html
≈≈ 
.
≈≈  
Replace
≈≈  '
(
≈≈' (
$str
≈≈( 0
,
≈≈0 1
$str
≈≈2 ;
)
≈≈; <
;
≈≈< =
}
∆∆ 
return
…… 
filter
…… 
.
…… 
FilterFragment
…… ,
(
……, -
html
……- 1
)
……1 2
;
……2 3
}
   
catch
ÀÀ 
(
ÀÀ 
	Exception
ÀÀ 
ex
ÀÀ 
)
ÀÀ  
{
ÃÃ 
if
ÕÕ 
(
ÕÕ #
removeMarkupOnFailure
ÕÕ )
)
ÕÕ) *
{
ŒŒ 
return
œœ 
String
œœ !
.
œœ! "
Format
œœ" (
(
œœ( )
$str
œœ) _
,
œœ_ `
errorHeader
œœa l
,
œœl m
HttpUtility
––) 4
.
––4 5

HtmlEncode
––5 ?
(
––? @
RemoveMarkup
––@ L
(
––L M
html
––M Q
)
––Q R
)
––R S
)
––S T
;
––T U
}
—— 
else
““ 
{
”” 
return
‘‘ 
String
‘‘ !
.
‘‘! "
Format
‘‘" (
(
‘‘( )
$str
‘‘) c
,
‘‘c d
errorHeader
‘‘e p
,
‘‘p q
HttpUtility
’’) 4
.
’’4 5

HtmlEncode
’’5 ?
(
’’? @
ex
’’@ B
.
’’B C
Message
’’C J
)
’’J K
,
’’K L
HttpUtility
’’M X
.
’’X Y

HtmlEncode
’’Y c
(
’’c d
html
’’d h
)
’’h i
)
’’i j
;
’’j k
}
÷÷ 
}
◊◊ 
}
ÿÿ 	
public
‹‹ 
static
‹‹ 
string
‹‹ 
SanitizeHtml
‹‹ )
(
‹‹) *
String
‹‹* 0
html
‹‹1 5
)
‹‹5 6
{
›› 	
try
ﬂﬂ 
{
‡‡ 
	XssFilter
·· 
filter
··  
=
··! "
GetXssFilter
··# /
(
··/ 0
)
··0 1
;
··1 2
if
„„ 
(
„„ 
filter
„„ 
==
„„ 
null
„„ "
)
„„" #
{
‰‰ 
log
ÂÂ 
.
ÂÂ 
Info
ÂÂ 
(
ÂÂ 
$str
ÂÂ 1
)
ÂÂ1 2
;
ÂÂ2 3
return
ÁÁ 
RemoveMarkup
ÁÁ '
(
ÁÁ' (
html
ÁÁ( ,
)
ÁÁ, -
;
ÁÁ- .
}
ËË 
return
ÎÎ 
filter
ÎÎ 
.
ÎÎ 
FilterFragment
ÎÎ ,
(
ÎÎ, -
html
ÎÎ- 1
)
ÎÎ1 2
;
ÎÎ2 3
}
ÏÏ 
catch
ÌÌ 
(
ÌÌ 
	Exception
ÌÌ 
)
ÌÌ 
{
ÓÓ 
return
 
RemoveMarkup
 "
(
" #
html
# '
)
' (
;
( )
}
ÚÚ 
}
ÛÛ 	
private
ıı 
static
ıı 
	XssFilter
ıı  
GetXssFilter
ıı! -
(
ıı- .
)
ıı. /
{
ˆˆ 	
if
˜˜ 
(
˜˜ 
HttpContext
˜˜ 
.
˜˜ 
Current
˜˜ #
==
˜˜$ &
null
˜˜' +
)
˜˜+ ,
return
˜˜- 3
null
˜˜4 8
;
˜˜8 9
string
˘˘ 
key
˘˘ 
=
˘˘ 
$str
˘˘ $
;
˘˘$ %
if
˚˚ 
(
˚˚ 
HttpContext
˚˚ 
.
˚˚ 
Current
˚˚ #
.
˚˚# $
Items
˚˚$ )
[
˚˚) *
key
˚˚* -
]
˚˚- .
!=
˚˚/ 1
null
˚˚2 6
)
˚˚6 7
{
¸¸ 
return
˝˝ 
(
˝˝ 
	XssFilter
˝˝ !
)
˝˝! "
HttpContext
˝˝" -
.
˝˝- .
Current
˝˝. 5
.
˝˝5 6
Items
˝˝6 ;
[
˝˝; <
key
˝˝< ?
]
˝˝? @
;
˝˝@ A
}
˛˛ 
else
ˇˇ 
{
ÄÄ 
string
ÅÅ 
schemaFolder
ÅÅ #
=
ÅÅ$ %
HttpContext
ÅÅ& 1
.
ÅÅ1 2
Current
ÅÅ2 9
.
ÅÅ9 :
Server
ÅÅ: @
.
ÅÅ@ A
MapPath
ÅÅA H
(
ÅÅH I
WebUtils
ÅÅI Q
.
ÅÅQ R 
GetApplicationRoot
ÅÅR d
(
ÅÅd e
)
ÅÅe f
+
ÅÅg h
$str
ÅÅi {
)
ÅÅ{ |
;
ÅÅ| }
string
ÇÇ 

schemaFile
ÇÇ !
=
ÇÇ" #
Path
ÇÇ$ (
.
ÇÇ( )
Combine
ÇÇ) 0
(
ÇÇ0 1
schemaFolder
ÇÇ1 =
,
ÇÇ= >
$str
ÇÇ? M
)
ÇÇM N
;
ÇÇN O
	XssFilter
ÑÑ 
filter
ÑÑ  
=
ÑÑ! "
	XssFilter
ÑÑ# ,
.
ÑÑ, -
GetForSchema
ÑÑ- 9
(
ÑÑ9 :

schemaFile
ÑÑ: D
)
ÑÑD E
;
ÑÑE F
HttpContext
ÜÜ 
.
ÜÜ 
Current
ÜÜ #
.
ÜÜ# $
Items
ÜÜ$ )
[
ÜÜ) *
key
ÜÜ* -
]
ÜÜ- .
=
ÜÜ/ 0
filter
ÜÜ1 7
;
ÜÜ7 8
return
àà 
filter
àà 
;
àà 
}
ââ 
}
åå 	
public
øø 
static
øø 
string
øø 
RemoveMarkup
øø )
(
øø) *
string
øø* 0
text
øø1 5
)
øø5 6
{
¿¿ 	
if
¡¡ 
(
¡¡ 
string
¡¡ 
.
¡¡ 
IsNullOrEmpty
¡¡ $
(
¡¡$ %
text
¡¡% )
)
¡¡) *
)
¡¡* +
{
¡¡, -
return
¡¡. 4
text
¡¡5 9
;
¡¡9 :
}
¡¡; <
text
¬¬ 
=
¬¬ 
text
¬¬ 
.
¬¬ 
Replace
¬¬ 
(
¬¬  
$str
¬¬  ,
,
¬¬, -
string
¬¬. 4
.
¬¬4 5
Empty
¬¬5 :
)
¬¬: ;
.
¬¬; <
Replace
¬¬< C
(
¬¬C D
$str
¬¬D G
,
¬¬G H
string
¬¬I O
.
¬¬O P
Empty
¬¬P U
)
¬¬U V
.
¬¬V W
Replace
¬¬W ^
(
¬¬^ _
$str
¬¬_ b
,
¬¬b c
string
¬¬d j
.
¬¬j k
Empty
¬¬k p
)
¬¬p q
;
¬¬q r
text
√√ 
=
√√ 
Regex
√√ 
.
√√ 
Replace
√√  
(
√√  !
text
√√! %
,
√√% &
$str
√√' 0
,
√√0 1
$str
√√2 5
,
√√5 6
RegexOptions
√√7 C
.
√√C D

IgnoreCase
√√D N
)
√√N O
;
√√O P
return
«« 
Regex
«« 
.
«« 
Replace
««  
(
««  !
text
««! %
.
««% &
Replace
««& -
(
««- .
$str
««. 2
,
««2 3
$str
««4 7
)
««7 8
,
««8 9
$str
««: B
,
««B C
$str
««D F
,
««F G
RegexOptions
««H T
.
««T U

Singleline
««U _
)
««_ `
;
««` a
}
»» 	
public
   
static
   
string
   !
RemoveAngleBrackets
   0
(
  0 1
string
  1 7
text
  8 <
)
  < =
{
ÀÀ 	
if
ÃÃ 
(
ÃÃ 
string
ÃÃ 
.
ÃÃ 
IsNullOrEmpty
ÃÃ $
(
ÃÃ$ %
text
ÃÃ% )
)
ÃÃ) *
)
ÃÃ* +
{
ÃÃ, -
return
ÃÃ. 4
text
ÃÃ5 9
;
ÃÃ9 :
}
ÃÃ; <
return
ŒŒ 
text
ŒŒ 
.
ŒŒ 
Replace
ŒŒ 
(
ŒŒ  
$str
ŒŒ  #
,
ŒŒ# $
string
ŒŒ% +
.
ŒŒ+ ,
Empty
ŒŒ, 1
)
ŒŒ1 2
.
ŒŒ2 3
Replace
ŒŒ3 :
(
ŒŒ: ;
$str
ŒŒ; >
,
ŒŒ> ?
string
ŒŒ@ F
.
ŒŒF G
Empty
ŒŒG L
)
ŒŒL M
;
ŒŒM N
}
œœ 	
public
““ 
static
““ 
string
““ )
GetRandomASPNET20machinekey
““ 8
(
““8 9
)
““9 :
{
”” 	
StringBuilder
‘‘ 

machinekey
‘‘ $
=
‘‘% &
new
‘‘' *
StringBuilder
‘‘+ 8
(
‘‘8 9
)
‘‘9 :
;
‘‘: ;
string
’’ 
	key64byte
’’ 
=
’’ 
GetRandomKey
’’ +
(
’’+ ,
$num
’’, .
)
’’. /
;
’’/ 0
string
÷÷ 
	key32byte
÷÷ 
=
÷÷ 
GetRandomKey
÷÷ +
(
÷÷+ ,
$num
÷÷, .
)
÷÷. /
;
÷÷/ 0

machinekey
◊◊ 
.
◊◊ 
Append
◊◊ 
(
◊◊ 
$str
◊◊ .
)
◊◊. /
;
◊◊/ 0

machinekey
ÿÿ 
.
ÿÿ 
Append
ÿÿ 
(
ÿÿ 
$str
ÿÿ 0
+
ÿÿ1 2
	key64byte
ÿÿ3 <
+
ÿÿ= >
$str
ÿÿ? E
)
ÿÿE F
;
ÿÿF G

machinekey
ŸŸ 
.
ŸŸ 
Append
ŸŸ 
(
ŸŸ 
$str
ŸŸ 0
+
ŸŸ1 2
	key32byte
ŸŸ3 <
+
ŸŸ= >
$str
ŸŸ? E
)
ŸŸE F
;
ŸŸF G

machinekey
⁄⁄ 
.
⁄⁄ 
Append
⁄⁄ 
(
⁄⁄ 
$str
⁄⁄ H
)
⁄⁄H I
;
⁄⁄I J

machinekey
€€ 
.
€€ 
Append
€€ 
(
€€ 
$str
€€ $
)
€€$ %
;
€€% &
return
‹‹ 

machinekey
‹‹ 
.
‹‹ 
ToString
‹‹ &
(
‹‹& '
)
‹‹' (
;
‹‹( )
}
›› 	
public
·· 
static
·· 
string
·· 
GetRandomKey
·· )
(
··) *
int
··* -

bytelength
··. 8
)
··8 9
{
‚‚ 	
byte
„„ 
[
„„ 
]
„„ 
buff
„„ 
=
„„ 
new
„„ 
byte
„„ "
[
„„" #

bytelength
„„# -
]
„„- .
;
„„. /&
RNGCryptoServiceProvider
‰‰ $
rng
‰‰% (
=
‰‰) *
new
‰‰+ .&
RNGCryptoServiceProvider
‰‰/ G
(
‰‰G H
)
‰‰H I
;
‰‰I J
rng
ÂÂ 
.
ÂÂ 
GetBytes
ÂÂ 
(
ÂÂ 
buff
ÂÂ 
)
ÂÂ 
;
ÂÂ 
StringBuilder
ÊÊ 
sb
ÊÊ 
=
ÊÊ 
new
ÊÊ "
StringBuilder
ÊÊ# 0
(
ÊÊ0 1

bytelength
ÊÊ1 ;
*
ÊÊ< =
$num
ÊÊ> ?
)
ÊÊ? @
;
ÊÊ@ A
for
ÁÁ 
(
ÁÁ 
int
ÁÁ 
i
ÁÁ 
=
ÁÁ 
$num
ÁÁ 
;
ÁÁ 
i
ÁÁ 
<
ÁÁ 
buff
ÁÁ  $
.
ÁÁ$ %
Length
ÁÁ% +
;
ÁÁ+ ,
i
ÁÁ- .
++
ÁÁ. 0
)
ÁÁ0 1
{
ËË 
sb
ÈÈ 
.
ÈÈ 
Append
ÈÈ 
(
ÈÈ 
string
ÈÈ  
.
ÈÈ  !
Format
ÈÈ! '
(
ÈÈ' (
$str
ÈÈ( 0
,
ÈÈ0 1
buff
ÈÈ2 6
[
ÈÈ6 7
i
ÈÈ7 8
]
ÈÈ8 9
)
ÈÈ9 :
)
ÈÈ: ;
;
ÈÈ; <
}
ÍÍ 
return
ÎÎ 
sb
ÎÎ 
.
ÎÎ 
ToString
ÎÎ 
(
ÎÎ 
)
ÎÎ  
;
ÎÎ  !
}
ÏÏ 	
public
ÓÓ 
static
ÓÓ 
void
ÓÓ !
DisableBrowserCache
ÓÓ .
(
ÓÓ. /
)
ÓÓ/ 0
{
ÔÔ 	
if
 
(
 
HttpContext
 
.
 
Current
 #
!=
$ &
null
' +
)
+ ,
{
ÒÒ 
HttpContext
ÚÚ 
.
ÚÚ 
Current
ÚÚ #
.
ÚÚ# $
Response
ÚÚ$ ,
.
ÚÚ, -
Cache
ÚÚ- 2
.
ÚÚ2 3

SetExpires
ÚÚ3 =
(
ÚÚ= >
new
ÚÚ> A
DateTime
ÚÚB J
(
ÚÚJ K
$num
ÚÚK O
,
ÚÚO P
$num
ÚÚQ R
,
ÚÚR S
$num
ÚÚT U
,
ÚÚU V
$num
ÚÚW Y
,
ÚÚY Z
$num
ÚÚ[ \
,
ÚÚ\ ]
$num
ÚÚ^ _
,
ÚÚ_ `
DateTimeKind
ÚÚa m
.
ÚÚm n
Utc
ÚÚn q
)
ÚÚq r
)
ÚÚr s
;
ÚÚs t
HttpContext
ÛÛ 
.
ÛÛ 
Current
ÛÛ #
.
ÛÛ# $
Response
ÛÛ$ ,
.
ÛÛ, -
Cache
ÛÛ- 2
.
ÛÛ2 3

SetNoStore
ÛÛ3 =
(
ÛÛ= >
)
ÛÛ> ?
;
ÛÛ? @
HttpContext
ÙÙ 
.
ÙÙ 
Current
ÙÙ #
.
ÙÙ# $
Response
ÙÙ$ ,
.
ÙÙ, -
Cache
ÙÙ- 2
.
ÙÙ2 3
SetCacheability
ÙÙ3 B
(
ÙÙB C
HttpCacheability
ÙÙC S
.
ÙÙS T
NoCache
ÙÙT [
)
ÙÙ[ \
;
ÙÙ\ ]
HttpContext
ıı 
.
ıı 
Current
ıı #
.
ıı# $
Response
ıı$ ,
.
ıı, -
Cache
ıı- 2
.
ıı2 3
SetRevalidation
ıı3 B
(
ııB C#
HttpCacheRevalidation
ııC X
.
ııX Y
	AllCaches
ııY b
)
ııb c
;
ııc d
HttpContext
ˆˆ 
.
ˆˆ 
Current
ˆˆ #
.
ˆˆ# $
Response
ˆˆ$ ,
.
ˆˆ, -
Cache
ˆˆ- 2
.
ˆˆ2 3"
AppendCacheExtension
ˆˆ3 G
(
ˆˆG H
$str
ˆˆH b
)
ˆˆb c
;
ˆˆc d
}
¯¯ 
}
˘˘ 	
public
˚˚ 
static
˚˚ 
void
˚˚ "
DisableDownloadCache
˚˚ /
(
˚˚/ 0
)
˚˚0 1
{
¸¸ 	
HttpContext
˝˝ 
.
˝˝ 
Current
˝˝ 
.
˝˝  
Response
˝˝  (
.
˝˝( )
Cache
˝˝) .
.
˝˝. /

SetExpires
˝˝/ 9
(
˝˝9 :
DateTime
˝˝: B
.
˝˝B C
UtcNow
˝˝C I
.
˝˝I J
AddYears
˝˝J R
(
˝˝R S
-
˝˝S T
$num
˝˝T U
)
˝˝U V
)
˝˝V W
;
˝˝W X%
HttpBrowserCapabilities
ÇÇ #
oBrowser
ÇÇ$ ,
=
ÉÉ 
HttpContext
ÉÉ 
.
ÉÉ 
Current
ÉÉ %
.
ÉÉ% &
Request
ÉÉ& -
.
ÉÉ- .
Browser
ÉÉ. 5
;
ÉÉ5 6
if
ÖÖ 
(
ÖÖ 
!
ÖÖ 
oBrowser
ÖÖ 
.
ÖÖ 
Browser
ÖÖ !
.
ÖÖ! "
ToLower
ÖÖ" )
(
ÖÖ) *
)
ÖÖ* +
.
ÖÖ+ ,
Contains
ÖÖ, 4
(
ÖÖ4 5
$str
ÖÖ5 9
)
ÖÖ9 :
)
ÖÖ: ;
{
ÜÜ 
HttpContext
áá 
.
áá 
Current
áá #
.
áá# $
Response
áá$ ,
.
áá, -
Cache
áá- 2
.
áá2 3

SetNoStore
áá3 =
(
áá= >
)
áá> ?
;
áá? @
}
àà 
HttpContext
çç 
.
çç 
Current
çç 
.
çç  
Response
çç  (
.
çç( )
Cache
çç) .
.
çç. /
SetCacheability
çç/ >
(
çç> ?
HttpCacheability
çç? O
.
ççO P
Private
ççP W
)
ççW X
;
ççX Y
HttpContext
éé 
.
éé 
Current
éé 
.
éé  
Response
éé  (
.
éé( )
Cache
éé) .
.
éé. /
SetRevalidation
éé/ >
(
éé> ?#
HttpCacheRevalidation
éé? T
.
ééT U
	AllCaches
ééU ^
)
éé^ _
;
éé_ `
HttpContext
èè 
.
èè 
Current
èè 
.
èè  
Response
èè  (
.
èè( )
Cache
èè) .
.
èè. /"
AppendCacheExtension
èè/ C
(
èèC D
$str
èèD ^
)
èè^ _
;
èè_ `
}
ëë 	
public
óó 
static
óó *
AspNetHostingPermissionLevel
óó 2"
GetCurrentTrustLevel
óó3 G
(
óóG H
)
óóH I
{
òò 	
foreach
ôô 
(
ôô *
AspNetHostingPermissionLevel
ôô 1

trustLevel
ôô2 <
in
ôô= ?
new
öö *
AspNetHostingPermissionLevel
öö 4
[
öö4 5
]
öö5 6
{
öö7 8*
AspNetHostingPermissionLevel
õõ ,
.
õõ, -
Unrestricted
õõ- 9
,
õõ9 :*
AspNetHostingPermissionLevel
úú ,
.
úú, -
High
úú- 1
,
úú1 2*
AspNetHostingPermissionLevel
ùù ,
.
ùù, -
Medium
ùù- 3
,
ùù3 4*
AspNetHostingPermissionLevel
ûû ,
.
ûû, -
Low
ûû- 0
,
ûû0 1*
AspNetHostingPermissionLevel
üü ,
.
üü, -
Minimal
üü- 4
}
†† 
)
†† 
{
°° 
try
¢¢ 
{
££ 
new
§§ %
AspNetHostingPermission
§§ /
(
§§/ 0

trustLevel
§§0 :
)
§§: ;
.
§§; <
Demand
§§< B
(
§§B C
)
§§C D
;
§§D E
}
•• 
catch
¶¶ 
(
¶¶ 
System
¶¶ 
.
¶¶ 
Security
¶¶ &
.
¶¶& '
SecurityException
¶¶' 8
)
¶¶8 9
{
ßß 
continue
®® 
;
®® 
}
©© 
return
´´ 

trustLevel
´´ !
;
´´! "
}
¨¨ 
return
ÆÆ *
AspNetHostingPermissionLevel
ÆÆ /
.
ÆÆ/ 0
None
ÆÆ0 4
;
ÆÆ4 5
}
ØØ 	
}
¥¥ 
}µµ »5
pD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\ServicePinger.cs
	namespace		 	

mojoPortal		
 
.		 
Web		 
.		 
	Framework		 "
{

 
public 

class 
ServicePinger 
{ 
private 
static 
readonly 
ILog  $
log% (
=) *

LogManager+ 5
.5 6
	GetLogger6 ?
(? @
typeof@ F
(F G
ServicePingerG T
)T U
)U V
;V W
public 
ServicePinger 
( 
string #
siteName$ ,
,, -
string. 4
siteUrl5 <
,< =
string> D

serviceUrlE O
)O P
{ 	
if 
( 
siteName 
== 
null  
)  !
throw   
new   
ArgumentException   +
(  + ,
$str  , D
)  D E
;  E F
if"" 
("" 
siteUrl"" 
=="" 
null"" 
)""  
throw## 
new## 
ArgumentException## +
(##+ ,
$str##, C
)##C D
;##D E
if%% 
(%% 

serviceUrl%% 
==%% 
null%% "
)%%" #
throw&& 
new&& 
ArgumentException&& +
(&&+ ,
$str&&, F
)&&F G
;&&G H
if(( 
((( 
siteName(( 
.(( 
Length(( 
==((  "
$num((# $
)(($ %
throw)) 
new)) 
ArgumentException)) +
())+ ,
$str)), E
)))E F
;))F G
if++ 
(++ 
siteUrl++ 
.++ 
Length++ 
==++ !
$num++" #
)++# $
throw,, 
new,, 
ArgumentException,, +
(,,+ ,
$str,,, D
),,D E
;,,E F
if.. 
(.. 

serviceUrl.. 
... 
Length.. !
==.." $
$num..% &
)..& '
throw// 
new// 
ArgumentException// +
(//+ ,
$str//, G
)//G H
;//H I
pingingSiteName11 
=11 
siteName11 &
;11& '
pingingSiteUrl22 
=22 
siteUrl22 $
;22$ %
serviceUrlToPing33 
=33 

serviceUrl33 )
;33) *
}77 	
private99 
string99 
pingingSiteName99 &
=99' (
string99) /
.99/ 0
Empty990 5
;995 6
private:: 
string:: 
pingingSiteUrl:: %
=::& '
string::( .
.::. /
Empty::/ 4
;::4 5
private;; 
string;; 
serviceUrlToPing;; '
=;;( )
string;;* 0
.;;0 1
Empty;;1 6
;;;6 7
private<< 
int<< !
timeoutInMilliseconds<< )
=<<* +
$num<<, 0
;<<0 1
publicBB 
voidBB 
PingBB 
(BB 
)BB 
{CC 	
tryDD 
{EE 
HttpWebRequestFF 
requestFF &
=FF' (
(FF) *
HttpWebRequestFF* 8
)FF8 9

WebRequestFF9 C
.FFC D
CreateFFD J
(FFJ K
serviceUrlToPingFFK [
)FF[ \
;FF\ ]
requestGG 
.GG 
MethodGG 
=GG  
$strGG! '
;GG' (
requestHH 
.HH 
ContentTypeHH #
=HH$ %
$strHH& 0
;HH0 1
requestII 
.II 
TimeoutII 
=II  !!
timeoutInMillisecondsII" 7
;II7 8
requestJJ 
.JJ 
CredentialsJJ #
=JJ$ %
CredentialCacheJJ& 5
.JJ5 6%
DefaultNetworkCredentialsJJ6 O
;JJO P
StreamMM 
streamMM 
=MM 
(MM  !
StreamMM! '
)MM' (
requestMM( /
.MM/ 0
GetRequestStreamMM0 @
(MM@ A
)MMA B
;MMB C
usingNN 
(NN 
XmlTextWriterNN $
writerNN% +
=NN, -
newNN. 1
XmlTextWriterNN2 ?
(NN? @
streamNN@ F
,NNF G
EncodingNNH P
.NNP Q
ASCIINNQ V
)NNV W
)NNW X
{OO 
writerPP 
.PP 
WriteStartDocumentPP -
(PP- .
)PP. /
;PP/ 0
writerQQ 
.QQ 
WriteStartElementQQ ,
(QQ, -
$strQQ- 9
)QQ9 :
;QQ: ;
writerRR 
.RR 
WriteElementStringRR -
(RR- .
$strRR. :
,RR: ;
$strRR< P
)RRP Q
;RRQ R
writerSS 
.SS 
WriteStartElementSS ,
(SS, -
$strSS- 5
)SS5 6
;SS6 7
writerTT 
.TT 
WriteStartElementTT ,
(TT, -
$strTT- 4
)TT4 5
;TT5 6
writerUU 
.UU 
WriteElementStringUU -
(UU- .
$strUU. 5
,UU5 6
pingingSiteNameUU7 F
)UUF G
;UUG H
writerVV 
.VV 
WriteEndElementVV *
(VV* +
)VV+ ,
;VV, -
writerWW 
.WW 
WriteStartElementWW ,
(WW, -
$strWW- 4
)WW4 5
;WW5 6
writerXX 
.XX 
WriteElementStringXX -
(XX- .
$strXX. 5
,XX5 6
pingingSiteUrlXX7 E
)XXE F
;XXF G
writerYY 
.YY 
WriteEndElementYY *
(YY* +
)YY+ ,
;YY, -
writerZZ 
.ZZ 
WriteEndElementZZ *
(ZZ* +
)ZZ+ ,
;ZZ, -
writer[[ 
.[[ 
WriteEndElement[[ *
([[* +
)[[+ ,
;[[, -
}\\ 
request__ 
.__ 
GetResponse__ #
(__# $
)__$ %
;__% &
}`` 
catchaa 
(aa %
InvalidOperationExceptionaa ,
exaa- /
)aa/ 0
{bb 
logcc 
.cc 
Errorcc 
(cc 
excc 
)cc 
;cc 
}dd 
catchee 
(ee !
NotSupportedExceptionee (
exee) +
)ee+ ,
{ff 
loggg 
.gg 
Errorgg 
(gg 
exgg 
)gg 
;gg 
}hh 
}ll 	
}nn 
}oo á
yD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\SpamPreventionQuestion.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
[ 
Serializable 
] 
public 

class "
SpamPreventionQuestion '
{ 
public "
SpamPreventionQuestion %
(% &
)& '
{ 	
Random 
randomGenerator "
=# $
new% (
Random) /
(/ 0
)0 1
;1 2
firstNumber 
= 
randomGenerator )
.) *
Next* .
(. /
$num/ 0
,0 1
$num2 4
)4 5
;5 6
secondNumber 
= 
randomGenerator *
.* +
Next+ /
(/ 0
$num0 1
,1 2
$num3 5
)5 6
;6 7
}!! 	
private(( 
int(( 
firstNumber(( 
;((  
private)) 
int)) 
secondNumber))  
;))  !
private++ 
string++ 
operatorDisplay++ &
=++' (
$str++) .
;++. /
public11 
int11 
FirstNumber11 
{22 	
get33 
{33 
return33 
firstNumber33 $
;33$ %
}33& '
}44 	
public66 
int66 
SecondNumber66 
{77 	
get88 
{88 
return88 
secondNumber88 %
;88% &
}88' (
}99 	
public;; 
string;; 
QuestionExpression;; (
{<< 	
get== 
{>> 
string?? 
result?? 
=?? 
firstNumber??  +
.??+ ,
ToString??, 4
(??4 5
)??5 6
+@@ 
operatorDisplay@@ %
+@@& '
secondNumber@@( 4
.@@4 5
ToString@@5 =
(@@= >
)@@> ?
+AA 
$strAA 
;AA 
returnCC 
resultCC 
;CC 
}EE 
}FF 	
publicMM 
intMM 
GetCorrectAnswerMM #
(MM# $
)MM$ %
{NN 	
returnOO 
firstNumberOO 
+OO  
secondNumberOO! -
;OO- .
}QQ 	
publicWW 
boolWW 
IsCorrectAnswerWW #
(WW# $
stringWW$ *
answerInputWW+ 6
)WW6 7
{XX 	
boolYY 
resultYY 
=YY 
falseYY 
;YY  
intZZ 
answerToTestZZ 
;ZZ 
if[[ 
([[ 
int[[ 
.[[ 
TryParse[[ 
([[ 
answerInput[[ (
,[[( )
out[[* -
answerToTest[[. :
)[[: ;
)[[; <
{\\ 
result]] 
=]] 
(]] 
answerToTest]] &
==]]' )
GetCorrectAnswer]]* :
(]]: ;
)]]; <
)]]< =
;]]= >
}__ 
returnaa 
resultaa 
;aa 
}cc 	
}ii 
}jj °
sD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\StatisticsHelper.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public 

static 
class 
StatisticsHelper (
{		 
public

 
static

 
double

 
Mean

 !
(

! "
IEnumerable

" -
<

- .
double

. 4
>

4 5
values

6 <
)

< =
{ 	
double 
sum 
= 
$num 
; 
int 
count 
= 
$num 
; 
foreach 
( 
double 
d 
in  
values! '
)' (
{ 
sum 
+= 
d 
; 
count 
++ 
; 
} 
return 
sum 
/ 
count 
; 
} 	
public 
static 
double 
StandardDeviation .
(. /
IEnumerable/ :
<: ;
double; A
>A B
valuesC I
,I J
outK N
doubleO U
meanV Z
)Z [
{ 	
mean 
= 
Mean 
( 
values 
) 
;  
double 
sumOfDiffSquares #
=$ %
$num& '
;' (
int 
count 
= 
$num 
; 
foreach 
( 
double 
d 
in  
values! '
)' (
{ 
double   
diff   
=   
(   
d    
-  ! "
mean  # '
)  ' (
;  ( )
sumOfDiffSquares!!  
+=!!! #
diff!!$ (
*!!) *
diff!!+ /
;!!/ 0
count"" 
++"" 
;"" 
}## 
return%% 
Math%% 
.%% 
Sqrt%% 
(%% 
sumOfDiffSquares%% -
/%%. /
count%%0 5
)%%5 6
;%%6 7
}&& 	
public(( 
static(( 
double(( 
StandardDeviation(( .
(((. /
IEnumerable((/ :
<((: ;
double((; A
>((A B
values((C I
)((I J
{)) 	
double** 
mean** 
;** 
return++ 
StandardDeviation++ $
(++$ %
values++% +
,+++ ,
out++- 0
mean++1 5
)++5 6
;++6 7
},, 	
}.. 
}// Œú
oD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\StringHelper.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public 

static 
class 
StringHelper $
{ 
public 
static 
bool "
IsCaseInsensitiveMatch 1
(1 2
string2 8
str19 =
,= >
string? E
str2F J
)J K
{ 	
return 
string 
. 
Equals  
(  !
str1! %
,% &
str2' +
,+ ,
StringComparison- =
.= >&
InvariantCultureIgnoreCase> X
)X Y
;Y Z
}"" 	
public$$ 
static$$ 
bool$$ #
ContainsCaseInsensitive$$ 2
($$2 3
this$$3 7
string$$8 >
source$$? E
,$$E F
string$$G M
value$$N S
)$$S T
{%% 	
int&& 
results&& 
=&& 
source&&  
.&&  !
IndexOf&&! (
(&&( )
value&&) .
,&&. /
StringComparison&&0 @
.&&@ A$
CurrentCultureIgnoreCase&&A Y
)&&Y Z
;&&Z [
return'' 
results'' 
=='' 
-'' 
$num''  
?''! "
false''# (
:'') *
true''+ /
;''/ 0
}(( 	
public** 
static** 
string** 
ToJsonString** )
(**) *
object*** 0
jsonObj**1 8
)**8 9
{++ 	
return,, 
new,,  
JavaScriptSerializer,, +
(,,+ ,
),,, -
.,,- .
	Serialize,,. 7
(,,7 8
jsonObj,,8 ?
),,? @
;,,@ A
}-- 	
public88 
static88 
string88 

JsonEscape88 '
(88' (
this88( ,
string88- 3
s884 5
)885 6
{99 	
StringBuilder:: 
sb:: 
=:: 
new:: "
StringBuilder::# 0
(::0 1
)::1 2
;::2 3
foreach<< 
(<< 
char<< 
c<< 
in<< 
s<<  
)<<  !
{== 
switch>> 
(>> 
c>> 
)>> 
{?? 
case@@ 
$char@@ 
:@@ 
sbAA 
.AA 
AppendAA !
(AA! "
$strAA" (
)AA( )
;AA) *
breakBB 
;BB 
caseCC 
$charCC 
:CC 
sbDD 
.DD 
AppendDD !
(DD! "
$strDD" (
)DD( )
;DD) *
breakEE 
;EE 
caseFF 
$charFF 
:FF 
sbGG 
.GG 
AppendGG !
(GG! "
$strGG" '
)GG' (
;GG( )
breakHH 
;HH 
caseII 
$charII 
:II 
sbJJ 
.JJ 
AppendJJ !
(JJ! "
$strJJ" '
)JJ' (
;JJ( )
breakKK 
;KK 
caseLL 
$charLL 
:LL 
sbMM 
.MM 
AppendMM !
(MM! "
$strMM" '
)MM' (
;MM( )
breakNN 
;NN 
caseOO 
$charOO 
:OO 
sbPP 
.PP 
AppendPP !
(PP! "
$strPP" '
)PP' (
;PP( )
breakQQ 
;QQ 
caseRR 
$charRR 
:RR 
sbSS 
.SS 
AppendSS !
(SS! "
$strSS" '
)SS' (
;SS( )
breakTT 
;TT 
defaultUU 
:UU 
intVV 
iVV 
=VV 
(VV  !
intVV! $
)VV$ %
cVV% &
;VV& '
ifWW 
(WW 
iWW 
<WW 
$numWW  "
||WW# %
iWW& '
>WW( )
$numWW* -
)WW- .
{XX 
sbYY 
.YY 
AppendFormatYY +
(YY+ ,
$strYY, 8
,YY8 9
iYY: ;
)YY; <
;YY< =
}ZZ 
else[[ 
{\\ 
sb]] 
.]] 
Append]] %
(]]% &
c]]& '
)]]' (
;]]( )
}^^ 
break__ 
;__ 
}`` 
}aa 
returndd 
sbdd 
.dd 
ToStringdd 
(dd 
)dd  
;dd  !
}ee 	
public
ºº 
static
ºº 
string
ºº  
DecodeBase64String
ºº /
(
ºº/ 0
string
ºº0 6
base64String
ºº7 C
,
ººC D
Encoding
ººE M
encoding
ººN V
)
ººV W
{
ΩΩ 	
if
ææ 
(
ææ 
string
ææ 
.
ææ 
IsNullOrEmpty
ææ $
(
ææ$ %
base64String
ææ% 1
)
ææ1 2
)
ææ2 3
{
ææ4 5
return
ææ6 <
base64String
ææ= I
;
ææI J
}
ææK L
byte
øø 
[
øø 
]
øø 
encodedBytes
øø 
=
øø  !
Convert
øø" )
.
øø) *
FromBase64String
øø* :
(
øø: ;
base64String
øø; G
)
øøG H
;
øøH I
return
¿¿ 
encoding
¿¿ 
.
¿¿ 
	GetString
¿¿ %
(
¿¿% &
encodedBytes
¿¿& 2
,
¿¿2 3
$num
¿¿4 5
,
¿¿5 6
encodedBytes
¿¿7 C
.
¿¿C D
Length
¿¿D J
)
¿¿J K
;
¿¿K L
}
¬¬ 	
public
ƒƒ 
static
ƒƒ 
string
ƒƒ +
GetBase64EncodedUnicodeString
ƒƒ :
(
ƒƒ: ;
string
ƒƒ; A
unicodeString
ƒƒB O
)
ƒƒO P
{
≈≈ 	
Encoding
∆∆ 
encoding
∆∆ 
=
∆∆ 
Encoding
∆∆  (
.
∆∆( )
Unicode
∆∆) 0
;
∆∆0 1
byte
«« 
[
«« 
]
«« 
bytes
«« 
=
«« 
encoding
«« #
.
««# $
GetBytes
««$ ,
(
««, -
unicodeString
««- :
)
««: ;
;
««; <
return
…… 
System
…… 
.
…… 
Convert
…… !
.
……! "
ToBase64String
……" 0
(
……0 1
bytes
……1 6
)
……6 7
;
……7 8
}
ÀÀ 	
public
ÕÕ 
static
ÕÕ 
string
ÕÕ )
GetBase64EncodedAsciiString
ÕÕ 8
(
ÕÕ8 9
string
ÕÕ9 ?
unicodeString
ÕÕ@ M
)
ÕÕM N
{
ŒŒ 	
Encoding
œœ 
encoding
œœ 
=
œœ 
Encoding
œœ  (
.
œœ( )
ASCII
œœ) .
;
œœ. /
byte
–– 
[
–– 
]
–– 
bytes
–– 
=
–– 
encoding
–– #
.
––# $
GetBytes
––$ ,
(
––, -
unicodeString
––- :
)
––: ;
;
––; <
return
““ 
System
““ 
.
““ 
Convert
““ !
.
““! "
ToBase64String
““" 0
(
““0 1
bytes
““1 6
)
““6 7
;
““7 8
}
‘‘ 	
public
⁄⁄ 
static
⁄⁄ 
string
⁄⁄ 
ToSerialDate
⁄⁄ )
(
⁄⁄) *
this
⁄⁄* .
string
⁄⁄/ 5
s
⁄⁄6 7
)
⁄⁄7 8
{
€€ 	
if
‹‹ 
(
‹‹ 
s
‹‹ 
.
‹‹ 
Length
‹‹ 
==
‹‹ 
$num
‹‹ 
)
‹‹ 
{
›› 
return
ﬂﬂ 
s
ﬂﬂ 
.
ﬂﬂ 
	Substring
ﬂﬂ "
(
ﬂﬂ" #
$num
ﬂﬂ# $
,
ﬂﬂ$ %
$num
ﬂﬂ& '
)
ﬂﬂ' (
+
ﬂﬂ) *
$str
ﬂﬂ+ .
+
ﬂﬂ/ 0
s
ﬂﬂ1 2
.
ﬂﬂ2 3
	Substring
ﬂﬂ3 <
(
ﬂﬂ< =
$num
ﬂﬂ= >
,
ﬂﬂ> ?
$num
ﬂﬂ@ A
)
ﬂﬂA B
+
ﬂﬂC D
$str
ﬂﬂE H
+
ﬂﬂI J
s
ﬂﬂK L
.
ﬂﬂL M
	Substring
ﬂﬂM V
(
ﬂﬂV W
$num
ﬂﬂW X
,
ﬂﬂX Y
$num
ﬂﬂZ [
)
ﬂﬂ[ \
;
ﬂﬂ\ ]
}
‡‡ 
return
·· 
s
·· 
;
·· 
}
‚‚ 	
public
 
static
 
string
 
HtmlEscapeQuotes
 -
(
- .
this
. 2
string
3 9
s
: ;
)
; <
{
ÒÒ 	
if
ÚÚ 
(
ÚÚ 
string
ÚÚ 
.
ÚÚ 
IsNullOrEmpty
ÚÚ $
(
ÚÚ$ %
s
ÚÚ% &
)
ÚÚ& '
)
ÚÚ' (
{
ÚÚ) *
return
ÚÚ+ 1
s
ÚÚ2 3
;
ÚÚ3 4
}
ÚÚ5 6
return
ÙÙ 
s
ÙÙ 
.
ÙÙ 
Replace
ÙÙ 
(
ÙÙ 
$str
ÙÙ  
,
ÙÙ  !
$str
ÙÙ! (
)
ÙÙ( )
.
ÙÙ) *
Replace
ÙÙ* 1
(
ÙÙ1 2
$str
ÙÙ2 6
,
ÙÙ6 7
$str
ÙÙ7 >
)
ÙÙ> ?
;
ÙÙ? @
}
ˆˆ 	
public
¯¯ 
static
¯¯ 
string
¯¯ 
RemoveCDataTags
¯¯ ,
(
¯¯, -
this
¯¯- 1
string
¯¯2 8
s
¯¯9 :
)
¯¯: ;
{
˘˘ 	
if
˙˙ 
(
˙˙ 
string
˙˙ 
.
˙˙ 
IsNullOrEmpty
˙˙ $
(
˙˙$ %
s
˙˙% &
)
˙˙& '
)
˙˙' (
{
˙˙) *
return
˙˙+ 1
s
˙˙2 3
;
˙˙3 4
}
˙˙5 6
return
¸¸ 
s
¸¸ 
.
¸¸ 
Replace
¸¸ 
(
¸¸ 
$str
¸¸ (
,
¸¸( )
string
¸¸* 0
.
¸¸0 1
Empty
¸¸1 6
)
¸¸6 7
.
¸¸7 8
Replace
¸¸8 ?
(
¸¸? @
$str
¸¸@ E
,
¸¸E F
string
¸¸G M
.
¸¸M N
Empty
¸¸N S
)
¸¸S T
;
¸¸T U
}
˛˛ 	
public
ÄÄ 
static
ÄÄ 
string
ÄÄ 
CsvEscapeQuotes
ÄÄ ,
(
ÄÄ, -
this
ÄÄ- 1
string
ÄÄ2 8
s
ÄÄ9 :
)
ÄÄ: ;
{
ÅÅ 	
if
ÇÇ 
(
ÇÇ 
string
ÇÇ 
.
ÇÇ 
IsNullOrEmpty
ÇÇ $
(
ÇÇ$ %
s
ÇÇ% &
)
ÇÇ& '
)
ÇÇ' (
{
ÇÇ) *
return
ÇÇ+ 1
s
ÇÇ2 3
;
ÇÇ3 4
}
ÇÇ5 6
return
ÑÑ 
s
ÑÑ 
.
ÑÑ 
Replace
ÑÑ 
(
ÑÑ 
$str
ÑÑ !
,
ÑÑ! "
$str
ÑÑ# )
)
ÑÑ) *
;
ÑÑ* +
}
ÜÜ 	
public
àà 
static
àà 
string
àà !
RemoveAngleBrackets
àà 0
(
àà0 1
this
àà1 5
string
àà6 <
s
àà= >
)
àà> ?
{
ââ 	
if
ää 
(
ää 
string
ää 
.
ää 
IsNullOrEmpty
ää $
(
ää$ %
s
ää% &
)
ää& '
)
ää' (
{
ää) *
return
ää+ 1
s
ää2 3
;
ää3 4
}
ää5 6
return
åå 
s
åå 
.
åå 
Replace
åå 
(
åå 
$str
åå  
,
åå  !
string
åå" (
.
åå( )
Empty
åå) .
)
åå. /
.
åå/ 0
Replace
åå0 7
(
åå7 8
$str
åå8 ;
,
åå; <
string
åå= C
.
ååC D
Empty
ååD I
)
ååI J
;
ååJ K
}
éé 	
public
êê 
static
êê 
string
êê 
Coalesce
êê %
(
êê% &
this
êê& *
string
êê+ 1
s
êê2 3
,
êê3 4
string
êê5 ;
alt
êê< ?
)
êê? @
{
ëë 	
if
íí 
(
íí 
string
íí 
.
íí 
IsNullOrEmpty
íí $
(
íí$ %
s
íí% &
)
íí& '
)
íí' (
{
íí) *
return
íí+ 1
alt
íí2 5
;
íí5 6
}
íí7 8
return
ìì 
s
ìì 
;
ìì 
}
îî 	
public
õõ 
static
õõ 
string
õõ 
ToAscii
õõ $
(
õõ$ %
this
õõ% )
string
õõ* 0
s
õõ1 2
)
õõ2 3
{
úú 	
if
ùù 
(
ùù 
string
ùù 
.
ùù 
IsNullOrEmpty
ùù $
(
ùù$ %
s
ùù% &
)
ùù& '
)
ùù' (
{
ùù) *
return
ùù+ 1
s
ùù2 3
;
ùù3 4
}
ùù5 6
try
†† 
{
°° 
string
££ 

normalized
££ !
=
££" #
s
££$ %
.
££% &
	Normalize
££& /
(
££/ 0
NormalizationForm
££0 A
.
££A B
FormKD
££B H
)
££H I
;
££I J
Encoding
•• 
ascii
•• 
=
••  
Encoding
••! )
.
••) *
GetEncoding
••* 5
(
••5 6
$str
¶¶  
,
¶¶  !
new
ßß (
EncoderReplacementFallback
ßß 4
(
ßß4 5
string
ßß5 ;
.
ßß; <
Empty
ßß< A
)
ßßA B
,
ßßB C
new
®® (
DecoderReplacementFallback
®® 4
(
®®4 5
string
®®5 ;
.
®®; <
Empty
®®< A
)
®®A B
)
®®B C
;
®®C D
byte
™™ 
[
™™ 
]
™™ 
encodedBytes
™™ #
=
™™$ %
new
™™& )
byte
™™* .
[
™™. /
ascii
™™/ 4
.
™™4 5
GetByteCount
™™5 A
(
™™A B

normalized
™™B L
)
™™L M
]
™™M N
;
™™N O
int
´´ "
numberOfEncodedBytes
´´ (
=
´´) *
ascii
´´+ 0
.
´´0 1
GetBytes
´´1 9
(
´´9 :

normalized
´´: D
,
´´D E
$num
´´F G
,
´´G H

normalized
´´I S
.
´´S T
Length
´´T Z
,
´´Z [
encodedBytes
¨¨ 
,
¨¨ 
$num
¨¨ 
)
¨¨  
;
¨¨  !
string
ÆÆ 
	newString
ÆÆ  
=
ÆÆ! "
ascii
ÆÆ# (
.
ÆÆ( )
	GetString
ÆÆ) 2
(
ÆÆ2 3
encodedBytes
ÆÆ3 ?
)
ÆÆ? @
;
ÆÆ@ A
return
∞∞ 
	newString
∞∞  
;
∞∞  !
}
ææ 
catch
øø 
{
¿¿ 
return
¡¡ 
s
¡¡ 
;
¡¡ 
}
¬¬ 
}
≈≈ 	
public
ŒŒ 
static
ŒŒ 
string
ŒŒ 
ToAsciiIfPossible
ŒŒ .
(
ŒŒ. /
this
ŒŒ/ 3
string
ŒŒ4 :
s
ŒŒ; <
)
ŒŒ< =
{
œœ 	
if
–– 
(
–– 
string
–– 
.
–– 
IsNullOrEmpty
–– $
(
––$ %
s
––% &
)
––& '
)
––' (
{
––) *
return
––+ 1
s
––2 3
;
––3 4
}
––5 6
s
”” 
=
”” 
s
”” 
.
”” 
Replace
”” 
(
”” 
$str
”” 
,
”” 
$str
”” #
)
””# $
;
””$ %
s
‘‘ 
=
‘‘ 
s
‘‘ 
.
‘‘ 
Replace
‘‘ 
(
‘‘ 
$str
‘‘ 
,
‘‘ 
$str
‘‘ #
)
‘‘# $
;
‘‘$ %
s
’’ 
=
’’ 
s
’’ 
.
’’ 
Replace
’’ 
(
’’ 
$str
’’ 
,
’’ 
$str
’’ #
)
’’# $
;
’’$ %
s
÷÷ 
=
÷÷ 
s
÷÷ 
.
÷÷ 
Replace
÷÷ 
(
÷÷ 
$str
÷÷ 
,
÷÷ 
$str
÷÷ #
)
÷÷# $
;
÷÷$ %
int
€€ 
len
€€ 
=
€€ 
s
€€ 
.
€€ 
Length
€€ 
;
€€ 
StringBuilder
‹‹ 
sb
‹‹ 
=
‹‹ 
new
‹‹ "
StringBuilder
‹‹# 0
(
‹‹0 1
len
‹‹1 4
)
‹‹4 5
;
‹‹5 6
char
›› 
c
›› 
;
›› 
for
ﬂﬂ 
(
ﬂﬂ 
int
ﬂﬂ 
i
ﬂﬂ 
=
ﬂﬂ 
$num
ﬂﬂ 
;
ﬂﬂ 
i
ﬂﬂ 
<
ﬂﬂ 
len
ﬂﬂ  #
;
ﬂﬂ# $
i
ﬂﬂ% &
++
ﬂﬂ& (
)
ﬂﬂ( )
{
‡‡ 
c
·· 
=
·· 
s
·· 
[
·· 
i
·· 
]
·· 
;
·· 
if
„„ 
(
„„ 
(
„„ 
int
„„ 
)
„„ 
c
„„ 
>=
„„ 
$num
„„ !
)
„„! "
{
‰‰ 
sb
ÂÂ 
.
ÂÂ 
Append
ÂÂ 
(
ÂÂ +
RemapInternationalCharToAscii
ÂÂ ;
(
ÂÂ; <
c
ÂÂ< =
)
ÂÂ= >
)
ÂÂ> ?
;
ÂÂ? @
}
ÁÁ 
else
ËË 
{
ÈÈ 
sb
ÍÍ 
.
ÍÍ 
Append
ÍÍ 
(
ÍÍ 
c
ÍÍ 
)
ÍÍ  
;
ÍÍ  !
}
ÎÎ 
}
ÏÏ 
return
ÓÓ 
sb
ÓÓ 
.
ÓÓ 
ToString
ÓÓ 
(
ÓÓ 
)
ÓÓ  
;
ÓÓ  !
}
ÒÒ 	
public
˘˘ 
static
˘˘ 
string
˘˘ +
RemapInternationalCharToAscii
˘˘ :
(
˘˘: ;
char
˘˘; ?
c
˘˘@ A
)
˘˘A B
{
˙˙ 	
string
˚˚ 
s
˚˚ 
=
˚˚ 
c
˚˚ 
.
˚˚ 
ToString
˚˚ !
(
˚˚! "
)
˚˚" #
.
˚˚# $
ToLowerInvariant
˚˚$ 4
(
˚˚4 5
)
˚˚5 6
;
˚˚6 7
if
¸¸ 
(
¸¸ 
$str
¸¸ 
.
¸¸ 
Contains
¸¸ #
(
¸¸# $
s
¸¸$ %
)
¸¸% &
)
¸¸& '
{
˝˝ 
return
˛˛ 
$str
˛˛ 
;
˛˛ 
}
ˇˇ 
else
ÄÄ 
if
ÄÄ 
(
ÄÄ 
$str
ÄÄ 
.
ÄÄ 
Contains
ÄÄ %
(
ÄÄ% &
s
ÄÄ& '
)
ÄÄ' (
)
ÄÄ( )
{
ÅÅ 
return
ÇÇ 
$str
ÇÇ 
;
ÇÇ 
}
ÉÉ 
else
ÑÑ 
if
ÑÑ 
(
ÑÑ 
$str
ÑÑ 
.
ÑÑ 
Contains
ÑÑ %
(
ÑÑ% &
s
ÑÑ& '
)
ÑÑ' (
)
ÑÑ( )
{
ÖÖ 
return
ÜÜ 
$str
ÜÜ 
;
ÜÜ 
}
áá 
else
àà 
if
àà 
(
àà 
$str
àà 
.
àà  
Contains
àà  (
(
àà( )
s
àà) *
)
àà* +
)
àà+ ,
{
ââ 
return
ää 
$str
ää 
;
ää 
}
ãã 
else
åå 
if
åå 
(
åå 
$str
åå 
.
åå 
Contains
åå &
(
åå& '
s
åå' (
)
åå( )
)
åå) *
{
çç 
return
éé 
$str
éé 
;
éé 
}
èè 
else
êê 
if
êê 
(
êê 
$str
êê 
.
êê 
Contains
êê $
(
êê$ %
s
êê% &
)
êê& '
)
êê' (
{
ëë 
return
íí 
$str
íí 
;
íí 
}
ìì 
else
îî 
if
îî 
(
îî 
$str
îî 
.
îî 
Contains
îî #
(
îî# $
s
îî$ %
)
îî% &
)
îî& '
{
ïï 
return
ññ 
$str
ññ 
;
ññ 
}
óó 
else
òò 
if
òò 
(
òò 
$str
òò 
.
òò 
Contains
òò $
(
òò$ %
s
òò% &
)
òò& '
)
òò' (
{
ôô 
return
öö 
$str
öö 
;
öö 
}
õõ 
else
úú 
if
úú 
(
úú 
$str
úú 
.
úú 
Contains
úú "
(
úú" #
s
úú# $
)
úú$ %
)
úú% &
{
ùù 
return
ûû 
$str
ûû 
;
ûû 
}
üü 
else
†† 
if
†† 
(
†† 
$str
†† 
.
†† 
Contains
†† "
(
††" #
s
††# $
)
††$ %
)
††% &
{
°° 
return
¢¢ 
$str
¢¢ 
;
¢¢ 
}
££ 
else
§§ 
if
§§ 
(
§§ 
$str
§§ 
.
§§ 
Contains
§§ "
(
§§" #
s
§§# $
)
§§$ %
)
§§% &
{
•• 
return
¶¶ 
$str
¶¶ 
;
¶¶ 
}
ßß 
else
®® 
if
®® 
(
®® 
c
®® 
==
®® 
$char
®® 
)
®® 
{
©© 
return
™™ 
$str
™™ 
;
™™ 
}
´´ 
else
¨¨ 
if
¨¨ 
(
¨¨ 
c
¨¨ 
==
¨¨ 
$char
¨¨ 
)
¨¨ 
{
≠≠ 
return
ÆÆ 
$str
ÆÆ 
;
ÆÆ 
}
ØØ 
else
∞∞ 
if
∞∞ 
(
∞∞ 
c
∞∞ 
==
∞∞ 
$char
∞∞ 
)
∞∞ 
{
±± 
return
≤≤ 
$str
≤≤ 
;
≤≤ 
}
≥≥ 
else
¥¥ 
if
¥¥ 
(
¥¥ 
c
¥¥ 
==
¥¥ 
$char
¥¥ 
)
¥¥ 
{
µµ 
return
∂∂ 
$str
∂∂ 
;
∂∂ 
}
∑∑ 
else
∏∏ 
if
∏∏ 
(
∏∏ 
c
∏∏ 
==
∏∏ 
$char
∏∏ 
)
∏∏ 
{
ππ 
return
∫∫ 
$str
∫∫ 
;
∫∫ 
}
ªª 
else
ºº 
if
ºº 
(
ºº 
c
ºº 
==
ºº 
$char
ºº 
)
ºº 
{
ΩΩ 
return
ææ 
$str
ææ 
;
ææ 
}
øø 
else
¿¿ 
if
¿¿ 
(
¿¿ 
c
¿¿ 
==
¿¿ 
$char
¿¿ 
)
¿¿ 
{
¡¡ 
return
¬¬ 
$str
¬¬ 
;
¬¬ 
}
√√ 
else
ƒƒ 
{
≈≈ 
return
∆∆ 
string
∆∆ 
.
∆∆ 
Empty
∆∆ #
;
∆∆# $
}
«« 
}
»» 	
public
ÔÔ 
static
ÔÔ 
string
ÔÔ 
RemoveNonNumeric
ÔÔ -
(
ÔÔ- .
this
ÔÔ. 2
string
ÔÔ3 9
s
ÔÔ: ;
)
ÔÔ; <
{
 	
if
ÒÒ 
(
ÒÒ 
string
ÒÒ 
.
ÒÒ 
IsNullOrEmpty
ÒÒ $
(
ÒÒ$ %
s
ÒÒ% &
)
ÒÒ& '
)
ÒÒ' (
{
ÒÒ) *
return
ÒÒ+ 1
s
ÒÒ2 3
;
ÒÒ3 4
}
ÒÒ5 6
char
ÛÛ 
[
ÛÛ 
]
ÛÛ 
result
ÛÛ 
=
ÛÛ 
new
ÛÛ 
char
ÛÛ  $
[
ÛÛ$ %
s
ÛÛ% &
.
ÛÛ& '
Length
ÛÛ' -
]
ÛÛ- .
;
ÛÛ. /
int
ÙÙ 
resultIndex
ÙÙ 
=
ÙÙ 
$num
ÙÙ 
;
ÙÙ  
foreach
ıı 
(
ıı 
char
ıı 
c
ıı 
in
ıı 
s
ıı  
)
ıı  !
{
ˆˆ 
if
˜˜ 
(
˜˜ 
char
˜˜ 
.
˜˜ 
IsNumber
˜˜ !
(
˜˜! "
c
˜˜" #
)
˜˜# $
)
˜˜$ %
result
¯¯ 
[
¯¯ 
resultIndex
¯¯ &
++
¯¯& (
]
¯¯( )
=
¯¯* +
c
¯¯, -
;
¯¯- .
}
˘˘ 
if
˙˙ 
(
˙˙ 
$num
˙˙ 
==
˙˙ 
resultIndex
˙˙  
)
˙˙  !
s
˚˚ 
=
˚˚ 
string
˚˚ 
.
˚˚ 
Empty
˚˚  
;
˚˚  !
else
¸¸ 
if
¸¸ 
(
¸¸ 
result
¸¸ 
.
¸¸ 
Length
¸¸ "
!=
¸¸# %
resultIndex
¸¸& 1
)
¸¸1 2
s
˝˝ 
=
˝˝ 
new
˝˝ 
string
˝˝ 
(
˝˝ 
result
˝˝ %
,
˝˝% &
$num
˝˝' (
,
˝˝( )
resultIndex
˝˝* 5
)
˝˝5 6
;
˝˝6 7
return
ˇˇ 
s
ˇˇ 
;
ˇˇ 
}
ÄÄ 	
public
ÇÇ 
static
ÇÇ 
string
ÇÇ 
RemoveLineBreaks
ÇÇ -
(
ÇÇ- .
this
ÇÇ. 2
string
ÇÇ3 9
s
ÇÇ: ;
)
ÇÇ; <
{
ÉÉ 	
if
ÑÑ 
(
ÑÑ 
string
ÑÑ 
.
ÑÑ 
IsNullOrEmpty
ÑÑ $
(
ÑÑ$ %
s
ÑÑ% &
)
ÑÑ& '
)
ÑÑ' (
{
ÑÑ) *
return
ÑÑ+ 1
s
ÑÑ2 3
;
ÑÑ3 4
}
ÑÑ5 6
return
ÜÜ 
s
ÜÜ 
.
ÜÜ 
Replace
ÜÜ 
(
ÜÜ 
$str
ÜÜ #
,
ÜÜ# $
string
ÜÜ% +
.
ÜÜ+ ,
Empty
ÜÜ, 1
)
ÜÜ1 2
.
ÜÜ2 3
Replace
ÜÜ3 :
(
ÜÜ: ;
$str
ÜÜ; ?
,
ÜÜ? @
string
ÜÜA G
.
ÜÜG H
Empty
ÜÜH M
)
ÜÜM N
.
ÜÜN O
Replace
ÜÜO V
(
ÜÜV W
$str
ÜÜW [
,
ÜÜ[ \
string
ÜÜ] c
.
ÜÜc d
Empty
ÜÜd i
)
ÜÜi j
;
ÜÜj k
}
áá 	
public
ää 
static
ää 
string
ää 
	EscapeXml
ää &
(
ää& '
this
ää' +
string
ää, 2
s
ää3 4
)
ää4 5
{
ãã 	
string
åå 
xml
åå 
=
åå 
s
åå 
;
åå 
if
çç 
(
çç 
!
çç 
string
çç 
.
çç 
IsNullOrEmpty
çç %
(
çç% &
xml
çç& )
)
çç) *
)
çç* +
{
éé 
xml
êê 
=
êê 
xml
êê 
.
êê 
Replace
êê !
(
êê! "
$str
êê" %
,
êê% &
$str
êê' .
)
êê. /
;
êê/ 0
xml
ëë 
=
ëë 
xml
ëë 
.
ëë 
Replace
ëë !
(
ëë! "
$str
ëë" (
,
ëë( )
$str
ëë* 0
)
ëë0 1
;
ëë1 2
xml
íí 
=
íí 
xml
íí 
.
íí 
Replace
íí !
(
íí! "
$str
íí" (
,
íí( )
$str
íí* 0
)
íí0 1
;
íí1 2
xml
ìì 
=
ìì 
xml
ìì 
.
ìì 
Replace
ìì !
(
ìì! "
$str
ìì" &
,
ìì& '
$str
ìì( 0
)
ìì0 1
;
ìì1 2
xml
îî 
=
îî 
xml
îî 
.
îî 
Replace
îî !
(
îî! "
$str
îî" %
,
îî% &
$str
îî' /
)
îî/ 0
;
îî0 1
}
ïï 
return
ññ 
xml
ññ 
;
ññ 
}
óó 	
public
ôô 
static
ôô 
string
ôô 
UnescapeXml
ôô (
(
ôô( )
this
ôô) -
string
ôô. 4
s
ôô5 6
)
ôô6 7
{
öö 	
string
õõ 
unxml
õõ 
=
õõ 
s
õõ 
;
õõ 
if
úú 
(
úú 
!
úú 
string
úú 
.
úú 
IsNullOrEmpty
úú %
(
úú% &
unxml
úú& +
)
úú+ ,
)
úú, -
{
ùù 
unxml
üü 
=
üü 
unxml
üü 
.
üü 
Replace
üü %
(
üü% &
$str
üü& .
,
üü. /
$str
üü0 3
)
üü3 4
;
üü4 5
unxml
†† 
=
†† 
unxml
†† 
.
†† 
Replace
†† %
(
††% &
$str
††& .
,
††. /
$str
††0 4
)
††4 5
;
††5 6
unxml
°° 
=
°° 
unxml
°° 
.
°° 
Replace
°° %
(
°°% &
$str
°°& ,
,
°°, -
$str
°°. 4
)
°°4 5
;
°°5 6
unxml
¢¢ 
=
¢¢ 
unxml
¢¢ 
.
¢¢ 
Replace
¢¢ %
(
¢¢% &
$str
¢¢& ,
,
¢¢, -
$str
¢¢. 4
)
¢¢4 5
;
¢¢5 6
unxml
££ 
=
££ 
unxml
££ 
.
££ 
Replace
££ %
(
££% &
$str
££& -
,
££- .
$str
££/ 2
)
££2 3
;
££3 4
}
§§ 
return
•• 
unxml
•• 
;
•• 
}
¶¶ 	
public
©© 
static
©© 
List
©© 
<
©© 
string
©© !
>
©©! "
SplitOnChar
©©# .
(
©©. /
this
©©/ 3
string
©©4 :
s
©©; <
,
©©< =
char
©©> B
c
©©C D
)
©©D E
{
™™ 	
List
´´ 
<
´´ 
string
´´ 
>
´´ 
list
´´ 
=
´´ 
new
´´  #
List
´´$ (
<
´´( )
string
´´) /
>
´´/ 0
(
´´0 1
)
´´1 2
;
´´2 3
if
¨¨ 
(
¨¨ 
string
¨¨ 
.
¨¨ 
IsNullOrEmpty
¨¨ $
(
¨¨$ %
s
¨¨% &
)
¨¨& '
)
¨¨' (
{
¨¨) *
return
¨¨+ 1
list
¨¨2 6
;
¨¨6 7
}
¨¨8 9
string
ÆÆ 
[
ÆÆ 
]
ÆÆ 
a
ÆÆ 
=
ÆÆ 
s
ÆÆ 
.
ÆÆ 
Split
ÆÆ  
(
ÆÆ  !
c
ÆÆ! "
)
ÆÆ" #
;
ÆÆ# $
foreach
ØØ 
(
ØØ 
string
ØØ 
item
ØØ  
in
ØØ! #
a
ØØ$ %
)
ØØ% &
{
∞∞ 
if
±± 
(
±± 
!
±± 
string
±± 
.
±± 
IsNullOrEmpty
±± )
(
±±) *
item
±±* .
)
±±. /
)
±±/ 0
{
±±1 2
list
±±3 7
.
±±7 8
Add
±±8 ;
(
±±; <
item
±±< @
)
±±@ A
;
±±A B
}
±±C D
}
≤≤ 
return
µµ 
list
µµ 
;
µµ 
}
∂∂ 	
public
∏∏ 
static
∏∏ 
List
∏∏ 
<
∏∏ 
string
∏∏ !
>
∏∏! " 
SplitOnCharAndTrim
∏∏# 5
(
∏∏5 6
this
∏∏6 :
string
∏∏; A
s
∏∏B C
,
∏∏C D
char
∏∏E I
c
∏∏J K
)
∏∏K L
{
ππ 	
List
∫∫ 
<
∫∫ 
string
∫∫ 
>
∫∫ 
list
∫∫ 
=
∫∫ 
new
∫∫  #
List
∫∫$ (
<
∫∫( )
string
∫∫) /
>
∫∫/ 0
(
∫∫0 1
)
∫∫1 2
;
∫∫2 3
if
ªª 
(
ªª 
string
ªª 
.
ªª 
IsNullOrEmpty
ªª $
(
ªª$ %
s
ªª% &
)
ªª& '
)
ªª' (
{
ªª) *
return
ªª+ 1
list
ªª2 6
;
ªª6 7
}
ªª8 9
string
ΩΩ 
[
ΩΩ 
]
ΩΩ 
a
ΩΩ 
=
ΩΩ 
s
ΩΩ 
.
ΩΩ 
Split
ΩΩ  
(
ΩΩ  !
c
ΩΩ! "
)
ΩΩ" #
;
ΩΩ# $
foreach
ææ 
(
ææ 
string
ææ 
item
ææ  
in
ææ! #
a
ææ$ %
)
ææ% &
{
øø 
if
¿¿ 
(
¿¿ 
!
¿¿ 
string
¿¿ 
.
¿¿ 
IsNullOrEmpty
¿¿ )
(
¿¿) *
item
¿¿* .
)
¿¿. /
)
¿¿/ 0
{
¿¿1 2
list
¿¿3 7
.
¿¿7 8
Add
¿¿8 ;
(
¿¿; <
item
¿¿< @
.
¿¿@ A
Trim
¿¿A E
(
¿¿E F
)
¿¿F G
)
¿¿G H
;
¿¿H I
}
¿¿J K
}
¡¡ 
return
ƒƒ 
list
ƒƒ 
;
ƒƒ 
}
≈≈ 	
public
«« 
static
««	 
List
«« 
<
«« 
string
«« 
>
«« #
SplitOnNewLineAndTrim
«« 2
(
««3 4
this
««4 8
string
««9 ?
s
««@ A
)
««A B
{
»» 
var
…… 
list
…… 
=
…… 
new
…… 
List
…… 
<
…… 
string
…… 
>
…… 
(
…… 
)
……  
;
……  !
if
   
(
   
string
   
.
    
IsNullOrWhiteSpace
    
(
    !
s
  ! "
)
  " #
)
  # $
{
  % &
return
  ' -
list
  . 2
;
  2 3
}
  4 5
string
ÀÀ 	
[
ÀÀ	 

]
ÀÀ
 
a
ÀÀ 
=
ÀÀ 
s
ÀÀ 
.
ÀÀ 
Split
ÀÀ 
(
ÀÀ 
new
ÃÃ 
[
ÃÃ 
]
ÃÃ 	
{
ÃÃ
 
$str
ÃÃ 
,
ÃÃ 
$str
ÃÃ 
,
ÃÃ 
$str
ÃÃ 
}
ÃÃ  
,
ÃÃ  ! 
StringSplitOptions
ÕÕ 
.
ÕÕ  
RemoveEmptyEntries
ÕÕ )
)
ŒŒ 
;
ŒŒ 
foreach
œœ 

(
œœ 
string
œœ 
b
œœ 
in
œœ 
a
œœ 
)
œœ 
{
–– 
if
—— 
(
—— 
!
—— 	
string
——	 
.
——  
IsNullOrWhiteSpace
—— "
(
——" #
b
——# $
)
——$ %
)
——% &
{
——' (
list
——) -
.
——- .
Add
——. 1
(
——1 2
b
——2 3
.
——3 4
Trim
——4 8
(
——8 9
)
——9 :
)
——: ;
;
——; <
}
——= >
}
““ 
return
”” 	
list
””
 
;
”” 
}
‘‘ 
public
÷÷ 
static
÷÷ 
List
÷÷ 
<
÷÷ 
string
÷÷ !
>
÷÷! "
SplitOnPipes
÷÷# /
(
÷÷/ 0
string
÷÷0 6
s
÷÷7 8
)
÷÷8 9
{
◊◊ 	
List
ÿÿ 
<
ÿÿ 
string
ÿÿ 
>
ÿÿ 
list
ÿÿ 
=
ÿÿ 
new
ÿÿ  #
List
ÿÿ$ (
<
ÿÿ( )
string
ÿÿ) /
>
ÿÿ/ 0
(
ÿÿ0 1
)
ÿÿ1 2
;
ÿÿ2 3
if
ŸŸ 
(
ŸŸ 
string
ŸŸ 
.
ŸŸ 
IsNullOrEmpty
ŸŸ $
(
ŸŸ$ %
s
ŸŸ% &
)
ŸŸ& '
)
ŸŸ' (
{
ŸŸ) *
return
ŸŸ+ 1
list
ŸŸ2 6
;
ŸŸ6 7
}
ŸŸ8 9
string
€€ 
[
€€ 
]
€€ 
a
€€ 
=
€€ 
s
€€ 
.
€€ 
Split
€€  
(
€€  !
$char
€€! $
)
€€$ %
;
€€% &
foreach
‹‹ 
(
‹‹ 
string
‹‹ 
item
‹‹  
in
‹‹! #
a
‹‹$ %
)
‹‹% &
{
›› 
if
ﬁﬁ 
(
ﬁﬁ 
!
ﬁﬁ 
string
ﬁﬁ 
.
ﬁﬁ 
IsNullOrEmpty
ﬁﬁ )
(
ﬁﬁ) *
item
ﬁﬁ* .
)
ﬁﬁ. /
)
ﬁﬁ/ 0
{
ﬁﬁ1 2
list
ﬁﬁ3 7
.
ﬁﬁ7 8
Add
ﬁﬁ8 ;
(
ﬁﬁ; <
item
ﬁﬁ< @
)
ﬁﬁ@ A
;
ﬁﬁA B
}
ﬁﬁC D
}
ﬂﬂ 
return
‚‚ 
list
‚‚ 
;
‚‚ 
}
„„ 	
public
ÔÔ 
static
ÔÔ	 
bool
ÔÔ 
IsIn
ÔÔ 
<
ÔÔ 
T
ÔÔ 
>
ÔÔ 
(
ÔÔ 
this
ÔÔ !
T
ÔÔ" #
source
ÔÔ$ *
,
ÔÔ* +
params
ÔÔ, 2
T
ÔÔ3 4
[
ÔÔ4 5
]
ÔÔ5 6
values
ÔÔ7 =
)
ÔÔ= >
{
 
return
ÒÒ 	
values
ÒÒ
 
.
ÒÒ 
Contains
ÒÒ 
(
ÒÒ 
source
ÒÒ  
)
ÒÒ  !
;
ÒÒ! "
}
ÚÚ 
}
ˆˆ 
}˜˜ Ò§
kD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\UIHelper.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public   

static   
class   
UIHelper    
{!! 
public"" 
const"" 
string"" 
CenterColumnId"" *
=""+ ,
$str""- 8
;""8 9
public## 
const## 
string## 
LeftColumnId## (
=##) *
$str##+ 4
;##4 5
public$$ 
const$$ 
string$$ 
RightColumnId$$ )
=$$* +
$str$$, 6
;$$6 7
public'' 
const'' 
string'' #
ArtisteerPostMetaHeader'' 3
=''4 5
$str''6 N
;''N O
public(( 
const(( 
string(( 
ArtPostHeader(( )
=((* +
$str((, <
;((< =
public)) 
const)) 
string))  
ArtisteerBlockHeader)) 0
=))1 2
$str))3 D
;))D E
public++ 
const++ 
string++ 
ArtisteerPost++ )
=++* +
$str++, 6
;++6 7
public,, 
const,, 
string,,  
ArtisteerPostContent,, 0
=,,1 2
$str,,3 D
;,,D E
public-- 
const-- 
string-- 
ArtisteerBlock-- *
=--+ ,
$str--- 8
;--8 9
public.. 
const.. 
string.. !
ArtisteerBlockContent.. 1
=..2 3
$str..4 F
;..F G
public00 
const00 
string00 (
ArtisteerPostMetaHeaderLower00 8
=009 :
$str00; S
;00S T
public11 
const11 
string11 
ArtPostHeaderLower11 .
=11/ 0
$str111 A
;11A B
public22 
const22 
string22 %
ArtisteerBlockHeaderLower22 5
=226 7
$str228 I
;22I J
public44 
const44 
string44 
ArtisteerPostLower44 .
=44/ 0
$str441 ;
;44; <
public55 
const55 
string55 %
ArtisteerPostContentLower55 5
=556 7
$str558 I
;55I J
public66 
const66 
string66 
ArtisteerBlockLower66 /
=660 1
$str662 =
;66= >
public77 
const77 
string77 &
ArtisteerBlockContentLower77 6
=777 8
$str779 K
;77K L
public99 
static99 
string99 
GetColumnId99 (
(99( )
this99) -
Control99. 5
c996 7
)997 8
{:: 	
Control;; 
parent;; 
=;; 
c;; 
.;; 
Parent;; %
;;;% &
if<< 
(<< 
parent<< 
==<< 
null<< 
)<< 
{<<  !
return<<" (
CenterColumnId<<) 7
;<<7 8
}<<9 :
while== 
(== 
parent== 
!=== 
null== !
)==! "
{>> 
if?? 
(?? 
parent?? 
.?? 
ID?? 
==??  
CenterColumnId??! /
)??/ 0
{??1 2
return??3 9
CenterColumnId??: H
;??H I
}??J K
if@@ 
(@@ 
parent@@ 
.@@ 
ID@@ 
==@@  
LeftColumnId@@! -
)@@- .
{@@/ 0
return@@1 7
LeftColumnId@@8 D
;@@D E
}@@F G
ifAA 
(AA 
parentAA 
.AA 
IDAA 
==AA  
RightColumnIdAA! .
)AA. /
{AA0 1
returnAA2 8
RightColumnIdAA9 F
;AAF G
}AAH I
parentCC 
=CC 
parentCC 
.CC  
ParentCC  &
;CC& '
}DD 
returnFF 
CenterColumnIdFF !
;FF! "
}HH 	
publicJJ 
staticJJ 
voidJJ 
SetOrAppendCssJJ )
(JJ) *
thisJJ* .

WebControlJJ/ 9
cJJ: ;
,JJ; <
stringJJ= C
cssClassJJD L
)JJL M
{KK 	
ifLL 
(LL 
stringLL 
.LL 
IsNullOrEmptyLL $
(LL$ %
cssClassLL% -
)LL- .
)LL. /
{LL0 1
returnLL2 8
;LL8 9
}LL: ;
ifNN 
(NN 
cNN 
.NN 
CssClassNN 
.NN 
LengthNN !
==NN" $
$numNN% &
)NN& '
{OO 
cPP 
.PP 
CssClassPP 
=PP 
cssClassPP %
;PP% &
}QQ 
elseRR 
{SS 
cTT 
.TT 
CssClassTT 
+=TT 
$strTT !
+TT" #
cssClassTT$ ,
;TT, -
}UU 
}WW 	
publicZZ 
staticZZ 
stringZZ 
ToInvariantStringZZ .
(ZZ. /
thisZZ/ 3
intZZ4 7
iZZ8 9
)ZZ9 :
{[[ 	
return\\ 
i\\ 
.\\ 
ToString\\ 
(\\ 
CultureInfo\\ )
.\\) *
InvariantCulture\\* :
)\\: ;
;\\; <
}^^ 	
public`` 
static`` 
string`` 
ToInvariantString`` .
(``. /
this``/ 3
float``4 9
i``: ;
)``; <
{aa 	
returnbb 
ibb 
.bb 
ToStringbb 
(bb 
CultureInfobb )
.bb) *
InvariantCulturebb* :
)bb: ;
;bb; <
}dd 	
publicff 
staticff	 
stringff 
ToInvariantStringff (
(ff( )
thisff) -
decimalff. 5
iff6 7
)ff7 8
{gg 
returnhh 	
ihh
 
.hh 
ToStringhh 
(hh 
CultureInfohh  
.hh  !
InvariantCulturehh! 1
)hh1 2
;hh2 3
}ii 
publicnn 
staticnn 
IDictionarynn !
<nn! "
intnn" %
,nn% &
stringnn' -
>nn- .
EnumToDictionarynn/ ?
<nn? @
TEnumnn@ E
>nnE F
(nnF G
)nnG H
wherennI N
TEnumnnO T
:nnU V
structnnW ]
{oo 	
Typepp 
enumerationTypepp  
=pp! "
typeofpp# )
(pp) *
TEnumpp* /
)pp/ 0
;pp0 1
ifrr 
(rr 
!rr 
enumerationTyperr  
.rr  !
IsEnumrr! '
)rr' (
throwss 
newss 
ArgumentExceptionss +
(ss+ ,
$strss, K
)ssK L
;ssL M

Dictionaryuu 
<uu 
intuu 
,uu 
stringuu "
>uu" #

dictionaryuu$ .
=uu/ 0
newuu1 4

Dictionaryuu5 ?
<uu? @
intuu@ C
,uuC D
stringuuE K
>uuK L
(uuL M
)uuM N
;uuN O
foreachww 
(ww 
intww 
valueww 
inww !
Enumww" &
.ww& '
	GetValuesww' 0
(ww0 1
enumerationTypeww1 @
)ww@ A
)wwA B
{xx 
varyy 
nameyy 
=yy 
Enumyy 
.yy  
GetNameyy  '
(yy' (
enumerationTypeyy( 7
,yy7 8
valueyy9 >
)yy> ?
;yy? @

dictionaryzz 
.zz 
Addzz 
(zz 
valuezz $
,zz$ %
namezz& *
)zz* +
;zz+ ,
}{{ 
return}} 

dictionary}} 
;}} 
}~~ 	
public
ÜÜ 
static
ÜÜ	 
IDictionary
ÜÜ 
<
ÜÜ 
string
ÜÜ "
,
ÜÜ" #
string
ÜÜ$ *
>
ÜÜ* +%
GetDictionaryFromString
ÜÜ, C
(
ÜÜC D
string
ÜÜD J
str
ÜÜK N
)
ÜÜN O
{
áá 
List
àà 
<
àà 
string
àà 
>
àà 
keyValuePairs
àà 
=
àà 
str
àà  #
.
àà# $
SplitOnChar
àà$ /
(
àà/ 0
$char
àà0 3
)
àà3 4
;
àà4 5

Dictionary
ââ 
<
ââ 
string
ââ 
,
ââ 
string
ââ 
>
ââ 

dictionary
ââ (
=
ââ) *
new
ââ+ .

Dictionary
ââ/ 9
<
ââ9 :
string
ââ: @
,
ââ@ A
string
ââB H
>
ââH I
(
ââI J
)
ââJ K
;
ââK L
foreach
ää 

(
ää 
string
ää 
kvp
ää 
in
ää 
keyValuePairs
ää '
)
ää' (
{
ãã 
List
åå 
<
åå 	
string
åå	 
>
åå 
kv
åå 
=
åå 
kvp
åå 
.
åå  
SplitOnCharAndTrim
åå ,
(
åå, -
$char
åå- 0
)
åå0 1
;
åå1 2

dictionary
çç 
.
çç 
Add
çç 
(
çç 
kv
çç 
[
çç 
$num
çç 
]
çç 
,
çç 
kv
çç 
[
çç 
$num
çç 
]
çç 
)
çç  
;
çç  !
}
éé 
return
èè 	

dictionary
èè
 
;
èè 
}
êê 
public
ëë 
static
ëë	 
string
ëë 5
'SelectedItemsToSemiColonSeparatedString
ëë >
(
ëë> ?
this
ëë? C 
ListItemCollection
ëëD V
list
ëëW [
)
ëë[ \
{
íí 	
StringBuilder
ìì 
result
ìì  
=
ìì! "
new
ìì# &
StringBuilder
ìì' 4
(
ìì4 5
)
ìì5 6
;
ìì6 7
foreach
îî 
(
îî 
ListItem
îî 
item
îî "
in
îî# %
list
îî& *
)
îî* +
{
ïï 
if
ññ 
(
ññ 
item
ññ 
.
ññ 
Selected
ññ !
)
ññ! "
{
óó 
result
òò 
.
òò 
Append
òò !
(
òò! "
item
òò" &
.
òò& '
Value
òò' ,
+
òò- .
$str
òò/ 2
)
òò2 3
;
òò3 4
}
ôô 
}
öö 
return
úú 
result
úú 
.
úú 
ToString
úú "
(
úú" #
)
úú# $
;
úú$ %
}
ùù 	
public
üü 
static
üü 
string
üü 1
#SelectedItemsToCommaSeparatedString
üü @
(
üü@ A
this
üüA E 
ListItemCollection
üüF X
list
üüY ]
)
üü] ^
{
†† 	
StringBuilder
°° 
result
°°  
=
°°! "
new
°°# &
StringBuilder
°°' 4
(
°°4 5
)
°°5 6
;
°°6 7
string
¢¢ 
comma
¢¢ 
=
¢¢ 
string
¢¢ !
.
¢¢! "
Empty
¢¢" '
;
¢¢' (
foreach
££ 
(
££ 
ListItem
££ 
item
££ "
in
££# %
list
££& *
)
££* +
{
§§ 
if
•• 
(
•• 
item
•• 
.
•• 
Selected
•• !
)
••! "
{
¶¶ 
result
ßß 
.
ßß 
Append
ßß !
(
ßß! "
comma
ßß" '
+
ßß( )
item
ßß* .
.
ßß. /
Value
ßß/ 4
)
ßß4 5
;
ßß5 6
comma
®® 
=
®® 
$str
®® 
;
®®  
}
©© 
}
™™ 
return
¨¨ 
result
¨¨ 
.
¨¨ 
ToString
¨¨ "
(
¨¨" #
)
¨¨# $
;
¨¨$ %
}
≠≠ 	
public
≥≥ 
static
≥≥ 
Color
≥≥ 
HexStringToColor
≥≥ ,
(
≥≥, -
string
≥≥- 3
hexColor
≥≥4 <
)
≥≥< =
{
¥¥ 	
string
µµ 
hc
µµ 
=
µµ 
ExtractHexDigits
µµ (
(
µµ( )
hexColor
µµ) 1
)
µµ1 2
;
µµ2 3
if
∂∂ 
(
∂∂ 
hc
∂∂ 
.
∂∂ 
Length
∂∂ 
!=
∂∂ 
$num
∂∂ 
)
∂∂ 
{
∑∑ 
return
∏∏ 
Color
∏∏ 
.
∏∏ 
Blue
∏∏ !
;
∏∏! "
}
ππ 
string
∫∫ 
r
∫∫ 
=
∫∫ 
hc
∫∫ 
.
∫∫ 
	Substring
∫∫ #
(
∫∫# $
$num
∫∫$ %
,
∫∫% &
$num
∫∫' (
)
∫∫( )
;
∫∫) *
string
ªª 
g
ªª 
=
ªª 
hc
ªª 
.
ªª 
	Substring
ªª #
(
ªª# $
$num
ªª$ %
,
ªª% &
$num
ªª' (
)
ªª( )
;
ªª) *
string
ºº 
b
ºº 
=
ºº 
hc
ºº 
.
ºº 
	Substring
ºº #
(
ºº# $
$num
ºº$ %
,
ºº% &
$num
ºº' (
)
ºº( )
;
ºº) *
Color
ΩΩ 
color
ΩΩ 
=
ΩΩ 
Color
ΩΩ 
.
ΩΩ  
Blue
ΩΩ  $
;
ΩΩ$ %
try
ææ 
{
øø 
int
¿¿ 
ri
¿¿ 
=
¡¡ 
Int32
¡¡ 
.
¡¡ 
Parse
¡¡  
(
¡¡  !
r
¡¡! "
,
¡¡" #
System
¡¡$ *
.
¡¡* +
Globalization
¡¡+ 8
.
¡¡8 9
NumberStyles
¡¡9 E
.
¡¡E F
	HexNumber
¡¡F O
)
¡¡O P
;
¡¡P Q
int
¬¬ 
gi
¬¬ 
=
√√ 
Int32
√√ 
.
√√ 
Parse
√√  
(
√√  !
g
√√! "
,
√√" #
System
√√$ *
.
√√* +
Globalization
√√+ 8
.
√√8 9
NumberStyles
√√9 E
.
√√E F
	HexNumber
√√F O
)
√√O P
;
√√P Q
int
ƒƒ 
bi
ƒƒ 
=
≈≈ 
Int32
≈≈ 
.
≈≈ 
Parse
≈≈  
(
≈≈  !
b
≈≈! "
,
≈≈" #
System
≈≈$ *
.
≈≈* +
Globalization
≈≈+ 8
.
≈≈8 9
NumberStyles
≈≈9 E
.
≈≈E F
	HexNumber
≈≈F O
)
≈≈O P
;
≈≈P Q
color
∆∆ 
=
∆∆ 
Color
∆∆ 
.
∆∆ 
FromArgb
∆∆ &
(
∆∆& '
ri
∆∆' )
,
∆∆) *
gi
∆∆+ -
,
∆∆- .
bi
∆∆/ 1
)
∆∆1 2
;
∆∆2 3
}
«« 
catch
»» 
{
…… 
return
   
Color
   
.
   
Blue
   !
;
  ! "
}
ÀÀ 
return
ÃÃ 
color
ÃÃ 
;
ÃÃ 
}
ÕÕ 	
public
—— 
static
—— 
string
—— 
ExtractHexDigits
—— -
(
——- .
string
——. 4
input
——5 :
)
——: ;
{
““ 	
Regex
‘‘ 

isHexDigit
‘‘ 
=
‘‘ 
new
‘‘ "
Regex
‘‘# (
(
‘‘( )
$str
‘‘) =
,
‘‘= >
RegexOptions
‘‘? K
.
‘‘K L
Compiled
‘‘L T
)
‘‘T U
;
‘‘U V
string
’’ 
newnum
’’ 
=
’’ 
string
’’ "
.
’’" #
Empty
’’# (
;
’’( )
foreach
÷÷ 
(
÷÷ 
char
÷÷ 
c
÷÷ 
in
÷÷ 
input
÷÷ $
)
÷÷$ %
{
◊◊ 
if
ÿÿ 
(
ÿÿ 

isHexDigit
ÿÿ 
.
ÿÿ 
IsMatch
ÿÿ &
(
ÿÿ& '
c
ÿÿ' (
.
ÿÿ( )
ToString
ÿÿ) 1
(
ÿÿ1 2
)
ÿÿ2 3
)
ÿÿ3 4
)
ÿÿ4 5
newnum
ŸŸ 
+=
ŸŸ 
c
ŸŸ 
.
ŸŸ  
ToString
ŸŸ  (
(
ŸŸ( )
)
ŸŸ) *
;
ŸŸ* +
}
⁄⁄ 
return
€€ 
newnum
€€ 
;
€€ 
}
‹‹ 	
public
ÓÓ 
static
ÓÓ 
void
ÓÓ $
ValidateNotNullOrEmpty
ÓÓ 1
(
ÓÓ1 2
string
ÓÓ2 8
value
ÓÓ9 >
,
ÓÓ> ?
string
ÓÓ@ F
name
ÓÓG K
)
ÓÓK L
{
ÔÔ 	
if
 
(
 
value
 
==
 
null
 
)
 
throw
ÒÒ 
new
ÒÒ #
ArgumentNullException
ÒÒ /
(
ÒÒ/ 0
name
ÒÒ0 4
)
ÒÒ4 5
;
ÒÒ5 6
if
ÚÚ 
(
ÚÚ 
value
ÚÚ 
.
ÚÚ 
Length
ÚÚ 
==
ÚÚ 
$num
ÚÚ  !
)
ÚÚ! "
throw
ÛÛ 
new
ÛÛ 
ArgumentException
ÛÛ +
(
ÛÛ+ ,
name
ÛÛ, 0
+
ÛÛ1 2
$str
ÛÛ3 F
,
ÛÛF G
name
ÛÛH L
)
ÛÛL M
;
ÛÛM N
}
ÙÙ 	
public
ÇÇ 
static
ÇÇ 
void
ÇÇ 
ValidateNotNull
ÇÇ *
(
ÇÇ* +
object
ÇÇ+ 1
value
ÇÇ2 7
,
ÇÇ7 8
string
ÇÇ9 ?
name
ÇÇ@ D
)
ÇÇD E
{
ÉÉ 	
if
ÑÑ 
(
ÑÑ 
value
ÑÑ 
==
ÑÑ 
null
ÑÑ 
)
ÑÑ 
throw
ÖÖ 
new
ÖÖ #
ArgumentNullException
ÖÖ /
(
ÖÖ/ 0
name
ÖÖ0 4
)
ÖÖ4 5
;
ÖÖ5 6
}
ÜÜ 	
public
ââ 
static
ââ 
String
ââ  
BuildHtmlErrorPage
ââ /
(
ââ/ 0
	Exception
ââ0 9
ex
ââ: <
)
ââ< =
{
ää 	
String
ãã 
	errorHtml
ãã 
=
ãã 
$str
ãã A
+
åå 
$str
åå <
+
åå= >
WebUtils
åå? G
.
ååG H
GetSiteRoot
ååH S
(
ååS T
)
ååT U
+
ååV W
$strååX ä
+
çç 
$str
çç i
+
éé 
ex
éé 
.
éé 
Message
éé 
+
éé 
$str
éé '
+
èè 
$str
èè X
+
èèY Z
ex
èè[ ]
.
èè] ^
Source
èè^ d
+
èèe f
$str
èèg o
+
êê 
$str
êê \
+
êê] ^
ex
êê_ a
.
êêa b

StackTrace
êêb l
+
êêm n
$str
êêo w
+
ëë 
$str
ëë "
;
ëë" #
return
ìì 
	errorHtml
ìì 
;
ìì 
}
ïï 	
public
óó 
static
óó 
string
óó 
GetPagerLinks
óó *
(
óó* +
string
òò 
pageUrl
òò 
,
òò 
int
ôô 
fromPage
ôô 
,
ôô 
int
öö 
toPage
öö 
,
öö 
int
õõ 
selectedPage
õõ 
)
õõ 
{
úú 	
if
ùù 
(
ùù 
String
ùù 
.
ùù 
IsNullOrEmpty
ùù $
(
ùù$ %
pageUrl
ùù% ,
)
ùù, -
)
ùù- .
return
ùù/ 5
String
ùù6 <
.
ùù< =
Empty
ùù= B
;
ùùB C
StringBuilder
üü 
stringBuilder
üü '
=
üü( )
new
üü* -
StringBuilder
üü. ;
(
üü; <
)
üü< =
;
üü= >
for
†† 
(
†† 
int
†† 
i
†† 
=
†† 
fromPage
†† !
;
††! "
i
††# $
<
††% &
toPage
††' -
+
††. /
$num
††0 1
;
††1 2
i
††3 4
++
††4 6
)
††6 7
{
°° 
string
¢¢ 
cssClass
¢¢ 
=
¢¢  !
(
¢¢" #
selectedPage
¢¢# /
==
¢¢0 2
i
¢¢3 4
)
¢¢4 5
?
¢¢6 7
$str
¢¢8 F
:
¢¢G H
$str
¢¢I V
;
¢¢V W
stringBuilder
££ 
.
££ 
AppendFormat
££ *
(
§§ 
$str
§§ A
,
§§A B
cssClass
§§C K
,
§§K L
pageUrl
§§M T
,
§§T U
i
§§V W
,
§§W X
i
§§Y Z
)
§§Z [
;
§§[ \
if
¶¶ 
(
¶¶ 
(
¶¶ 
i
¶¶ 
%
¶¶ 
$num
¶¶ 
)
¶¶ 
==
¶¶ 
$num
¶¶  !
)
¶¶! "
{
ßß 
stringBuilder
®® !
.
®®! "
Append
®®" (
(
®®( )
$str
®®) 1
)
®®1 2
;
®®2 3
}
©© 
}
™™ 
return
´´ 
stringBuilder
´´  
.
´´  !
ToString
´´! )
(
´´) *
)
´´* +
;
´´+ ,
}
¨¨ 	
public
ππ 
static
ππ 
string
ππ 
CreatePagerLinks
ππ -
(
ππ- .
string
∫∫ 
pageUrl
∫∫ 
,
∫∫ 
int
ªª 
currentPage
ªª 
,
ªª 
int
ºº 

totalPages
ºº 
,
ºº 
string
ΩΩ 
prevPageAlt
ΩΩ 
,
ΩΩ 
string
ææ 
nextPageAlt
ææ 
,
ææ 
string
øø 
firstPageAlt
øø 
,
øø  
string
¿¿ 
lastPageAlt
¿¿ 
)
¿¿ 
{
¡¡ 	
StringBuilder
√√ 
sbPager
√√ !
=
√√" #
new
√√$ '
StringBuilder
√√( 5
(
√√5 6
)
√√6 7
;
√√7 8
if
ƒƒ 
(
ƒƒ 
currentPage
ƒƒ 
!=
ƒƒ 
$num
ƒƒ  
)
ƒƒ  !
{
≈≈ 
if
∆∆ 
(
∆∆ 
(
∆∆ 
currentPage
∆∆  
-
∆∆! "
$num
∆∆# $
)
∆∆$ %
!=
∆∆& (
$num
∆∆) *
)
∆∆* +
{
«« 
sbPager
…… 
.
…… 
Append
…… "
(
……" #
$str
……# /
+
……0 1
firstPageAlt
……2 >
+
……? @
$str
……A J
+
   
firstPageAlt
   &
+
  ' (
$str
  ) 3
)
  3 4
;
  4 5
sbPager
ÀÀ 
.
ÀÀ 
Append
ÀÀ "
(
ÀÀ" #
pageUrl
ÀÀ# *
)
ÀÀ* +
;
ÀÀ+ ,
sbPager
ÃÃ 
.
ÃÃ 
Append
ÃÃ "
(
ÃÃ" #
$str
ÃÃ# &
)
ÃÃ& '
;
ÃÃ' (
sbPager
ÕÕ 
.
ÕÕ 
Append
ÕÕ "
(
ÕÕ" #
$str
ÕÕ# 1
)
ÕÕ1 2
;
ÕÕ2 3
}
ŒŒ 
sbPager
—— 
.
—— 
Append
—— 
(
—— 
$str
—— +
+
——, -
prevPageAlt
——. 9
+
——: ;
$str
——< E
+
““ 
prevPageAlt
““ %
+
““& '
$str
““( 2
)
““2 3
;
““3 4
sbPager
”” 
.
”” 
Append
”” 
(
”” 
pageUrl
”” &
)
””& '
;
””' (
sbPager
‘‘ 
.
‘‘ 
Append
‘‘ 
(
‘‘ 
currentPage
‘‘ *
-
‘‘+ ,
$num
‘‘- .
)
‘‘. /
;
‘‘/ 0
sbPager
’’ 
.
’’ 
Append
’’ 
(
’’ 
$str
’’ 2
)
’’2 3
;
’’3 4
}
÷÷ 
if
ŸŸ 
(
ŸŸ 
currentPage
ŸŸ 
!=
ŸŸ 

totalPages
ŸŸ )
)
ŸŸ) *
{
⁄⁄ 
sbPager
‹‹ 
.
‹‹ 
Append
‹‹ 
(
‹‹ 
$str
‹‹ +
+
‹‹, -
nextPageAlt
‹‹. 9
+
‹‹: ;
$str
‹‹< E
+
›› 
nextPageAlt
›› %
+
››& '
$str
››( 2
)
››2 3
;
››3 4
sbPager
ﬁﬁ 
.
ﬁﬁ 
Append
ﬁﬁ 
(
ﬁﬁ 
pageUrl
ﬁﬁ &
)
ﬁﬁ& '
;
ﬁﬁ' (
sbPager
ﬂﬂ 
.
ﬂﬂ 
Append
ﬂﬂ 
(
ﬂﬂ 
currentPage
ﬂﬂ *
+
ﬂﬂ+ ,
$num
ﬂﬂ- .
)
ﬂﬂ. /
;
ﬂﬂ/ 0
sbPager
‡‡ 
.
‡‡ 
Append
‡‡ 
(
‡‡ 
$str
‡‡ 1
)
‡‡1 2
;
‡‡2 3
sbPager
„„ 
.
„„ 
Append
„„ 
(
„„ 
$str
„„ +
+
„„, -
lastPageAlt
„„. 9
+
„„: ;
$str
„„< E
+
‰‰ 
lastPageAlt
‰‰ %
+
‰‰& '
$str
‰‰( 2
)
‰‰2 3
;
‰‰3 4
sbPager
ÂÂ 
.
ÂÂ 
Append
ÂÂ 
(
ÂÂ 
pageUrl
ÂÂ &
)
ÂÂ& '
;
ÂÂ' (
sbPager
ÊÊ 
.
ÊÊ 
Append
ÊÊ 
(
ÊÊ 

totalPages
ÊÊ )
)
ÊÊ) *
;
ÊÊ* +
sbPager
ÁÁ 
.
ÁÁ 
Append
ÁÁ 
(
ÁÁ 
$str
ÁÁ ,
)
ÁÁ, -
;
ÁÁ- .
}
ËË 
return
ÍÍ 
sbPager
ÍÍ 
.
ÍÍ 
ToString
ÍÍ #
(
ÍÍ# $
)
ÍÍ$ %
;
ÍÍ% &
}
ÎÎ 	
public
˜˜ 
static
˜˜ 
string
˜˜ '
GetPagerLinksWithPrevNext
˜˜ 6
(
˜˜6 7
string
¯¯ 
pageUrl
¯¯ 
,
¯¯ 
int
˘˘ 
fromPage
˘˘ 
,
˘˘ 
int
˙˙ 
toPage
˙˙ 
,
˙˙ 
int
˚˚ 
selectedPage
˚˚ 
,
˚˚ 
string
¸¸ 
	mainStyle
¸¸ 
,
¸¸ 
string
˝˝ 
selectedStyle
˝˝  
)
˝˝  !
{
˛˛ 	
if
ˇˇ 
(
ˇˇ 
String
ˇˇ 
.
ˇˇ 
IsNullOrEmpty
ˇˇ $
(
ˇˇ$ %
pageUrl
ˇˇ% ,
)
ˇˇ, -
)
ˇˇ- .
return
ˇˇ/ 5
String
ˇˇ6 <
.
ˇˇ< =
Empty
ˇˇ= B
;
ˇˇB C
string
ÅÅ 
mainCssClass
ÅÅ 
=
ÅÅ  !
String
ÇÇ 
.
ÇÇ 
IsNullOrEmpty
ÇÇ $
(
ÇÇ$ %
	mainStyle
ÇÇ% .
)
ÇÇ. /
?
ÇÇ0 1
String
ÇÇ2 8
.
ÇÇ8 9
Empty
ÇÇ9 >
:
ÇÇ? @
$str
ÇÇA J
+
ÇÇK L
	mainStyle
ÇÇM V
+
ÇÇW X
$str
ÇÇY ]
;
ÇÇ] ^
string
ÉÉ 
selectedCssClass
ÉÉ #
=
ÉÉ$ %
String
ÑÑ 
.
ÑÑ 
IsNullOrEmpty
ÑÑ $
(
ÑÑ$ %
selectedStyle
ÑÑ% 2
)
ÑÑ2 3
?
ÑÑ4 5
String
ÑÑ6 <
.
ÑÑ< =
Empty
ÑÑ= B
:
ÑÑC D
$str
ÑÑE N
+
ÑÑO P
selectedStyle
ÑÑQ ^
+
ÑÑ_ `
$str
ÑÑa e
;
ÑÑe f
StringBuilder
ÜÜ 
stringBuilder
ÜÜ '
=
ÜÜ( )
new
ÜÜ* -
StringBuilder
ÜÜ. ;
(
ÜÜ; <
)
ÜÜ< =
;
ÜÜ= >
int
áá 
previousPage
áá 
=
áá 
selectedPage
áá +
-
áá, -
$num
áá. /
;
áá/ 0
int
àà 
nextPage
àà 
=
àà 
selectedPage
àà '
+
àà( )
$num
àà* +
;
àà+ ,
if
ââ 
(
ââ 
previousPage
ââ 
>
ââ 
$num
ââ  
)
ââ  !
{
ää 
stringBuilder
ãã 
.
ãã 
AppendFormat
ãã *
(
åå 
$str
åå B
,
ååB C
mainCssClass
ååD P
,
ååP Q
pageUrl
ååR Y
,
ååY Z
previousPage
åå[ g
)
ååg h
;
ååh i
}
çç 
if
éé 
(
éé 
nextPage
éé 
<=
éé 
toPage
éé "
)
éé" #
{
èè 
stringBuilder
êê 
.
êê 
AppendFormat
êê *
(
ëë 
$str
ëë B
,
ëëB C
mainCssClass
ëëD P
,
ëëP Q
pageUrl
ëëR Y
,
ëëY Z
nextPage
ëë[ c
)
ëëc d
;
ëëd e
}
íí 
for
îî 
(
îî 
int
îî 
i
îî 
=
îî 
fromPage
îî !
;
îî! "
i
îî# $
<
îî% &
toPage
îî' -
+
îî. /
$num
îî0 1
;
îî1 2
i
îî3 4
++
îî4 6
)
îî6 7
{
ïï 
string
ññ 
cssClass
ññ 
=
ññ  !
(
ññ" #
selectedPage
ññ# /
==
ññ0 2
i
ññ3 4
)
ññ4 5
?
ññ6 7
selectedCssClass
ññ8 H
:
ññI J
mainCssClass
ññK W
;
ññW X
stringBuilder
óó 
.
óó 
AppendFormat
óó *
(
òò 
$str
òò 9
,
òò9 :
cssClass
òò; C
,
òòC D
pageUrl
òòE L
,
òòL M
i
òòN O
,
òòO P
i
òòQ R
)
òòR S
;
òòS T
if
ôô 
(
ôô 
(
ôô 
i
ôô 
%
ôô 
$num
ôô 
)
ôô 
==
ôô 
$num
ôô  !
)
ôô! "
{
öö 
stringBuilder
õõ !
.
õõ! "
Append
õõ" (
(
õõ( )
$str
õõ) 1
)
õõ1 2
;
õõ2 3
}
úú 
}
ùù 
return
ûû 
stringBuilder
ûû  
.
ûû  !
ToString
ûû! )
(
ûû) *
)
ûû* +
;
ûû+ ,
}
üü 	
public
¢¢ 
static
¢¢ 
string
¢¢  
GetAlphaPagerLinks
¢¢ /
(
¢¢/ 0
string
££ 
pageUrl
££ 
,
££ 
int
§§ 

pageNumber
§§ 
,
§§ 
string
•• 
sourceCharString
•• #
,
••# $
string
¶¶ 
selectedLetter
¶¶ !
)
¶¶! "
{
ßß 	
if
®® 
(
®® 
String
®® 
.
®® 
IsNullOrEmpty
®® $
(
®®$ %
pageUrl
®®% ,
)
®®, -
)
®®- .
return
®®/ 5
String
®®6 <
.
®®< =
Empty
®®= B
;
®®B C
StringBuilder
™™ 
stringBuilder
™™ '
=
™™( )
new
™™* -
StringBuilder
™™. ;
(
™™; <
)
™™< =
;
™™= >
foreach
¨¨ 
(
¨¨ 
char
¨¨ 
c
¨¨ 
in
¨¨ 
sourceCharString
¨¨ /
.
¨¨/ 0
ToCharArray
¨¨0 ;
(
¨¨; <
)
¨¨< =
)
¨¨= >
{
≠≠ 
String
ÆÆ 
strChar
ÆÆ 
=
ÆÆ  
c
ÆÆ! "
.
ÆÆ" #
ToString
ÆÆ# +
(
ÆÆ+ ,
)
ÆÆ, -
;
ÆÆ- .
string
ØØ 
cssClass
ØØ 
=
ØØ  !
(
ØØ" #
selectedLetter
ØØ# 1
==
ØØ2 4
strChar
ØØ5 <
)
ØØ< =
?
ØØ> ?
$str
ØØ@ N
:
ØØO P
$str
ØØQ ^
;
ØØ^ _
stringBuilder
∞∞ 
.
∞∞ 
AppendFormat
∞∞ *
(
±± 
$str
±± I
,
±±I J
cssClass
±±K S
,
±±S T
pageUrl
±±U \
,
±±\ ]
strChar
±±^ e
,
±±e f
strChar
±±g n
)
±±n o
;
±±o p
}
≤≤ 
return
¥¥ 
stringBuilder
¥¥  
.
¥¥  !
ToString
¥¥! )
(
¥¥) *
)
¥¥* +
;
¥¥+ ,
}
µµ 	
public
∑∑ 
static
∑∑ 
string
∑∑  
GetAlphaPagerLinks
∑∑ /
(
∑∑/ 0
string
∏∏ 
pageUrl
∏∏ 
,
∏∏ 
int
ππ 

pageNumber
ππ 
,
ππ 
string
∫∫ 
sourceCharString
∫∫ #
,
∫∫# $
string
ªª 
selectedLetter
ªª !
,
ªª! "
string
ºº 
selectedPageClass
ºº $
,
ºº$ %
string
ΩΩ 
otherPageClass
ΩΩ !
,
ΩΩ! "
bool
ææ 
useList
ææ 
,
ææ 
string
øø 
	firstLink
øø 
)
øø 
{
¿¿ 	
if
¡¡ 
(
¡¡ 
string
¡¡ 
.
¡¡ 
IsNullOrEmpty
¡¡ $
(
¡¡$ %
pageUrl
¡¡% ,
)
¡¡, -
)
¡¡- .
return
¡¡/ 5
String
¡¡6 <
.
¡¡< =
Empty
¡¡= B
;
¡¡B C
StringBuilder
√√ 
stringBuilder
√√ '
=
√√( )
new
√√* -
StringBuilder
√√. ;
(
√√; <
)
√√< =
;
√√= >
if
≈≈ 
(
≈≈ 
useList
≈≈ 
)
≈≈ 
{
≈≈ 
stringBuilder
≈≈ (
.
≈≈( )
Append
≈≈) /
(
≈≈/ 0
$str
≈≈0 6
)
≈≈6 7
;
≈≈7 8
}
≈≈9 :
if
«« 
(
«« 
!
«« 
string
«« 
.
«« 
IsNullOrEmpty
«« %
(
««% &
	firstLink
««& /
)
««/ 0
)
««0 1
{
»» 
if
…… 
(
…… 
useList
…… 
)
…… 
{
…… 
stringBuilder
…… ,
.
……, -
Append
……- 3
(
……3 4
$str
……4 :
)
……: ;
;
……; <
}
……= >
stringBuilder
   
.
   
Append
   $
(
  $ %
	firstLink
  % .
)
  . /
;
  / 0
if
ÀÀ 
(
ÀÀ 
useList
ÀÀ 
)
ÀÀ 
{
ÀÀ 
stringBuilder
ÀÀ ,
.
ÀÀ, -
Append
ÀÀ- 3
(
ÀÀ3 4
$str
ÀÀ4 ;
)
ÀÀ; <
;
ÀÀ< =
}
ÀÀ> ?
}
ÃÃ 
foreach
ŒŒ 
(
ŒŒ 
char
ŒŒ 
c
ŒŒ 
in
ŒŒ 
sourceCharString
ŒŒ /
.
ŒŒ/ 0
ToCharArray
ŒŒ0 ;
(
ŒŒ; <
)
ŒŒ< =
)
ŒŒ= >
{
œœ 
if
–– 
(
–– 
useList
–– 
)
–– 
{
–– 
stringBuilder
–– ,
.
––, -
Append
––- 3
(
––3 4
$str
––4 :
)
––: ;
;
––; <
}
––= >
string
—— 
strChar
—— 
=
——  
c
——! "
.
——" #
ToString
——# +
(
——+ ,
)
——, -
;
——- .
string
““ 
cssClass
““ 
=
““  !
(
““" #
selectedLetter
““# 1
==
““2 4
strChar
““5 <
)
““< =
?
““> ?
selectedPageClass
““@ Q
:
““R S
otherPageClass
““T b
;
““b c
if
”” 
(
”” 
cssClass
”” 
.
”” 
Length
”” #
>
””$ %
$num
””& '
)
””' (
{
‘‘ 
stringBuilder
’’ !
.
’’! "
AppendFormat
’’" .
(
÷÷ 
$str
÷÷ M
,
÷÷M N
cssClass
÷÷O W
,
÷÷W X
pageUrl
÷÷Y `
,
÷÷` a
strChar
÷÷b i
,
÷÷i j
strChar
÷÷k r
)
÷÷r s
;
÷÷s t
}
◊◊ 
else
ÿÿ 
{
ŸŸ 
stringBuilder
⁄⁄ !
.
⁄⁄! "
AppendFormat
⁄⁄" .
(
€€ 
$str
€€ A
,
€€A B
pageUrl
€€C J
,
€€J K
strChar
€€L S
,
€€S T
strChar
€€U \
)
€€\ ]
;
€€] ^
}
‹‹ 
if
›› 
(
›› 
useList
›› 
)
›› 
{
›› 
stringBuilder
›› ,
.
››, -
Append
››- 3
(
››3 4
$str
››4 ;
)
››; <
;
››< =
}
››> ?
}
ﬁﬁ 
if
‡‡ 
(
‡‡ 
useList
‡‡ 
)
‡‡ 
{
‡‡ 
stringBuilder
‡‡ (
.
‡‡( )
Append
‡‡) /
(
‡‡/ 0
$str
‡‡0 7
)
‡‡7 8
;
‡‡8 9
}
‡‡: ;
return
‚‚ 
stringBuilder
‚‚  
.
‚‚  !
ToString
‚‚! )
(
‚‚) *
)
‚‚* +
;
‚‚+ ,
}
„„ 	
public
ÁÁ 
static
ÁÁ	 
void
ÁÁ #
AddConfirmationDialog
ÁÁ *
(
ÁÁ* +

WebControl
ÁÁ+ 5
button
ÁÁ6 <
,
ÁÁ< =
string
ÁÁ> D
confirmationText
ÁÁE U
)
ÁÁU V
{
ËË 
if
ÈÈ 
(
ÈÈ 
button
ÈÈ 
==
ÈÈ 
null
ÈÈ 
)
ÈÈ 
return
ÈÈ 
;
ÈÈ 
button
ÍÍ 	
.
ÍÍ	 


Attributes
ÍÍ
 
.
ÍÍ 
Add
ÍÍ 
(
ÍÍ 
$str
ÍÍ "
,
ÍÍ" #
string
ÍÍ$ *
.
ÍÍ* +
Format
ÍÍ+ 1
(
ÍÍ1 2
$str
ÍÍ2 J
,
ÍÍJ K
confirmationText
ÍÍL \
)
ÍÍ\ ]
)
ÍÍ] ^
;
ÍÍ^ _
}
ÎÎ 
public
ÌÌ 
static
ÌÌ	 
void
ÌÌ #
AddConfirmationDialog
ÌÌ *
(
ÌÌ* +

HtmlButton
ÌÌ+ 5
button
ÌÌ6 <
,
ÌÌ< =
string
ÌÌ> D
confirmationText
ÌÌE U
)
ÌÌU V
{
ÓÓ 
if
ÔÔ 
(
ÔÔ 
button
ÔÔ 
==
ÔÔ 
null
ÔÔ 
)
ÔÔ 
return
ÔÔ 
;
ÔÔ 
button
 	
.
	 


Attributes

 
.
 
Add
 
(
 
$str
 "
,
" #
string
$ *
.
* +
Format
+ 1
(
1 2
$str
2 S
,
S T
confirmationText
U e
)
e f
)
f g
;
g h
}
ÒÒ 
public
ÛÛ 
static
ÛÛ	 
void
ÛÛ 4
&AddConfirmationDialogWithClearExitCode
ÛÛ ;
(
ÛÛ; <

WebControl
ÛÛ< F
button
ÛÛG M
,
ÛÛM N
string
ÛÛO U
confirmationText
ÛÛV f
)
ÛÛf g
{
ÙÙ 	
if
ıı 
(
ıı 
button
ıı 
==
ıı 
null
ıı 
)
ıı 
return
ıı  &
;
ıı& '
button
ˆˆ 
.
ˆˆ 

Attributes
ˆˆ 
.
ˆˆ 
Add
ˆˆ !
(
ˆˆ! "
$str
ˆˆ" +
,
ˆˆ+ ,
string
ˆˆ- 3
.
ˆˆ3 4
Format
ˆˆ4 :
(
ˆˆ: ;
$str
ˆˆ; j
,
ˆˆj k
confirmationText
ˆˆl |
)
ˆˆ| }
)
ˆˆ} ~
;
ˆˆ~ 
}
˜˜ 	
public
˘˘ 
static
˘˘ 
void
˘˘ &
RemoveConfirmationDialog
˘˘ 3
(
˘˘3 4

WebControl
˘˘4 >
button
˘˘? E
)
˘˘E F
{
˙˙ 	
if
˚˚ 
(
˚˚ 
button
˚˚ 
==
˚˚ 
null
˚˚ 
)
˚˚ 
return
˚˚  &
;
˚˚& '
button
¸¸ 
.
¸¸ 

Attributes
¸¸ 
.
¸¸ 
Remove
¸¸ $
(
¸¸$ %
$str
¸¸% .
)
¸¸. /
;
¸¸/ 0
}
˝˝ 	
public
ˇˇ 
static
ˇˇ 
void
ˇˇ "
AddClearPageExitCode
ˇˇ /
(
ˇˇ/ 0

WebControl
ˇˇ0 :
button
ˇˇ; A
)
ˇˇA B
{
ÄÄ 	
if
ÅÅ 
(
ÅÅ 
button
ÅÅ 
==
ÅÅ 
null
ÅÅ 
)
ÅÅ 
return
ÅÅ  &
;
ÅÅ& '
button
ÇÇ 
.
ÇÇ 

Attributes
ÇÇ 
.
ÇÇ 
Add
ÇÇ !
(
ÇÇ! "
$str
ÇÇ" +
,
ÇÇ+ ,
string
ÇÇ- 3
.
ÇÇ3 4
Format
ÇÇ4 :
(
ÇÇ: ;
$str
ÇÇ; `
)
ÇÇ` a
)
ÇÇa b
;
ÇÇb c
}
ÉÉ 	
public
òò 
static
òò 
void
òò %
DisableButtonAfterClick
òò 2
(
òò2 3

WebControl
ôô 
button
ôô 
,
ôô 
string
öö 
disabledText
öö 
,
öö  
string
õõ $
postbackEventReference
õõ )
)
õõ) *
{
úú 	
if
ùù 
(
ùù 
button
ùù 
==
ùù 
null
ùù 
)
ùù 
return
ùù  &
;
ùù& '
button
ûû 
.
ûû 

Attributes
ûû 
.
ûû 
Add
ûû !
(
ûû! "
$str
ûû" +
,
ûû+ ,
$str
ûû- ;
+
üü 
disabledText
üü 
+
†† 
$str
†† +
+
°° $
postbackEventReference
°° (
)
°°( )
;
°°) *
}
¢¢ 	
public
§§ 
static
§§ 
void
§§ 5
'DisableButtonAfterClickAndClearExitCode
§§ B
(
§§B C

WebControl
•• 
button
•• 
,
•• 
string
¶¶ 
disabledText
¶¶ 
,
¶¶  
string
ßß $
postbackEventReference
ßß )
)
ßß) *
{
®® 	
if
©© 
(
©© 
button
©© 
==
©© 
null
©© 
)
©© 
return
©©  &
;
©©& '
button
™™ 
.
™™ 

Attributes
™™ 
.
™™ 
Add
™™ !
(
™™! "
$str
™™" +
,
™™+ ,
$str
™™- R
+
´´ 
disabledText
´´ 
+
¨¨ 
$str
¨¨ +
+
≠≠ $
postbackEventReference
≠≠ (
)
≠≠( )
;
≠≠) *
}
ÆÆ 	
public
∆∆ 
static
∆∆ 
Control
∆∆  
GetPostBackControl
∆∆ 0
(
∆∆0 1
Page
∆∆1 5
page
∆∆6 :
)
∆∆: ;
{
«« 	
Control
»» 
control
»» 
=
»» 
null
»» "
;
»»" #
string
…… 
ctrlname
…… 
=
…… 
page
…… "
.
……" #
Request
……# *
.
……* +
Params
……+ 1
[
……1 2
$str
……2 A
]
……A B
;
……B C
if
   
(
   
ctrlname
   
!=
   
null
    
&&
  ! #
ctrlname
  $ ,
!=
  - /
String
  0 6
.
  6 7
Empty
  7 <
)
  < =
{
ÀÀ 
control
ÃÃ 
=
ÃÃ 
page
ÃÃ 
.
ÃÃ 
FindControl
ÃÃ *
(
ÃÃ* +
ctrlname
ÃÃ+ 3
)
ÃÃ3 4
;
ÃÃ4 5
}
ÕÕ 
else
–– 
{
—— 
string
““ 
ctrlStr
““ 
=
““  
String
““! '
.
““' (
Empty
““( -
;
““- .
Control
”” 
c
”” 
=
”” 
null
””  
;
””  !
foreach
‘‘ 
(
‘‘ 
string
‘‘ 
ctl
‘‘  #
in
‘‘$ &
page
‘‘' +
.
‘‘+ ,
Request
‘‘, 3
.
‘‘3 4
Form
‘‘4 8
)
‘‘8 9
{
’’ 
if
◊◊ 
(
◊◊ 
ctl
◊◊ 
.
◊◊ 
EndsWith
◊◊ $
(
◊◊$ %
$str
◊◊% )
)
◊◊) *
||
◊◊+ -
ctl
◊◊. 1
.
◊◊1 2
EndsWith
◊◊2 :
(
◊◊: ;
$str
◊◊; ?
)
◊◊? @
)
◊◊@ A
{
ÿÿ 
ctrlStr
ŸŸ 
=
ŸŸ  !
ctl
ŸŸ" %
.
ŸŸ% &
	Substring
ŸŸ& /
(
ŸŸ/ 0
$num
ŸŸ0 1
,
ŸŸ1 2
ctl
ŸŸ3 6
.
ŸŸ6 7
Length
ŸŸ7 =
-
ŸŸ> ?
$num
ŸŸ@ A
)
ŸŸA B
;
ŸŸB C
c
⁄⁄ 
=
⁄⁄ 
page
⁄⁄  
.
⁄⁄  !
FindControl
⁄⁄! ,
(
⁄⁄, -
ctrlStr
⁄⁄- 4
)
⁄⁄4 5
;
⁄⁄5 6
}
€€ 
else
‹‹ 
{
›› 
c
ﬁﬁ 
=
ﬁﬁ 
page
ﬁﬁ  
.
ﬁﬁ  !
FindControl
ﬁﬁ! ,
(
ﬁﬁ, -
ctl
ﬁﬁ- 0
)
ﬁﬁ0 1
;
ﬁﬁ1 2
}
ﬂﬂ 
if
‡‡ 
(
‡‡ 
c
‡‡ 
is
‡‡ 
System
‡‡ #
.
‡‡# $
Web
‡‡$ '
.
‡‡' (
UI
‡‡( *
.
‡‡* +
WebControls
‡‡+ 6
.
‡‡6 7
Button
‡‡7 =
||
‡‡> @
c
·· 
is
·· !
System
··" (
.
··( )
Web
··) ,
.
··, -
UI
··- /
.
··/ 0
WebControls
··0 ;
.
··; <
ImageButton
··< G
)
··G H
{
‚‚ 
control
„„ 
=
„„  !
c
„„" #
;
„„# $
break
‰‰ 
;
‰‰ 
}
ÂÂ 
}
ÊÊ 
}
ÁÁ 
return
ËË 
control
ËË 
;
ËË 
}
ÈÈ 	
public
ÒÒ 
static
ÒÒ 
string
ÒÒ 
CreateExcerpt
ÒÒ *
(
ÒÒ* +
string
ÒÒ+ 1
content
ÒÒ2 9
,
ÒÒ9 :
int
ÒÒ; >
excerptLength
ÒÒ? L
)
ÒÒL M
{
ÚÚ 	
return
ÛÛ 
CreateExcerpt
ÛÛ  
(
ÛÛ  !
content
ÛÛ! (
,
ÛÛ( )
excerptLength
ÛÛ* 7
,
ÛÛ7 8
string
ÛÛ9 ?
.
ÛÛ? @
Empty
ÛÛ@ E
)
ÛÛE F
;
ÛÛF G
}
ÙÙ 	
public
˘˘ 
static
˘˘ 
string
˘˘ 
CreateExcerpt
˘˘ *
(
˘˘* +
string
˘˘+ 1
content
˘˘2 9
,
˘˘9 :
int
˘˘; >
excerptLength
˘˘? L
,
˘˘L M
string
˘˘N T
suffix
˘˘U [
)
˘˘[ \
{
˙˙ 	
if
˚˚ 
(
˚˚ 
content
˚˚ 
==
˚˚ 
null
˚˚ 
)
˚˚  
{
˚˚! "
return
˚˚# )
content
˚˚* 1
;
˚˚1 2
}
˚˚3 4
string
˝˝ 
result
˝˝ 
=
˝˝ 
SecurityHelper
˝˝ *
.
˝˝* +
RemoveMarkup
˝˝+ 7
(
˝˝7 8
content
˝˝8 ?
)
˝˝? @
;
˝˝@ A
if
˛˛ 
(
˛˛ 
result
˛˛ 
.
˛˛ 
Length
˛˛ 
<=
˛˛  
excerptLength
˛˛! .
)
˛˛. /
{
˛˛0 1
return
˛˛2 8
result
˛˛9 ?
;
˛˛? @
}
˛˛A B
result
ˇˇ 
=
ˇˇ 
result
ˇˇ 
.
ˇˇ 
	Substring
ˇˇ %
(
ˇˇ% &
$num
ˇˇ& '
,
ˇˇ' (
excerptLength
ˇˇ) 6
)
ˇˇ6 7
;
ˇˇ7 8
if
ÄÄ 
(
ÄÄ 
!
ÄÄ 
result
ÄÄ 
.
ÄÄ 
EndsWith
ÄÄ  
(
ÄÄ  !
$str
ÄÄ! $
)
ÄÄ$ %
)
ÄÄ% &
{
ÅÅ 
if
ÇÇ 
(
ÇÇ 
result
ÇÇ 
.
ÇÇ 
IndexOf
ÇÇ "
(
ÇÇ" #
$str
ÇÇ# &
)
ÇÇ& '
>
ÇÇ( )
-
ÇÇ* +
$num
ÇÇ+ ,
)
ÇÇ, -
{
ÉÉ 
result
ÑÑ 
=
ÑÑ 
result
ÑÑ #
.
ÑÑ# $
	Substring
ÑÑ$ -
(
ÑÑ- .
$num
ÑÑ. /
,
ÑÑ/ 0
result
ÑÑ1 7
.
ÑÑ7 8
LastIndexOf
ÑÑ8 C
(
ÑÑC D
$str
ÑÑD G
)
ÑÑG H
)
ÑÑH I
;
ÑÑI J
}
ÖÖ 
}
ÜÜ 
result
àà 
+=
àà 
suffix
àà 
;
àà 
return
ää 
result
ää 
;
ää 
}
ãã 	
public
éé 
static
éé 
string
éé #
FormatPlainTextAsHtml
éé 2
(
éé2 3
string
éé3 9
text
éé: >
)
éé> ?
{
èè 	
text
êê 
=
êê 
HttpUtility
êê 
.
êê 

HtmlEncode
êê )
(
êê) *
text
êê* .
)
êê. /
;
êê/ 0
text
ëë 
=
ëë 
Regex
ëë 
.
ëë 
Replace
ëë  
(
ëë  !
text
ëë! %
,
ëë% &
$str
ëë' -
,
ëë- .
$str
ëë/ 6
)
ëë6 7
;
ëë7 8
text
íí 
=
íí 
Regex
íí 
.
íí 
Replace
íí  
(
íí  !
text
íí! %
,
íí% &
$str
íí' +
,
íí+ ,
$str
íí- 5
)
íí5 6
;
íí6 7
return
îî 
text
îî 
;
îî 
}
ïï 	
public
óó 
static
óó 
string
óó +
ConvertHtmlBreaksToTextBreaks
óó :
(
óó: ;
string
óó; A
text
óóB F
)
óóF G
{
òò 	
text
ôô 
=
ôô 
Regex
ôô 
.
ôô 
Replace
ôô  
(
ôô  !
text
ôô! %
,
ôô% &
$str
ôô' ,
,
ôô, -
$str
ôô. 4
)
ôô4 5
;
ôô5 6
text
öö 
=
öö 
Regex
öö 
.
öö 
Replace
öö  
(
öö  !
text
öö! %
,
öö% &
$str
öö' /
,
öö/ 0
$str
öö1 5
)
öö5 6
;
öö6 7
return
úú 
text
úú 
;
úú 
}
ùù 	
public
¶¶ 
static
¶¶ 
string
¶¶ 
CompressCss
¶¶ (
(
¶¶( )
string
¶¶) /
css
¶¶0 3
)
¶¶3 4
{
ßß 	
css
©© 
=
©© 
Regex
©© 
.
©© 
Replace
©© 
(
©©  
css
©©  #
,
©©# $
$str
©©% 2
,
©©2 3
$str
©©4 6
,
©©6 7
RegexOptions
©©8 D
.
©©D E

Singleline
©©E O
)
©©O P
;
©©P Q
css
™™ 
=
™™ 
css
™™ 
.
™™ 
Replace
™™ 
(
™™ 
$str
™™ "
,
™™" #
string
™™$ *
.
™™* +
Empty
™™+ 0
)
™™0 1
;
™™1 2
css
´´ 
=
´´ 
css
´´ 
.
´´ 
Replace
´´ 
(
´´ 
Environment
´´ )
.
´´) *
NewLine
´´* 1
+
´´2 3
Environment
´´4 ?
.
´´? @
NewLine
´´@ G
+
´´H I
Environment
´´J U
.
´´U V
NewLine
´´V ]
,
´´] ^
string
´´_ e
.
´´e f
Empty
´´f k
)
´´k l
;
´´l m
css
¨¨ 
=
¨¨ 
css
¨¨ 
.
¨¨ 
Replace
¨¨ 
(
¨¨ 
Environment
¨¨ )
.
¨¨) *
NewLine
¨¨* 1
+
¨¨2 3
Environment
¨¨4 ?
.
¨¨? @
NewLine
¨¨@ G
,
¨¨G H
Environment
¨¨I T
.
¨¨T U
NewLine
¨¨U \
)
¨¨\ ]
;
¨¨] ^
css
≠≠ 
=
≠≠ 
css
≠≠ 
.
≠≠ 
Replace
≠≠ 
(
≠≠ 
Environment
≠≠ )
.
≠≠) *
NewLine
≠≠* 1
,
≠≠1 2
string
≠≠3 9
.
≠≠9 :
Empty
≠≠: ?
)
≠≠? @
;
≠≠@ A
css
ÆÆ 
=
ÆÆ 
css
ÆÆ 
.
ÆÆ 
Replace
ÆÆ 
(
ÆÆ 
$str
ÆÆ #
,
ÆÆ# $
string
ÆÆ% +
.
ÆÆ+ ,
Empty
ÆÆ, 1
)
ÆÆ1 2
;
ÆÆ2 3
css
ØØ 
=
ØØ 
css
ØØ 
.
ØØ 
Replace
ØØ 
(
ØØ 
$str
ØØ "
,
ØØ" #
$str
ØØ$ '
)
ØØ' (
;
ØØ( )
css
∞∞ 
=
∞∞ 
css
∞∞ 
.
∞∞ 
Replace
∞∞ 
(
∞∞ 
$str
∞∞ "
,
∞∞" #
$str
∞∞$ '
)
∞∞' (
;
∞∞( )
css
±± 
=
±± 
css
±± 
.
±± 
Replace
±± 
(
±± 
$str
±± "
,
±±" #
$str
±±$ '
)
±±' (
;
±±( )
css
≤≤ 
=
≤≤ 
css
≤≤ 
.
≤≤ 
Replace
≤≤ 
(
≤≤ 
$str
≤≤ "
,
≤≤" #
$str
≤≤$ '
)
≤≤' (
;
≤≤( )
css
≥≥ 
=
≥≥ 
css
≥≥ 
.
≥≥ 
Replace
≥≥ 
(
≥≥ 
$str
≥≥ "
,
≥≥" #
$str
≥≥$ '
)
≥≥' (
;
≥≥( )
css
¥¥ 
=
¥¥ 
css
¥¥ 
.
¥¥ 
Replace
¥¥ 
(
¥¥ 
$str
¥¥ "
,
¥¥" #
$str
¥¥$ '
)
¥¥' (
;
¥¥( )
css
µµ 
=
µµ 
Regex
µµ 
.
µµ 
Replace
µµ 
(
µµ  
css
µµ  #
,
µµ# $
$str
µµ% F
,
µµF G
$str
µµH L
)
µµL M
;
µµM N
css
∂∂ 
=
∂∂ 
Regex
∂∂ 
.
∂∂ 
Replace
∂∂ 
(
∂∂  
css
∂∂  #
,
∂∂# $
$str
∂∂% q
,
∂∂q r
string
∂∂s y
.
∂∂y z
Empty
∂∂z 
)∂∂ Ä
;∂∂Ä Å
return
∏∏ 
css
∏∏ 
;
∏∏ 
}
∫∫ 	
public
ºº 
static
ºº 
int
ºº 
CompareFileNames
ºº *
(
ºº* +
FileInfo
ºº+ 3
f1
ºº4 6
,
ºº6 7
FileInfo
ºº8 @
f2
ººA C
)
ººC D
{
ΩΩ 	
return
ææ 
f1
ææ 
.
ææ 
FullName
ææ 
.
ææ 
	CompareTo
ææ (
(
ææ( )
f2
ææ) +
.
ææ+ ,
FullName
ææ, 4
)
ææ4 5
;
ææ5 6
}
øø 	
}
ƒƒ 
}≈≈ ùì
kD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\WebUtils.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public 
static 
class 
WebUtils 
{   
private!! 
static!! 
readonly!! 
ILog!!  $
log!!% (
=!!) *

LogManager!!+ 5
.!!5 6
	GetLogger!!6 ?
(!!? @
typeof!!@ F
(!!F G
WebUtils!!G O
)!!O P
)!!P Q
;!!Q R
private"" 
static"" 
bool"" 
debugLog"" $
=""% &
log""' *
.""* +
IsDebugEnabled""+ 9
;""9 :
public$$ 
static$$ 
string$$ 
GetRequestBody$$ +
($$+ ,
this$$, 0
HttpRequest$$1 <
request$$= D
)$$D E
{%% 	
using&& 
(&& 
StreamReader&& 
reader&&  &
=&&' (
new&&) ,
StreamReader&&- 9
(&&9 :
request&&: A
.&&A B
InputStream&&B M
)&&M N
)&&N O
{'' 
string(( 
encodedString(( $
=((% &
reader((' -
.((- .
	ReadToEnd((. 7
(((7 8
)((8 9
;((9 :
return)) 
HttpUtility)) "
.))" #
	UrlDecode))# ,
()), -
encodedString))- :
))): ;
;)); <
}** 
}++ 	
public-- 
static-- 
string-- 
GetApplicationRoot-- /
(--/ 0
)--0 1
{.. 	
if// 
(// 
HttpContext// 
.// 
Current// #
==//$ &
null//' +
)//+ ,
return//- 3
String//4 :
.//: ;
Empty//; @
;//@ A
string11 
applicationRoot11 "
=11# $
HttpContext11% 0
.110 1
Current111 8
.118 9
Items119 >
[11> ?
$str11? P
]11P Q
as11R T
string11U [
;11[ \
if22 
(22 
applicationRoot22 
==22  "
null22# '
)22' (
{33 
applicationRoot44 
=44  !$
CalculateApplicationRoot44" :
(44: ;
)44; <
;44< =
if55 
(55 
applicationRoot55 #
!=55$ &
null55' +
)55+ ,
HttpContext66 
.66  
Current66  '
.66' (
Items66( -
[66- .
$str66. ?
]66? @
=66A B
applicationRoot66C R
;66R S
}77 
return88 
applicationRoot88 "
;88" #
};; 	
public== 
static== 
bool== "
IsRequestForStaticFile== 1
(==1 2
string==2 8
requestPath==9 D
)==D E
{>> 	
if?? 
(?? 
string?? 
.?? 
IsNullOrEmpty?? $
(??$ %
requestPath??% 0
)??0 1
)??1 2
{??3 4
return??5 ;
false??< A
;??A B
}??C D
if@@ 
(@@ 
string@@ 
.@@ 
IsNullOrEmpty@@ $
(@@$ %
requestPath@@% 0
.@@0 1
Trim@@1 5
(@@5 6
)@@6 7
)@@7 8
)@@8 9
{@@: ;
return@@< B
false@@C H
;@@H I
}@@J K
ifBB 
(BB 
requestPathBB 
.BB #
ContainsCaseInsensitiveBB 3
(BB3 4
$strBB4 ;
)BB; <
)BB< =
{BB> ?
returnBB@ F
falseBBG L
;BBL M
}BBN O
ifCC 
(CC 
requestPathCC 
.CC #
ContainsCaseInsensitiveCC 3
(CC3 4
$strCC4 ;
)CC; <
)CC< =
{CC> ?
returnCC@ F
falseCCG L
;CCL M
}CCN O
ifDD 
(DD 
requestPathDD 
.DD #
ContainsCaseInsensitiveDD 3
(DD3 4
$strDD4 :
)DD: ;
)DD; <
{DD= >
returnDD? E
falseDDF K
;DDK L
}DDM N
ifFF 
(FF 
requestPathFF 
.FF #
ContainsCaseInsensitiveFF 3
(FF3 4
$strFF4 ;
)FF; <
)FF< =
{FF> ?
returnFF@ F
trueFFG K
;FFK L
}FFM N
ifGG 
(GG 
requestPathGG 
.GG #
ContainsCaseInsensitiveGG 3
(GG3 4
$strGG4 :
)GG: ;
)GG; <
{GG= >
returnGG? E
trueGGF J
;GGJ K
}GGL M
ifHH 
(HH 
requestPathHH 
.HH #
ContainsCaseInsensitiveHH 3
(HH3 4
$strHH4 :
)HH: ;
)HH; <
{HH= >
returnHH? E
trueHHF J
;HHJ K
}HHL M
ifII 
(II 
requestPathII 
.II #
ContainsCaseInsensitiveII 3
(II3 4
$strII4 :
)II: ;
)II; <
{II= >
returnII? E
trueIIF J
;IIJ K
}IIL M
ifJJ 
(JJ 
requestPathJJ 
.JJ #
ContainsCaseInsensitiveJJ 3
(JJ3 4
$strJJ4 :
)JJ: ;
)JJ; <
{JJ= >
returnJJ? E
trueJJF J
;JJJ K
}JJL M
ifKK 
(KK 
requestPathKK 
.KK #
ContainsCaseInsensitiveKK 3
(KK3 4
$strKK4 ;
)KK; <
)KK< =
{KK> ?
returnKK@ F
trueKKG K
;KKK L
}KKM N
ifLL 
(LL 
requestPathLL 
.LL #
ContainsCaseInsensitiveLL 3
(LL3 4
$strLL4 :
)LL: ;
)LL; <
{LL= >
returnLL? E
trueLLF J
;LLJ K
}LLL M
ifMM 
(MM 
requestPathMM 
.MM #
ContainsCaseInsensitiveMM 3
(MM3 4
$strMM4 :
)MM: ;
)MM; <
{MM= >
returnMM? E
trueMMF J
;MMJ K
}MML M
ifNN 
(NN 
requestPathNN 
.NN #
ContainsCaseInsensitiveNN 3
(NN3 4
$strNN4 9
)NN9 :
)NN: ;
{NN< =
returnNN> D
trueNNE I
;NNI J
}NNK L
ifOO 
(OO 
requestPathOO 
.OO #
ContainsCaseInsensitiveOO 3
(OO3 4
$strOO4 :
)OO: ;
)OO; <
{OO= >
returnOO? E
trueOOF J
;OOJ K
}OOL M
ifPP 
(PP 
requestPathPP 
.PP #
ContainsCaseInsensitivePP 3
(PP3 4
$strPP4 :
)PP: ;
)PP; <
{PP= >
returnPP? E
truePPF J
;PPJ K
}PPL M
ifQQ 
(QQ 
requestPathQQ 
.QQ #
ContainsCaseInsensitiveQQ 3
(QQ3 4
$strQQ4 :
)QQ: ;
)QQ; <
{QQ= >
returnQQ? E
trueQQF J
;QQJ K
}QQL M
ifRR 
(RR 
requestPathRR 
.RR #
ContainsCaseInsensitiveRR 3
(RR3 4
$strRR4 :
)RR: ;
)RR; <
{RR= >
returnRR? E
trueRRF J
;RRJ K
}RRL M
ifSS 
(SS 
requestPathSS 
.SS #
ContainsCaseInsensitiveSS 3
(SS3 4
$strSS4 :
)SS: ;
)SS; <
{SS= >
returnSS? E
trueSSF J
;SSJ K
}SSL M
ifUU 
(UU 
requestPathUU 
.UU #
ContainsCaseInsensitiveUU 3
(UU3 4
$strUU4 :
)UU: ;
)UU; <
{UU= >
returnUU? E
trueUUF J
;UUJ K
}UUL M
ifVV 
(VV 
requestPathVV 
.VV #
ContainsCaseInsensitiveVV 3
(VV3 4
$strVV4 :
)VV: ;
)VV; <
{VV= >
returnVV? E
trueVVF J
;VVJ K
}VVL M
ifWW 
(WW 
requestPathWW 
.WW #
ContainsCaseInsensitiveWW 3
(WW3 4
$strWW4 :
)WW: ;
)WW; <
{WW= >
returnWW? E
trueWWF J
;WWJ K
}WWL M
ifXX 
(XX 
requestPathXX 
.XX #
ContainsCaseInsensitiveXX 3
(XX3 4
$strXX4 :
)XX: ;
)XX; <
{XX= >
returnXX? E
trueXXF J
;XXJ K
}XXL M
if[[ 
([[ 
requestPath[[ 
.[[ #
ContainsCaseInsensitive[[ 3
([[3 4
$str[[4 :
)[[: ;
)[[; <
{[[= >
return[[? E
true[[F J
;[[J K
}[[L M
if\\ 
(\\ 
requestPath\\ 
.\\ #
ContainsCaseInsensitive\\ 3
(\\3 4
$str\\4 ;
)\\; <
)\\< =
{\\> ?
return\\@ F
true\\G K
;\\K L
}\\M N
if]] 
(]] 
requestPath]] 
.]] #
ContainsCaseInsensitive]] 3
(]]3 4
$str]]4 :
)]]: ;
)]]; <
{]]= >
return]]? E
true]]F J
;]]J K
}]]L M
if^^ 
(^^ 
requestPath^^ 
.^^ #
ContainsCaseInsensitive^^ 3
(^^3 4
$str^^4 ;
)^^; <
)^^< =
{^^> ?
return^^@ F
true^^G K
;^^K L
}^^M N
if__ 
(__ 
requestPath__ 
.__ #
ContainsCaseInsensitive__ 3
(__3 4
$str__4 :
)__: ;
)__; <
{__= >
return__? E
true__F J
;__J K
}__L M
if`` 
(`` 
requestPath`` 
.`` #
ContainsCaseInsensitive`` 3
(``3 4
$str``4 ;
)``; <
)``< =
{``> ?
return``@ F
true``G K
;``K L
}``M N
ifaa 
(aa 
requestPathaa 
.aa #
ContainsCaseInsensitiveaa 3
(aa3 4
$straa4 :
)aa: ;
)aa; <
{aa= >
returnaa? E
trueaaF J
;aaJ K
}aaL M
ifbb 
(bb 
requestPathbb 
.bb #
ContainsCaseInsensitivebb 3
(bb3 4
$strbb4 :
)bb: ;
)bb; <
{bb= >
returnbb? E
truebbF J
;bbJ K
}bbL M
ifcc 
(cc 
requestPathcc 
.cc #
ContainsCaseInsensitivecc 3
(cc3 4
$strcc4 ;
)cc; <
)cc< =
{cc> ?
returncc@ F
trueccG K
;ccK L
}ccM N
returnff 
falseff 
;ff 
}gg 	
privateii 
staticii 
stringii $
CalculateApplicationRootii 6
(ii6 7
)ii7 8
{jj 	
ifmm 
(mm 
HttpContextmm 
.mm 
Currentmm #
.mm# $
Requestmm$ +
.mm+ ,
ApplicationPathmm, ;
.mm; <
Lengthmm< B
==mmC E
$nummmF G
)mmG H
{nn 
returnoo 
stringoo 
.oo 
Emptyoo #
;oo# $
}pp 
elseqq 
{rr 
returnss 
HttpContextss "
.ss" #
Currentss# *
.ss* +
Requestss+ 2
.ss2 3
ApplicationPathss3 B
;ssB C
}tt 
}uu 	
privatexx 
staticxx 
stringxx 
GetHostxx %
(xx% &
stringxx& ,
protocolxx- 5
)xx5 6
{yy 	
ifzz 
(zz 
HttpContextzz 
.zz 
Currentzz #
==zz$ &
nullzz' +
)zz+ ,
returnzz- 3
Stringzz4 :
.zz: ;
Emptyzz; @
;zz@ A
if{{ 
({{ 
protocol{{ 
=={{ 
null{{  
){{  !
protocol{{" *
={{+ ,
string{{- 3
.{{3 4
Empty{{4 9
;{{9 :
string}} 
host}} 
=}} 
HttpContext}} %
.}}% &
Current}}& -
.}}- .
Items}}. 3
[}}3 4
$str}}4 :
+}}; <
protocol}}= E
]}}E F
as}}G I
string}}J P
;}}P Q
if~~ 
(~~ 
host~~ 
==~~ 
null~~ 
)~~ 
{ 
host
ÄÄ 
=
ÄÄ 
DetermineHost
ÄÄ $
(
ÄÄ$ %
protocol
ÄÄ% -
)
ÄÄ- .
;
ÄÄ. /
if
ÅÅ 
(
ÅÅ 
host
ÅÅ 
!=
ÅÅ 
null
ÅÅ  
)
ÅÅ  !
HttpContext
ÇÇ 
.
ÇÇ  
Current
ÇÇ  '
.
ÇÇ' (
Items
ÇÇ( -
[
ÇÇ- .
$str
ÇÇ. 4
+
ÇÇ5 6
protocol
ÇÇ7 ?
]
ÇÇ? @
=
ÇÇA B
host
ÇÇC G
;
ÇÇG H
}
ÉÉ 
return
ÑÑ 
host
ÑÑ 
;
ÑÑ 
}
áá 	
private
ää 
static
ää 
string
ää 
DetermineHost
ää +
(
ää+ ,
string
ää, 2
protocol
ää3 ;
)
ää; <
{
ãã 	
string
åå 

serverName
åå 
=
åå 
HttpContext
åå  +
.
åå+ ,
Current
åå, 3
.
åå3 4
Request
åå4 ;
.
åå; <
ServerVariables
åå< K
[
ååK L
$str
ååL Y
]
ååY Z
;
ååZ [
string
çç 

serverPort
çç 
=
çç 
HttpContext
çç  +
.
çç+ ,
Current
çç, 3
.
çç3 4
Request
çç4 ;
.
çç; <
ServerVariables
çç< K
[
ççK L
$str
ççL Y
]
ççY Z
;
ççZ [
string
òò 
forwardedHosts
òò !
=
òò" #
HttpContext
òò$ /
.
òò/ 0
Current
òò0 7
.
òò7 8
Request
òò8 ?
.
òò? @
Headers
òò@ G
[
òòG H
$str
òòH Z
]
òòZ [
;
òò[ \
if
ôô 
(
ôô 
forwardedHosts
ôô 
!=
ôô !
null
ôô" &
)
ôô& '
{
öö 
string
ùù 
forwardedHost
ùù $
=
ùù% &
forwardedHosts
ùù' 5
.
ùù5 6
Split
ùù6 ;
(
ùù; <
$char
ùù< ?
)
ùù? @
[
ùù@ A
$num
ùùA B
]
ùùB C
;
ùùC D
string
°° 
[
°° 
]
°° 
serverAndPort
°° &
=
°°' (
forwardedHost
°°) 6
.
°°6 7
Split
°°7 <
(
°°< =
$char
°°= @
)
°°@ A
;
°°A B

serverName
¢¢ 
=
¢¢ 
serverAndPort
¢¢ *
[
¢¢* +
$num
¢¢+ ,
]
¢¢, -
;
¢¢- .

serverPort
™™ 
=
™™ 
null
™™ !
;
™™! "
if
´´ 
(
´´ 
serverAndPort
´´ !
.
´´! "
Length
´´" (
>
´´) *
$num
´´+ ,
)
´´, -
{
¨¨ 

serverPort
≠≠ 
=
≠≠  
serverAndPort
≠≠! .
[
≠≠. /
$num
≠≠/ 0
]
≠≠0 1
;
≠≠1 2
if
ÆÆ 
(
ÆÆ 
debugLog
ÆÆ  
)
ÆÆ  !
{
ØØ 
log
∞∞ 
.
∞∞ 
Debug
∞∞ !
(
∞∞! "
$str
∞∞" P
+
∞∞Q R

serverPort
∞∞S ]
)
∞∞] ^
;
∞∞^ _
}
≤≤ 
}
≥≥ 
}
µµ 
if
ππ 
(
ππ 
(
ππ 
protocol
ππ 
==
ππ 
$str
ππ #
&&
ππ$ &

serverPort
ππ' 1
==
ππ2 4
$str
ππ5 9
)
ππ9 :
||
∫∫ 
(
∫∫ 
protocol
∫∫ 
==
∫∫ 
$str
∫∫  '
&&
∫∫( *

serverPort
∫∫+ 5
==
∫∫6 8
$str
∫∫9 >
)
∫∫> ?
)
∫∫? @
{
ªª 

serverPort
ºº 
=
ºº 
null
ºº !
;
ºº! "
}
ΩΩ 
if
¿¿ 
(
¿¿ 
protocol
¿¿ 
==
¿¿ 
$str
¿¿ #
&&
¿¿$ &

serverPort
¿¿' 1
==
¿¿2 4
$str
¿¿5 9
)
¿¿9 :
{
¡¡ 
bool
«« !
mapAlternateSSLPort
«« (
=
««) *
ConfigHelper
««+ 7
.
««7 8
GetBoolProperty
««8 G
(
««G H
$str
««H ]
,
««] ^
false
««_ d
)
««d e
;
««e f
if
»» 
(
»» !
mapAlternateSSLPort
»» '
)
»»' (
{
…… 
string
   
alternatSSLPort
   *
=
  + ,"
ConfigurationManager
  - A
.
  A B
AppSettings
  B M
[
  M N
$str
  N `
]
  ` a
;
  a b
if
ÀÀ 
(
ÀÀ 
alternatSSLPort
ÀÀ '
!=
ÀÀ( *
null
ÀÀ+ /
)
ÀÀ/ 0
{
ÃÃ 

serverPort
ÕÕ "
=
ÕÕ# $
alternatSSLPort
ÕÕ% 4
;
ÕÕ4 5
}
ŒŒ 
}
œœ 
}
—— 
string
”” 
host
”” 
=
”” 

serverName
”” $
;
””$ %
if
‹‹ 
(
‹‹ 

serverPort
‹‹ 
!=
‹‹ 
null
‹‹ "
)
‹‹" #
{
›› 
bool
ﬁﬁ 
mapAlternatePort
ﬁﬁ %
=
ﬁﬁ& '
ConfigHelper
ﬁﬁ( 4
.
ﬁﬁ4 5
GetBoolProperty
ﬁﬁ5 D
(
ﬁﬁD E
$str
ﬁﬁE W
,
ﬁﬁW X
false
ﬁﬁY ^
)
ﬁﬁ^ _
;
ﬁﬁ_ `
if
ﬂﬂ 
(
ﬂﬂ 
mapAlternatePort
ﬂﬂ $
)
ﬂﬂ$ %
{
‡‡ 
host
·· 
+=
·· 
$str
·· 
+
··  !

serverPort
··" ,
;
··, -
}
‚‚ 
}
„„ 
return
ÂÂ 
host
ÂÂ 
;
ÂÂ 
}
ÊÊ 	
public
ÈÈ 
static
ÈÈ 
string
ÈÈ 
GetSiteRoot
ÈÈ (
(
ÈÈ( )
)
ÈÈ) *
{
ÍÍ 	
if
ÎÎ 
(
ÎÎ 
HttpContext
ÎÎ 
.
ÎÎ 
Current
ÎÎ #
==
ÎÎ$ &
null
ÎÎ' +
)
ÎÎ+ ,
return
ÎÎ- 3
string
ÎÎ4 :
.
ÎÎ: ;
Empty
ÎÎ; @
;
ÎÎ@ A
string
ÌÌ 
siteRoot
ÌÌ 
=
ÌÌ 
HttpContext
ÌÌ )
.
ÌÌ) *
Current
ÌÌ* 1
.
ÌÌ1 2
Items
ÌÌ2 7
[
ÌÌ7 8
$str
ÌÌ8 B
]
ÌÌB C
as
ÌÌD F
string
ÌÌG M
;
ÌÌM N
if
ÓÓ 
(
ÓÓ 
siteRoot
ÓÓ 
==
ÓÓ 
null
ÓÓ  
)
ÓÓ  !
{
ÔÔ 
siteRoot
 
=
 
DetermineSiteRoot
 ,
(
, -
)
- .
;
. /
if
ÒÒ 
(
ÒÒ 
siteRoot
ÒÒ 
!=
ÒÒ 
null
ÒÒ  $
)
ÒÒ$ %
HttpContext
ÚÚ 
.
ÚÚ  
Current
ÚÚ  '
.
ÚÚ' (
Items
ÚÚ( -
[
ÚÚ- .
$str
ÚÚ. 8
]
ÚÚ8 9
=
ÚÚ: ;
siteRoot
ÚÚ< D
;
ÚÚD E
}
ÛÛ 
return
ÙÙ 
siteRoot
ÙÙ 
;
ÙÙ 
}
˜˜ 	
public
˘˘ 
static
˘˘ 
string
˘˘ !
GetRelativeSiteRoot
˘˘ 0
(
˘˘0 1
)
˘˘1 2
{
˙˙ 	
if
˚˚ 
(
˚˚ 
HttpContext
˚˚ 
.
˚˚ 
Current
˚˚ #
==
˚˚$ &
null
˚˚' +
)
˚˚+ ,
return
˚˚- 3
string
˚˚4 :
.
˚˚: ;
Empty
˚˚; @
;
˚˚@ A
string
˝˝ 
siteRoot
˝˝ 
=
˝˝ 
HttpContext
˝˝ )
.
˝˝) *
Current
˝˝* 1
.
˝˝1 2
Items
˝˝2 7
[
˝˝7 8
$str
˝˝8 J
]
˝˝J K
as
˝˝L N
string
˝˝O U
;
˝˝U V
if
˛˛ 
(
˛˛ 
siteRoot
˛˛ 
==
˛˛ 
null
˛˛  
)
˛˛  !
{
ˇˇ 
siteRoot
ÄÄ 
=
ÄÄ  
GetApplicationRoot
ÄÄ -
(
ÄÄ- .
)
ÄÄ. /
;
ÄÄ/ 0
if
ÅÅ 
(
ÅÅ 
siteRoot
ÅÅ 
!=
ÅÅ 
null
ÅÅ  $
)
ÅÅ$ %
HttpContext
ÇÇ 
.
ÇÇ  
Current
ÇÇ  '
.
ÇÇ' (
Items
ÇÇ( -
[
ÇÇ- .
$str
ÇÇ. @
]
ÇÇ@ A
=
ÇÇB C
siteRoot
ÇÇD L
;
ÇÇL M
}
ÉÉ 
return
ÑÑ 
siteRoot
ÑÑ 
;
ÑÑ 
}
áá 	
public
ââ 
static
ââ 
string
ââ 
GetHostRoot
ââ (
(
ââ( )
)
ââ) *
{
ää 	
string
ãã 
protocol
ãã 
=
ãã 
HttpContext
ãã )
.
ãã) *
Current
ãã* 1
.
ãã1 2
Request
ãã2 9
.
ãã9 : 
IsSecureConnection
ãã: L
?
ããM N
$str
ããO V
:
ããW X
$str
ããY _
;
ãã_ `
string
åå 
host
åå 
=
åå 
GetHost
åå !
(
åå! "
protocol
åå" *
)
åå* +
;
åå+ ,
return
çç 
protocol
çç 
+
çç 
$str
çç #
+
çç$ %
host
çç& *
;
çç* +
}
éé 	
private
êê 
static
êê 
string
êê 
DetermineSiteRoot
êê /
(
êê/ 0
)
êê0 1
{
ëë 	
string
íí 
protocol
íí 
=
íí 
HttpContext
íí )
.
íí) *
Current
íí* 1
.
íí1 2
Request
íí2 9
.
íí9 : 
IsSecureConnection
íí: L
?
ííM N
$str
ííO V
:
ííW X
$str
ííY _
;
íí_ `
string
ìì 
host
ìì 
=
ìì 
GetHost
ìì !
(
ìì! "
protocol
ìì" *
)
ìì* +
;
ìì+ ,
return
îî 
protocol
îî 
+
îî 
$str
îî #
+
îî$ %
host
îî& *
+
îî+ , 
GetApplicationRoot
îî- ?
(
îî? @
)
îî@ A
;
îîA B
}
ïï 	
public
ôô 
static
ôô 
string
ôô 
GetSecureSiteRoot
ôô .
(
ôô. /
)
ôô/ 0
{
öö 	
string
õõ 
protocol
õõ 
=
õõ 
$str
õõ %
;
õõ% &
string
úú 
host
úú 
=
úú 
GetHost
úú !
(
úú! "
protocol
úú" *
)
úú* +
;
úú+ ,
return
ùù 
protocol
ùù 
+
ùù 
$str
ùù #
+
ùù$ %
host
ùù& *
+
ùù+ , 
GetApplicationRoot
ùù- ?
(
ùù? @
)
ùù@ A
;
ùùA B
}
ûû 	
public
†† 
static
†† 
string
†† 
GetSecureHostRoot
†† .
(
††. /
)
††/ 0
{
°° 	
string
¢¢ 
protocol
¢¢ 
=
¢¢ 
$str
¢¢ %
;
¢¢% &
string
££ 
host
££ 
=
££ 
GetHost
££ !
(
££! "
protocol
££" *
)
££* +
;
££+ ,
return
§§ 
protocol
§§ 
+
§§ 
$str
§§ #
+
§§$ %
host
§§& *
;
§§* +
}
•• 	
public
ßß 
static
ßß 
string
ßß !
GetInSecureSiteRoot
ßß 0
(
ßß0 1
)
ßß1 2
{
®® 	
string
©© 
protocol
©© 
=
©© 
$str
©© $
;
©©$ %
string
™™ 
host
™™ 
=
™™ 
GetHostName
™™ %
(
™™% &
)
™™& '
;
™™' (
return
´´ 
protocol
´´ 
+
´´ 
$str
´´ #
+
´´$ %
host
´´& *
+
´´+ , 
GetApplicationRoot
´´- ?
(
´´? @
)
´´@ A
;
´´A B
}
¨¨ 	
public
ÆÆ 
static
ÆÆ 
string
ÆÆ !
GetInSecureHostRoot
ÆÆ 0
(
ÆÆ0 1
)
ÆÆ1 2
{
ØØ 	
string
∞∞ 
protocol
∞∞ 
=
∞∞ 
$str
∞∞ $
;
∞∞$ %
string
±± 
host
±± 
=
±± 
GetHostName
±± %
(
±±% &
)
±±& '
;
±±' (
return
≤≤ 
protocol
≤≤ 
+
≤≤ 
$str
≤≤ #
+
≤≤$ %
host
≤≤& *
;
≤≤* +
}
≥≥ 	
public
µµ 
static
µµ 
string
µµ 
GetHostName
µµ (
(
µµ( )
)
µµ) *
{
∂∂ 	
if
∑∑ 
(
∑∑ 
HttpContext
∑∑ 
.
∑∑ 
Current
∑∑ #
==
∑∑$ &
null
∑∑' +
)
∑∑+ ,
return
∑∑- 3
String
∑∑4 :
.
∑∑: ;
Empty
∑∑; @
;
∑∑@ A
string
∫∫ 
hostname
∫∫ 
=
∫∫ 
HttpContext
∫∫ )
.
∫∫) *
Current
∫∫* 1
.
∫∫1 2
Items
∫∫2 7
[
∫∫7 8
$str
∫∫8 B
]
∫∫B C
as
∫∫D F
string
∫∫G M
;
∫∫M N
if
ªª 
(
ªª 
hostname
ªª 
==
ªª 
null
ªª  
)
ªª  !
{
ºº 
hostname
ΩΩ 
=
ΩΩ 
HttpContext
ΩΩ &
.
ΩΩ& '
Current
ΩΩ' .
.
ΩΩ. /
Request
ΩΩ/ 6
.
ΩΩ6 7
ServerVariables
ΩΩ7 F
[
ΩΩF G
$str
ΩΩG T
]
ΩΩT U
;
ΩΩU V
if
ææ 
(
ææ 
hostname
ææ 
!=
ææ 
null
ææ  $
)
ææ$ %
HttpContext
øø 
.
øø  
Current
øø  '
.
øø' (
Items
øø( -
[
øø- .
$str
øø. 8
]
øø8 9
=
øø: ;
hostname
øø< D
;
øøD E
}
¿¿ 
return
¡¡ 
hostname
¡¡ 
;
¡¡ 
}
≈≈ 	
public
«« 
static
«« 
string
«« 
GetVirtualRoot
«« +
(
««+ ,
)
««, -
{
»» 	
string
…… 

serverName
…… 
=
…… 
HttpContext
……  +
.
……+ ,
Current
……, 3
.
……3 4
Request
……4 ;
.
……; <
ServerVariables
……< K
[
……K L
$str
……L Y
]
……Y Z
;
……Z [
return
ÀÀ 
$str
ÀÀ 
+
ÀÀ 

serverName
ÀÀ #
+
ÀÀ$ % 
GetApplicationRoot
ÀÀ& 8
(
ÀÀ8 9
)
ÀÀ9 :
;
ÀÀ: ;
}
ÃÃ 	
public
ŒŒ 
static
ŒŒ 
void
ŒŒ 
ForceSsl
ŒŒ #
(
ŒŒ# $
)
ŒŒ$ %
{
œœ 	
bool
–– 
.
–– 
TryParse
–– 
(
–– "
ConfigurationManager
–– %
.
––% &
AppSettings
––& 1
[
––1 2
$str
––2 M
]
––M N
,
––N O
out
––P S
bool
––T X'
proxyPreventsSSLDetection
––Y r
)
––r s
;
––s t
if
”” 
(
”” 
!
”” '
proxyPreventsSSLDetection
”” !
)
””! "
{
‘‘ 
string
’’ 
url
’’ 
=
’’ 
HttpContext
’’ (
.
’’( )
Current
’’) 0
.
’’0 1
Request
’’1 8
.
’’8 9
Url
’’9 <
.
’’< =
ToString
’’= E
(
’’E F
)
’’F G
;
’’G H
if
÷÷ 
(
÷÷ 
url
÷÷ 
.
÷÷ 

StartsWith
÷÷ "
(
÷÷" #
$str
÷÷# *
)
÷÷* +
)
÷÷+ ,
{
◊◊ 
HttpContext
ÿÿ 
.
ÿÿ  
Current
ÿÿ  '
.
ÿÿ' (
Response
ÿÿ( 0
.
ÿÿ0 1
Redirect
ÿÿ1 9
(
ÿÿ9 :
$str
ÿÿ: A
+
ÿÿB C
url
ÿÿD G
.
ÿÿG H
Remove
ÿÿH N
(
ÿÿN O
$num
ÿÿO P
,
ÿÿP Q
$num
ÿÿR S
)
ÿÿS T
,
ÿÿT U
false
ÿÿV [
)
ÿÿ[ \
;
ÿÿ\ ]
}
ŸŸ 
}
⁄⁄ 
}
€€ 	
public
›› 
static
›› 
void
›› 
ClearSsl
›› #
(
››# $
)
››$ %
{
ﬁﬁ 	
string
ﬂﬂ 
url
ﬂﬂ 
=
ﬂﬂ 
HttpContext
ﬂﬂ $
.
ﬂﬂ$ %
Current
ﬂﬂ% ,
.
ﬂﬂ, -
Request
ﬂﬂ- 4
.
ﬂﬂ4 5
Url
ﬂﬂ5 8
.
ﬂﬂ8 9
ToString
ﬂﬂ9 A
(
ﬂﬂA B
)
ﬂﬂB C
;
ﬂﬂC D
if
‡‡ 
(
‡‡ 
url
‡‡ 
.
‡‡ 

StartsWith
‡‡ 
(
‡‡ 
$str
‡‡ '
)
‡‡' (
)
‡‡( )
{
·· 
HttpContext
‚‚ 
.
‚‚ 
Current
‚‚ #
.
‚‚# $
Response
‚‚$ ,
.
‚‚, -
Redirect
‚‚- 5
(
‚‚5 6
$str
‚‚6 <
+
‚‚= >
url
‚‚? B
.
‚‚B C
Remove
‚‚C I
(
‚‚I J
$num
‚‚J K
,
‚‚K L
$num
‚‚M N
)
‚‚N O
,
‚‚O P
false
‚‚Q V
)
‚‚V W
;
‚‚W X
}
„„ 
}
‰‰ 	
public
ÍÍ 
static
ÍÍ 
string
ÍÍ 
GetQueryString
ÍÍ +
(
ÍÍ+ ,
string
ÍÍ, 2
rawUrl
ÍÍ3 9
)
ÍÍ9 :
{
ÎÎ 	
if
ÏÏ 
(
ÏÏ 
!
ÏÏ 
rawUrl
ÏÏ 
.
ÏÏ 
Contains
ÏÏ  
(
ÏÏ  !
$str
ÏÏ! $
)
ÏÏ$ %
)
ÏÏ% &
return
ÏÏ' -
string
ÏÏ. 4
.
ÏÏ4 5
Empty
ÏÏ5 :
;
ÏÏ: ;
if
ÌÌ 
(
ÌÌ 
rawUrl
ÌÌ 
.
ÌÌ 
IndexOf
ÌÌ 
(
ÌÌ 
$str
ÌÌ "
)
ÌÌ" #
==
ÌÌ$ &
rawUrl
ÌÌ' -
.
ÌÌ- .
Length
ÌÌ. 4
-
ÌÌ5 6
$num
ÌÌ6 7
)
ÌÌ7 8
return
ÌÌ9 ?
string
ÌÌ@ F
.
ÌÌF G
Empty
ÌÌG L
;
ÌÌL M
return
ÓÓ 
rawUrl
ÓÓ 
.
ÓÓ 
	Substring
ÓÓ #
(
ÓÓ# $
rawUrl
ÓÓ$ *
.
ÓÓ* +
IndexOf
ÓÓ+ 2
(
ÓÓ2 3
$str
ÓÓ3 6
)
ÓÓ6 7
,
ÓÓ7 8
rawUrl
ÓÓ9 ?
.
ÓÓ? @
Length
ÓÓ@ F
-
ÓÓG H
rawUrl
ÓÓI O
.
ÓÓO P
IndexOf
ÓÓP W
(
ÓÓW X
$str
ÓÓX [
)
ÓÓ[ \
)
ÓÓ\ ]
;
ÓÓ] ^
}
 	
public
ÚÚ 
static
ÚÚ 
string
ÚÚ &
GetUrlWithoutQueryString
ÚÚ 5
(
ÚÚ5 6
string
ÚÚ6 <
rawUrl
ÚÚ= C
)
ÚÚC D
{
ÛÛ 	
if
ÙÙ 
(
ÙÙ 
!
ÙÙ 
rawUrl
ÙÙ 
.
ÙÙ 
Contains
ÙÙ  
(
ÙÙ  !
$str
ÙÙ! $
)
ÙÙ$ %
)
ÙÙ% &
return
ÙÙ' -
rawUrl
ÙÙ. 4
;
ÙÙ4 5
return
ıı 
rawUrl
ıı 
.
ıı 
	Substring
ıı #
(
ıı# $
$num
ıı$ %
,
ıı% &
rawUrl
ıı' -
.
ıı- .
IndexOf
ıı. 5
(
ıı5 6
$str
ıı6 9
)
ıı9 :
)
ıı: ;
;
ıı; <
}
˜˜ 	
public
˚˚ 
static
˚˚ 
string
˚˚ 
BuildQueryString
˚˚ -
(
˚˚- .
string
˚˚. 4
leaveOutParam
˚˚5 B
)
˚˚B C
{
¸¸ 	
if
˝˝ 
(
˝˝ 
String
˝˝ 
.
˝˝ 
IsNullOrEmpty
˝˝ $
(
˝˝$ %
leaveOutParam
˝˝% 2
)
˝˝2 3
)
˝˝3 4
return
˝˝5 ;
String
˝˝< B
.
˝˝B C
Empty
˝˝C H
;
˝˝H I
string
ˇˇ 
queryString
ˇˇ 
=
ˇˇ  
HttpContext
ˇˇ! ,
.
ˇˇ, -
Current
ˇˇ- 4
.
ˇˇ4 5
Request
ˇˇ5 <
.
ˇˇ< =
QueryString
ˇˇ= H
.
ˇˇH I
ToString
ˇˇI Q
(
ˇˇQ R
)
ˇˇR S
;
ˇˇS T
return
ÅÅ 
BuildQueryString
ÅÅ #
(
ÅÅ# $
queryString
ÅÅ$ /
,
ÅÅ/ 0
leaveOutParam
ÅÅ1 >
)
ÅÅ> ?
;
ÅÅ? @
}
ÉÉ 	
public
ÖÖ 
static
ÖÖ 
string
ÖÖ 
BuildQueryString
ÖÖ -
(
ÖÖ- .
string
ÖÖ. 4
queryString
ÖÖ5 @
,
ÖÖ@ A
string
ÖÖB H
leaveOutParam
ÖÖI V
)
ÖÖV W
{
ÜÜ 	
if
áá 
(
áá 
String
áá 
.
áá 
IsNullOrEmpty
áá $
(
áá$ %
leaveOutParam
áá% 2
)
áá2 3
)
áá3 4
return
áá5 ;
String
áá< B
.
ááB C
Empty
ááC H
;
ááH I
if
àà 
(
àà 
String
àà 
.
àà 
IsNullOrEmpty
àà $
(
àà$ %
queryString
àà% 0
)
àà0 1
)
àà1 2
return
àà3 9
String
àà: @
.
àà@ A
Empty
ààA F
;
ààF G
if
ää 
(
ää 
queryString
ää 
.
ää 
Length
ää "
>
ää# $
$num
ää% &
)
ää& '
{
ãã 
if
åå 
(
åå 
queryString
åå 
.
åå  

StartsWith
åå  *
(
åå* +
$str
åå+ .
)
åå. /
)
åå/ 0
{
çç 
queryString
éé 
=
éé  !
queryString
éé" -
.
éé- .
Remove
éé. 4
(
éé4 5
$num
éé5 6
,
éé6 7
$num
éé8 9
)
éé9 :
;
éé: ;
}
èè 
if
êê 
(
êê 
!
êê 
queryString
êê  
.
êê  !

StartsWith
êê! +
(
êê+ ,
$str
êê, /
)
êê/ 0
)
êê0 1
{
ëë 
queryString
íí 
=
íí  !
$str
íí" %
+
íí& '
queryString
íí( 3
;
íí3 4
}
ìì 
int
îî "
indexOfLeaveOutParam
îî (
=
îî) *
queryString
îî+ 6
.
îî6 7
IndexOf
îî7 >
(
îî> ?
$str
îî? B
+
îîC D
leaveOutParam
îîE R
)
îîR S
;
îîS T
if
ïï 
(
ïï "
indexOfLeaveOutParam
ïï (
>
ïï) *
-
ïï+ ,
$num
ïï, -
)
ïï- .
{
ññ 
string
óó 
leavoutParamValue
óó ,
=
óó- .
HttpContext
óó/ :
.
óó: ;
Current
óó; B
.
óóB C
Request
óóC J
.
óóJ K
Params
óóK Q
.
óóQ R
Get
óóR U
(
óóU V
leaveOutParam
óóV c
)
óóc d
;
óód e
string
òò '
stringBeforeLeaveOutParam
òò 4
=
òò5 6
queryString
òò7 B
.
òòB C
	Substring
òòC L
(
òòL M
$num
òòM N
,
òòN O"
indexOfLeaveOutParam
òòP d
)
òòd e
;
òòe f
string
ôô &
stringAfterLeaveOutParam
ôô 3
=
ôô4 5
queryString
öö #
.
öö# $
	Substring
öö$ -
(
öö- ."
indexOfLeaveOutParam
öö. B
+
ööC D
leaveOutParam
ööE R
.
ööR S
Length
ööS Y
+
ööZ [
$num
öö\ ]
+
öö^ _
leavoutParamValue
öö` q
.
ööq r
Length
öör x
)
ööx y
;
ööy z
if
õõ 
(
õõ &
stringAfterLeaveOutParam
õõ 0
.
õõ0 1
Length
õõ1 7
>
õõ8 9
$num
õõ: ;
)
õõ; <
{
úú 
if
ùù 
(
ùù 
!
ùù &
stringAfterLeaveOutParam
ùù 5
.
ùù5 6

StartsWith
ùù6 @
(
ùù@ A
$str
ùùA D
)
ùùD E
)
ùùE F
{
ûû 
if
üü 
(
üü  &
stringAfterLeaveOutParam
üü  8
.
üü8 9
IndexOf
üü9 @
(
üü@ A
$str
üüA D
)
üüD E
>
üüF G
-
üüH I
$num
üüI J
)
üüJ K
{
†† &
stringAfterLeaveOutParam
°°  8
=
°°9 :&
stringAfterLeaveOutParam
¢¢$ <
.
¢¢< =
	Substring
¢¢= F
(
¢¢F G&
stringAfterLeaveOutParam
¢¢G _
.
¢¢_ `
IndexOf
¢¢` g
(
¢¢g h
$str
¢¢h k
)
¢¢k l
)
¢¢l m
;
¢¢m n
}
££ 
else
§§  
{
•• &
stringAfterLeaveOutParam
¶¶  8
=
¶¶9 :
$str
¶¶; =
;
¶¶= >
}
ßß 
}
®® 
}
©© 
queryString
™™ 
=
™™  !'
stringBeforeLeaveOutParam
™™" ;
+
™™< =&
stringAfterLeaveOutParam
™™> V
;
™™V W
}
´´ 
}
¨¨ 
return
≠≠ 
queryString
≠≠ 
;
≠≠ 
}
ÆÆ 	
public
∞∞ 
static
∞∞ 
string
∞∞ $
RemoveQueryStringParam
∞∞ 3
(
∞∞3 4
string
∞∞4 :
leaveOutParam
∞∞; H
)
∞∞H I
{
±± 	
if
≤≤ 
(
≤≤ 
String
≤≤ 
.
≤≤ 
IsNullOrEmpty
≤≤ $
(
≤≤$ %
leaveOutParam
≤≤% 2
)
≤≤2 3
)
≤≤3 4
return
≤≤5 ;
String
≤≤< B
.
≤≤B C
Empty
≤≤C H
;
≤≤H I
string
¥¥ 
queryString
¥¥ 
=
¥¥  
HttpContext
¥¥! ,
.
¥¥, -
Current
¥¥- 4
.
¥¥4 5
Request
¥¥5 <
.
¥¥< =
QueryString
¥¥= H
.
¥¥H I
ToString
¥¥I Q
(
¥¥Q R
)
¥¥R S
;
¥¥S T
return
µµ $
RemoveQueryStringParam
µµ )
(
µµ) *
queryString
µµ* 5
,
µµ5 6
leaveOutParam
µµ7 D
)
µµD E
;
µµE F
}
∑∑ 	
public
ππ 
static
ππ 
string
ππ $
RemoveQueryStringParam
ππ 3
(
ππ3 4
string
ππ4 :
queryString
ππ; F
,
ππF G
string
ππH N
leaveOutParam
ππO \
)
ππ\ ]
{
∫∫ 	
if
ªª 
(
ªª 
String
ªª 
.
ªª 
IsNullOrEmpty
ªª $
(
ªª$ %
leaveOutParam
ªª% 2
)
ªª2 3
)
ªª3 4
return
ªª5 ;
String
ªª< B
.
ªªB C
Empty
ªªC H
;
ªªH I
if
ºº 
(
ºº 
String
ºº 
.
ºº 
IsNullOrEmpty
ºº $
(
ºº$ %
queryString
ºº% 0
)
ºº0 1
)
ºº1 2
return
ºº3 9
String
ºº: @
.
ºº@ A
Empty
ººA F
;
ººF G
if
ææ 
(
ææ 
queryString
ææ 
.
ææ 
Length
ææ "
>
ææ# $
$num
ææ% &
)
ææ& '
{
øø 
if
¿¿ 
(
¿¿ 
queryString
¿¿ 
.
¿¿  

StartsWith
¿¿  *
(
¿¿* +
$str
¿¿+ .
)
¿¿. /
)
¿¿/ 0
{
¡¡ 
queryString
¬¬ 
=
¬¬  !
queryString
¬¬" -
.
¬¬- .
Remove
¬¬. 4
(
¬¬4 5
$num
¬¬5 6
,
¬¬6 7
$num
¬¬8 9
)
¬¬9 :
;
¬¬: ;
}
√√ 
if
ƒƒ 
(
ƒƒ 
!
ƒƒ 
queryString
ƒƒ  
.
ƒƒ  !

StartsWith
ƒƒ! +
(
ƒƒ+ ,
$str
ƒƒ, /
)
ƒƒ/ 0
)
ƒƒ0 1
{
≈≈ 
queryString
∆∆ 
=
∆∆  !
$str
∆∆" %
+
∆∆& '
queryString
∆∆( 3
;
∆∆3 4
}
«« 
int
»» "
indexOfLeaveOutParam
»» (
=
»») *
queryString
»»+ 6
.
»»6 7
IndexOf
»»7 >
(
»»> ?
$str
»»? B
+
»»C D
leaveOutParam
»»E R
)
»»R S
;
»»S T
if
…… 
(
…… "
indexOfLeaveOutParam
…… (
>
……) *
-
……+ ,
$num
……, -
)
……- .
{
   
string
ÀÀ '
stringBeforeLeaveOutParam
ÀÀ 4
=
ÀÀ5 6
queryString
ÀÀ7 B
.
ÀÀB C
	Substring
ÀÀC L
(
ÀÀL M
$num
ÀÀM N
,
ÀÀN O"
indexOfLeaveOutParam
ÀÀP d
)
ÀÀd e
;
ÀÀe f
string
ÃÃ &
stringAfterLeaveOutParam
ÃÃ 3
=
ÃÃ4 5
queryString
ÃÃ6 A
.
ÃÃA B
	Substring
ÃÃB K
(
ÃÃK L"
indexOfLeaveOutParam
ÃÃL `
+
ÃÃa b
leaveOutParam
ÃÃc p
.
ÃÃp q
Length
ÃÃq w
)
ÃÃw x
;
ÃÃx y
if
ÕÕ 
(
ÕÕ &
stringAfterLeaveOutParam
ÕÕ 0
.
ÕÕ0 1
Length
ÕÕ1 7
>
ÕÕ8 9
$num
ÕÕ: ;
)
ÕÕ; <
{
ŒŒ 
if
œœ 
(
œœ 
!
œœ &
stringAfterLeaveOutParam
œœ 5
.
œœ5 6

StartsWith
œœ6 @
(
œœ@ A
$str
œœA D
)
œœD E
)
œœE F
{
–– 
if
—— 
(
——  &
stringAfterLeaveOutParam
——  8
.
——8 9
IndexOf
——9 @
(
——@ A
$str
——A D
)
——D E
>
——F G
-
——H I
$num
——I J
)
——J K
{
““ &
stringAfterLeaveOutParam
””  8
=
””9 :&
stringAfterLeaveOutParam
‘‘$ <
.
‘‘< =
	Substring
‘‘= F
(
‘‘F G&
stringAfterLeaveOutParam
‘‘G _
.
‘‘_ `
IndexOf
‘‘` g
(
‘‘g h
$str
‘‘h k
)
‘‘k l
)
‘‘l m
;
‘‘m n
}
’’ 
else
÷÷  
{
◊◊ &
stringAfterLeaveOutParam
ÿÿ  8
=
ÿÿ9 :
$str
ÿÿ; =
;
ÿÿ= >
}
ŸŸ 
}
⁄⁄ 
}
€€ 
queryString
‹‹ 
=
‹‹  !'
stringBeforeLeaveOutParam
‹‹" ;
+
‹‹< =&
stringAfterLeaveOutParam
‹‹> V
;
‹‹V W
}
›› 
if
ﬂﬂ 
(
ﬂﬂ 
queryString
ﬂﬂ 
.
ﬂﬂ  

StartsWith
ﬂﬂ  *
(
ﬂﬂ* +
$str
ﬂﬂ+ .
)
ﬂﬂ. /
)
ﬂﬂ/ 0
{
‡‡ 
queryString
·· 
=
··  !
queryString
··" -
.
··- .
Remove
··. 4
(
··4 5
$num
··5 6
,
··6 7
$num
··8 9
)
··9 :
;
··: ;
}
‚‚ 
}
„„ 
return
‰‰ 
queryString
‰‰ 
;
‰‰ 
}
ÂÂ 	
public
ËË 
static
ËË 
string
ËË 
GetHtmlFromWeb
ËË +
(
ËË+ ,
string
ËË, 2
url
ËË3 6
)
ËË6 7
{
ÈÈ 	
string
ÍÍ 
html
ÍÍ 
=
ÍÍ 
string
ÍÍ  
.
ÍÍ  !
Empty
ÍÍ! &
;
ÍÍ& '
try
ÏÏ 
{
ÌÌ 
HttpWebRequest
ÓÓ 

webRequest
ÓÓ )
=
ÓÓ* +
(
ÓÓ, -
HttpWebRequest
ÓÓ- ;
)
ÓÓ; <

WebRequest
ÓÓ< F
.
ÓÓF G
Create
ÓÓG M
(
ÓÓM N
url
ÓÓN Q
)
ÓÓQ R
;
ÓÓR S

webRequest
ÔÔ 
.
ÔÔ 
Method
ÔÔ !
=
ÔÔ" #
$str
ÔÔ$ )
;
ÔÔ) *

webRequest
 
.
 
Timeout
 "
=
# $
$num
% )
;
) *
HttpWebResponse
ÛÛ 
webResponse
ÛÛ  +
=
ÙÙ 
(
ÙÙ 
HttpWebResponse
ÙÙ &
)
ÙÙ& '

webRequest
ÙÙ' 1
.
ÙÙ1 2
GetResponse
ÙÙ2 =
(
ÙÙ= >
)
ÙÙ> ?
;
ÙÙ? @
if
ˆˆ 
(
ˆˆ 
webResponse
ˆˆ 
!=
ˆˆ  "
null
ˆˆ# '
)
ˆˆ' (
{
˜˜ 
using
¯¯ 
(
¯¯ 
StreamReader
¯¯ '
responseStream
¯¯( 6
=
¯¯7 8
new
˘˘ 
StreamReader
˘˘ '
(
˘˘' (
webResponse
˘˘( 3
.
˘˘3 4
GetResponseStream
˘˘4 E
(
˘˘E F
)
˘˘F G
)
˘˘G H
)
˘˘H I
{
˙˙ 
html
˚˚ 
=
˚˚ 
responseStream
˚˚ -
.
˚˚- .
	ReadToEnd
˚˚. 7
(
˚˚7 8
)
˚˚8 9
;
˚˚9 :
}
˝˝ 
}
˛˛ 
}
ÄÄ 
catch
ÅÅ 
(
ÅÅ 
	Exception
ÅÅ 
ex
ÅÅ 
)
ÅÅ  
{
ÇÇ 
log
ÉÉ 
.
ÉÉ 
Error
ÉÉ 
(
ÉÉ 
$str
ÉÉ Q
,
ÉÉQ R
ex
ÉÉS U
)
ÉÉU V
;
ÉÉV W
}
ÖÖ 
return
áá 
html
áá 
;
áá 
}
ââ 	
public
ææ 
static
ææ 
void
ææ 
SetupRedirect
ææ (
(
ææ( )
Control
ææ) 0
control
ææ1 8
,
ææ8 9
string
ææ: @
redirectUrl
ææA L
)
ææL M
{
øø 	
if
’’ 
(
’’ 
redirectUrl
’’ 
!=
’’ 
null
’’ #
)
’’# $
{
÷÷ 
HttpContext
◊◊ 
.
◊◊ 
Current
◊◊ #
.
◊◊# $
Response
◊◊$ ,
.
◊◊, -
Redirect
◊◊- 5
(
◊◊5 6
redirectUrl
◊◊6 A
,
◊◊A B
false
◊◊C H
)
◊◊H I
;
◊◊I J
if
ŸŸ 
(
ŸŸ 
control
ŸŸ 
!=
ŸŸ 
null
ŸŸ #
)
ŸŸ# $
{
⁄⁄ 
control
€€ 
.
€€ 
EnableViewState
€€ +
=
€€, -
false
€€. 3
;
€€3 4
control
‹‹ 
.
‹‹ 
Visible
‹‹ #
=
‹‹$ %
false
‹‹& +
;
‹‹+ ,
}
›› 
HttpContext
ﬂﬂ 
.
ﬂﬂ 
Current
ﬂﬂ #
.
ﬂﬂ# $!
ApplicationInstance
ﬂﬂ$ 7
.
ﬂﬂ7 8
CompleteRequest
ﬂﬂ8 G
(
ﬂﬂG H
)
ﬂﬂH I
;
ﬂﬂI J
return
‡‡ 
;
‡‡ 
}
·· 
}
„„ 	
public
ÊÊ 
static
ÊÊ 
bool
ÊÊ 
NullToFalse
ÊÊ &
(
ÊÊ& '
Object
ÊÊ' -
o
ÊÊ. /
)
ÊÊ/ 0
{
ÁÁ 	
if
ËË 
(
ËË 
o
ËË 
==
ËË 
null
ËË 
)
ËË 
return
ËË !
false
ËË" '
;
ËË' (
if
ÈÈ 
(
ÈÈ 
o
ÈÈ 
is
ÈÈ 
bool
ÈÈ 
)
ÈÈ 
return
ÈÈ !
(
ÈÈ" #
bool
ÈÈ# '
)
ÈÈ' (
o
ÈÈ( )
;
ÈÈ) *
if
ÍÍ 
(
ÍÍ 
o
ÍÍ 
is
ÍÍ 
int
ÍÍ 
)
ÍÍ 
return
ÍÍ  
(
ÍÍ! "
(
ÍÍ" #
int
ÍÍ# &
)
ÍÍ& '
o
ÍÍ' (
>
ÍÍ) *
$num
ÍÍ+ ,
)
ÍÍ, -
;
ÍÍ- .
string
ÏÏ 
str
ÏÏ 
=
ÏÏ 
o
ÏÏ 
.
ÏÏ 
ToString
ÏÏ #
(
ÏÏ# $
)
ÏÏ$ %
;
ÏÏ% &
if
ÌÌ 
(
ÌÌ 
(
ÌÌ 
string
ÌÌ 
.
ÌÌ 
Equals
ÌÌ 
(
ÌÌ 
str
ÌÌ "
,
ÌÌ" #
$str
ÌÌ$ *
,
ÌÌ* +
StringComparison
ÌÌ, <
.
ÌÌ< =(
InvariantCultureIgnoreCase
ÌÌ= W
)
ÌÌW X
)
ÌÌX Y
||
ÌÌZ \
(
ÌÌ] ^
str
ÌÌ^ a
==
ÌÌb d
$str
ÌÌe h
)
ÌÌh i
)
ÌÌi j
return
ÌÌk q
true
ÌÌr v
;
ÌÌv w
if
ÓÓ 
(
ÓÓ 
(
ÓÓ 
string
ÓÓ 
.
ÓÓ 
Equals
ÓÓ 
(
ÓÓ 
str
ÓÓ "
,
ÓÓ" #
$str
ÓÓ$ +
,
ÓÓ+ ,
StringComparison
ÓÓ- =
.
ÓÓ= >(
InvariantCultureIgnoreCase
ÓÓ> X
)
ÓÓX Y
)
ÓÓY Z
||
ÓÓ[ ]
(
ÓÓ^ _
str
ÓÓ_ b
==
ÓÓc e
$str
ÓÓf i
)
ÓÓi j
)
ÓÓj k
return
ÓÓl r
false
ÓÓs x
;
ÓÓx y
return
 
false
 
;
 
}
ÒÒ 	
public
ÛÛ 
static
ÛÛ 
bool
ÛÛ 

NullToTrue
ÛÛ %
(
ÛÛ% &
Object
ÛÛ& ,
o
ÛÛ- .
)
ÛÛ. /
{
ÙÙ 	
if
ıı 
(
ıı 
o
ıı 
==
ıı 
null
ıı 
)
ıı 
return
ıı !
true
ıı" &
;
ıı& '
if
ˆˆ 
(
ˆˆ 
o
ˆˆ 
is
ˆˆ 
bool
ˆˆ 
)
ˆˆ 
return
ˆˆ !
(
ˆˆ" #
bool
ˆˆ# '
)
ˆˆ' (
o
ˆˆ( )
;
ˆˆ) *
if
˜˜ 
(
˜˜ 
o
˜˜ 
is
˜˜ 
int
˜˜ 
)
˜˜ 
return
˜˜  
(
˜˜! "
(
˜˜" #
int
˜˜# &
)
˜˜& '
o
˜˜' (
>
˜˜) *
$num
˜˜+ ,
)
˜˜, -
;
˜˜- .
string
˘˘ 
str
˘˘ 
=
˘˘ 
o
˘˘ 
.
˘˘ 
ToString
˘˘ #
(
˘˘# $
)
˘˘$ %
;
˘˘% &
if
˙˙ 
(
˙˙ 
(
˙˙ 
string
˙˙ 
.
˙˙ 
Equals
˙˙ 
(
˙˙ 
str
˙˙ "
,
˙˙" #
$str
˙˙$ *
,
˙˙* +
StringComparison
˙˙, <
.
˙˙< =(
InvariantCultureIgnoreCase
˙˙= W
)
˙˙W X
)
˙˙X Y
||
˙˙Z \
(
˙˙] ^
str
˙˙^ a
==
˙˙b d
$str
˙˙e h
)
˙˙h i
)
˙˙i j
return
˙˙k q
true
˙˙r v
;
˙˙v w
if
˚˚ 
(
˚˚ 
(
˚˚ 
string
˚˚ 
.
˚˚ 
Equals
˚˚ 
(
˚˚ 
str
˚˚ "
,
˚˚" #
$str
˚˚$ +
,
˚˚+ ,
StringComparison
˚˚- =
.
˚˚= >(
InvariantCultureIgnoreCase
˚˚> X
)
˚˚X Y
)
˚˚Y Z
||
˚˚[ ]
(
˚˚^ _
str
˚˚_ b
==
˚˚c e
$str
˚˚f i
)
˚˚i j
)
˚˚j k
return
˚˚l r
false
˚˚s x
;
˚˚x y
return
˝˝ 
true
˝˝ 
;
˝˝ 
}
˛˛ 	
public
ÄÄ 
static
ÄÄ 
Int32
ÄÄ %
ParseInt32FromHashtable
ÄÄ 3
(
ÄÄ3 4
	Hashtable
ÅÅ 
settings
ÅÅ 
,
ÅÅ 
String
ÇÇ 
key
ÇÇ 
,
ÇÇ 
Int32
ÉÉ 
defaultIfNotFound
ÉÉ #
)
ÉÉ# $
{
ÑÑ 	
int
ÖÖ 
returnValue
ÖÖ 
=
ÖÖ 
defaultIfNotFound
ÖÖ /
;
ÖÖ/ 0
if
ÜÜ 
(
ÜÜ 
settings
ÜÜ 
==
ÜÜ 
null
ÜÜ  
)
ÜÜ  !
{
ÜÜ" #
return
ÜÜ$ *
returnValue
ÜÜ+ 6
;
ÜÜ6 7
}
ÜÜ8 9
if
àà 
(
àà 
(
ââ 
key
ââ 
!=
ââ 
null
ââ 
)
ââ 
&&
ää 
(
ää 
settings
ää 
.
ää 
Contains
ää $
(
ää$ %
key
ää% (
)
ää( )
)
ää) *
&&
ãã 
(
ãã 
!
ãã 
Int32
ãã 
.
ãã 
TryParse
ãã #
(
ãã# $
settings
ãã$ ,
[
ãã, -
key
ãã- 0
]
ãã0 1
.
ãã1 2
ToString
ãã2 :
(
ãã: ;
)
ãã; <
,
ãã< =
NumberStyles
ãã= I
.
ããI J
Any
ããJ M
,
ããM N
CultureInfo
ããN Y
.
ããY Z
InvariantCulture
ããZ j
,
ããj k
out
ããk n
returnValue
ãão z
)
ããz {
)
ãã{ |
)
åå 
{
çç 
returnValue
éé 
=
éé 
defaultIfNotFound
éé /
;
éé/ 0
}
èè 
return
ëë 
returnValue
ëë 
;
ëë 
}
ìì 	
public
ïï 
static
ïï 
double
ïï &
ParseDoubleFromHashtable
ïï 5
(
ïï5 6
	Hashtable
ññ 
settings
ññ 
,
ññ 
String
óó 
key
óó 
,
óó 
double
òò 
defaultIfNotFound
òò $
)
òò$ %
{
ôô 	
double
öö 
returnValue
öö 
=
öö  
defaultIfNotFound
öö! 2
;
öö2 3
if
úú 
(
úú 
(
ùù 
key
ùù 
!=
ùù 
null
ùù 
)
ùù 
&&
ûû 
(
ûû 
settings
ûû 
.
ûû 
Contains
ûû %
(
ûû% &
key
ûû& )
)
ûû) *
)
ûû* +
&&
üü 
(
üü 
!
üü 
double
üü 
.
üü 
TryParse
üü $
(
üü$ %
settings
†† 
[
†† 
key
†† 
]
†† 
.
†† 
ToString
†† &
(
††& '
)
††' (
,
††( )
NumberStyles
°° 
.
°° 
Any
°°  
,
°°  !
CultureInfo
¢¢ 
.
¢¢ 
InvariantCulture
¢¢ ,
,
¢¢, -
out
££ 
returnValue
££ 
)
££  
)
££  !
)
§§ 
{
•• 
returnValue
¶¶ 
=
¶¶ 
defaultIfNotFound
¶¶ /
;
¶¶/ 0
}
ßß 
return
©© 
returnValue
©© 
;
©© 
}
´´ 	
public
≠≠ 
static
≠≠ 
bool
≠≠ $
ParseBoolFromHashtable
≠≠ 1
(
≠≠1 2
	Hashtable
ÆÆ 
settings
ÆÆ 
,
ÆÆ 
String
ØØ 
key
ØØ 
,
ØØ 
bool
∞∞ 
defaultIfNotFound
∞∞ "
)
∞∞" #
{
±± 	
bool
≤≤ 
returnValue
≤≤ 
=
≤≤ 
defaultIfNotFound
≤≤ 0
;
≤≤0 1
if
¥¥ 
(
¥¥ 
(
µµ 
settings
µµ 
!=
µµ 
null
µµ !
)
µµ! "
&&
∂∂ 
(
∂∂ 
key
∂∂ 
!=
∂∂ 
null
∂∂ 
)
∂∂ 
&&
∑∑ 
(
∑∑ 
settings
∑∑ 
.
∑∑ 
Contains
∑∑ %
(
∑∑% &
key
∑∑& )
)
∑∑) *
)
∑∑* +
)
∏∏ 
{
ππ 
if
∫∫ 
(
∫∫ 
string
∫∫ 
.
∫∫ 
Equals
∫∫ !
(
∫∫! "
settings
∫∫" *
[
∫∫* +
key
∫∫+ .
]
∫∫. /
.
∫∫/ 0
ToString
∫∫0 8
(
∫∫8 9
)
∫∫9 :
,
∫∫: ;
$str
∫∫; A
,
∫∫A B
StringComparison
∫∫C S
.
∫∫S T(
InvariantCultureIgnoreCase
∫∫T n
)
∫∫n o
)
∫∫o p
{
ªª 
return
ºº 
true
ºº 
;
ºº  
}
ΩΩ 
return
øø 
false
øø 
;
øø 
}
¿¿ 
return
¬¬ 
returnValue
¬¬ 
;
¬¬ 
}
ƒƒ 	
public
∆∆ 
static
∆∆ 
Guid
∆∆ $
ParseGuidFromHashTable
∆∆ 1
(
∆∆1 2
	Hashtable
«« 
settings
«« 
,
«« 
String
»» 
key
»» 
,
»» 
Guid
…… (
defaultIfNotFoundOrInvalid
…… +
)
……+ ,
{
   	
Guid
ÀÀ 
returnValue
ÀÀ 
=
ÀÀ (
defaultIfNotFoundOrInvalid
ÀÀ 9
;
ÀÀ9 :
if
ÕÕ 
(
ÕÕ 
(
ŒŒ 
settings
ŒŒ 
!=
ŒŒ 
null
ŒŒ !
)
ŒŒ! "
&&
œœ 
(
œœ 
key
œœ 
!=
œœ 
null
œœ 
)
œœ  
&&
–– 
(
–– 
settings
–– 
.
–– 
Contains
–– %
(
––% &
key
––& )
)
––) *
)
––* +
)
—— 
{
““ 
string
”” 
foundSetting
”” #
=
””$ %
settings
””& .
[
””. /
key
””/ 2
]
””2 3
.
””3 4
ToString
””4 <
(
””< =
)
””= >
;
””> ?
if
‘‘ 
(
‘‘ 
foundSetting
‘‘  
.
‘‘  !
Length
‘‘! '
==
‘‘( *
$num
‘‘+ -
)
‘‘- .
{
’’ 
returnValue
÷÷ 
=
÷÷  !
new
÷÷" %
Guid
÷÷& *
(
÷÷* +
foundSetting
÷÷+ 7
)
÷÷7 8
;
÷÷8 9
}
◊◊ 
}
ŸŸ 
return
€€ 
returnValue
€€ 
;
€€ 
}
›› 	
public
ﬂﬂ 
static
ﬂﬂ 
DateTime
ﬂﬂ &
ParseDateFromQueryString
ﬂﬂ 7
(
ﬂﬂ7 8
string
ﬂﬂ8 >
	paramName
ﬂﬂ? H
,
ﬂﬂH I
DateTime
ﬂﬂJ R
defaultIfNotFound
ﬂﬂS d
)
ﬂﬂd e
{
‡‡ 	
if
·· 
(
·· 
String
·· 
.
·· 
IsNullOrEmpty
·· $
(
··$ %
	paramName
··% .
)
··. /
)
··/ 0
throw
··1 6
new
··7 :#
ArgumentNullException
··; P
(
··P Q
$str
··Q \
)
··\ ]
;
··] ^
if
‚‚ 
(
‚‚ 
HttpContext
‚‚ 
.
‚‚ 
Current
‚‚ #
==
‚‚$ &
null
‚‚' +
)
‚‚+ ,
{
‚‚- .
return
‚‚/ 5
defaultIfNotFound
‚‚6 G
;
‚‚G H
}
‚‚I J
if
„„ 
(
„„ 
HttpContext
„„ 
.
„„ 
Current
„„ #
.
„„# $
Request
„„$ +
.
„„+ ,
QueryString
„„, 7
[
„„7 8
	paramName
„„8 A
]
„„A B
==
„„C E
null
„„F J
)
„„J K
{
„„L M
return
„„N T
defaultIfNotFound
„„U f
;
„„f g
}
„„h i
DateTime
ÂÂ 
result
ÂÂ 
=
ÂÂ 
defaultIfNotFound
ÂÂ /
;
ÂÂ/ 0 
DateTimeFormatInfo
ÁÁ 
dtfi
ÁÁ #
=
ÁÁ$ %
CultureInfo
ÁÁ& 1
.
ÁÁ1 2
InvariantCulture
ÁÁ2 B
.
ÁÁB C
DateTimeFormat
ÁÁC Q
;
ÁÁQ R
DateTime
ËË 
.
ËË 
TryParse
ËË 
(
ËË 
HttpContext
ËË )
.
ËË) *
Current
ËË* 1
.
ËË1 2
Request
ËË2 9
.
ËË9 :
QueryString
ËË: E
[
ËËE F
	paramName
ËËF O
]
ËËO P
,
ËËP Q
dtfi
ËËR V
,
ËËV W
DateTimeStyles
ËËX f
.
ËËf g
AdjustToUniversal
ËËg x
,
ËËx y
out
ËËz }
resultËË~ Ñ
)ËËÑ Ö
;ËËÖ Ü
return
ÍÍ 
result
ÍÍ 
;
ÍÍ 
}
ÎÎ 	
public
ÌÌ 
static
ÌÌ 
Int32
ÌÌ '
ParseInt32FromQueryString
ÌÌ 5
(
ÌÌ5 6
String
ÌÌ6 <
	paramName
ÌÌ= F
,
ÌÌF G
Int32
ÌÌH M(
defaultIfNotFoundOrInvalid
ÌÌN h
)
ÌÌh i
{
ÓÓ 	
Int32
ÔÔ 

paramValue
ÔÔ 
;
ÔÔ 
if
 
(
 !
TryLoadRequestParam
 #
(
# $
	paramName
$ -
,
- .
out
/ 2

paramValue
3 =
)
= >
)
> ?
return
@ F

paramValue
G Q
;
Q R
return
ÒÒ (
defaultIfNotFoundOrInvalid
ÒÒ -
;
ÒÒ- .
}
ÚÚ 	
public
ÙÙ 
static
ÙÙ 
Int32
ÙÙ '
ParseInt32FromQueryString
ÙÙ 5
(
ÙÙ5 6
String
ÙÙ6 <
	paramName
ÙÙ= F
,
ÙÙF G
bool
ÙÙH L 
onlyUseQueryString
ÙÙM _
,
ÙÙ_ `
Int32
ÙÙa f)
defaultIfNotFoundOrInvalidÙÙg Å
)ÙÙÅ Ç
{
ıı 	
Int32
˜˜ 

paramValue
˜˜ 
;
˜˜ 
if
¯¯ 
(
¯¯ !
TryLoadRequestParam
¯¯ #
(
¯¯# $
	paramName
¯¯$ -
,
¯¯- . 
onlyUseQueryString
¯¯/ A
,
¯¯A B
out
¯¯C F

paramValue
¯¯G Q
)
¯¯Q R
)
¯¯R S
return
¯¯T Z

paramValue
¯¯[ e
;
¯¯e f
return
˘˘ (
defaultIfNotFoundOrInvalid
˘˘ -
;
˘˘- .
}
˙˙ 	
public
ÉÉ 
static
ÉÉ 
Guid
ÉÉ &
ParseGuidFromQueryString
ÉÉ 3
(
ÉÉ3 4
String
ÉÉ4 :
	paramName
ÉÉ; D
,
ÉÉD E
Guid
ÉÉF J(
defaultIfNotFoundOrInvalid
ÉÉK e
)
ÉÉe f
{
ÑÑ 	
Guid
ÖÖ 

paramValue
ÖÖ 
;
ÖÖ 
if
ÜÜ 
(
ÜÜ !
TryLoadRequestParam
ÜÜ #
(
ÜÜ# $
	paramName
ÜÜ$ -
,
ÜÜ- .
out
ÜÜ/ 2

paramValue
ÜÜ3 =
)
ÜÜ= >
)
ÜÜ> ?
return
ÜÜ@ F

paramValue
ÜÜG Q
;
ÜÜQ R
return
áá (
defaultIfNotFoundOrInvalid
áá -
;
áá- .
}
àà 	
public
ää 
static
ää 
string
ää (
ParseStringFromQueryString
ää 7
(
ää7 8
string
ää8 >
	paramName
ää? H
,
ääH I
string
ääJ P(
defaultIfNotFoundOrInvalid
ääQ k
)
ääk l
{
ãã 	
if
åå 
(
åå 
String
åå 
.
åå 
IsNullOrEmpty
åå $
(
åå$ %
	paramName
åå% .
)
åå. /
)
åå/ 0
throw
åå1 6
new
åå7 :#
ArgumentNullException
åå; P
(
ååP Q
$str
ååQ \
)
åå\ ]
;
åå] ^
if
çç 
(
çç 
HttpContext
çç 
.
çç 
Current
çç #
==
çç$ &
null
çç' +
)
çç+ ,
{
çç- .
return
çç/ 5(
defaultIfNotFoundOrInvalid
çç6 P
;
ççP Q
}
ççR S
string
èè 
val
èè 
=
èè 
HttpContext
èè $
.
èè$ %
Current
èè% ,
.
èè, -
Request
èè- 4
.
èè4 5
QueryString
èè5 @
[
èè@ A
	paramName
èèA J
]
èèJ K
;
èèK L
if
êê 
(
êê 
String
êê 
.
êê 
IsNullOrEmpty
êê $
(
êê$ %
val
êê% (
)
êê( )
)
êê) *
{
êê+ ,
return
êê- 3(
defaultIfNotFoundOrInvalid
êê4 N
;
êêN O
}
êêP Q
return
ëë 
val
ëë 
;
ëë 
}
íí 	
public
îî 
static
îî 
bool
îî &
ParseBoolFromQueryString
îî 3
(
îî3 4
string
îî4 :
	paramName
îî; D
,
îîD E
bool
îîF J(
defaultIfNotFoundOrInvalid
îîK e
)
îîe f
{
ïï 	
if
ññ 
(
ññ 
String
ññ 
.
ññ 
IsNullOrEmpty
ññ $
(
ññ$ %
	paramName
ññ% .
)
ññ. /
)
ññ/ 0
throw
ññ1 6
new
ññ7 :#
ArgumentNullException
ññ; P
(
ññP Q
$str
ññQ \
)
ññ\ ]
;
ññ] ^
if
óó 
(
óó 
HttpContext
óó 
.
óó 
Current
óó #
==
óó$ &
null
óó' +
)
óó+ ,
{
óó- .
return
óó/ 5(
defaultIfNotFoundOrInvalid
óó6 P
;
óóP Q
}
óóR S
if
òò 
(
òò 
HttpContext
òò 
.
òò 
Current
òò #
.
òò# $
Request
òò$ +
.
òò+ ,
QueryString
òò, 7
[
òò7 8
	paramName
òò8 A
]
òòA B
==
òòC E
null
òòF J
)
òòJ K
{
òòL M
return
òòN T(
defaultIfNotFoundOrInvalid
òòU o
;
òòo p
}
òòq r
string
öö 
val
öö 
=
öö 
HttpContext
öö $
.
öö$ %
Current
öö% ,
.
öö, -
Request
öö- 4
.
öö4 5
QueryString
öö5 @
[
öö@ A
	paramName
ööA J
]
ööJ K
;
ööK L
if
õõ 
(
õõ 
String
õõ 
.
õõ 
IsNullOrEmpty
õõ $
(
õõ$ %
val
õõ% (
)
õõ( )
)
õõ) *
{
õõ+ ,
return
õõ- 3(
defaultIfNotFoundOrInvalid
õõ4 N
;
õõN O
}
õõP Q
bool
ùù 
result
ùù 
=
ùù (
defaultIfNotFoundOrInvalid
ùù 4
;
ùù4 5
bool
üü 
.
üü 
TryParse
üü 
(
üü 
val
üü 
,
üü 
out
üü "
result
üü# )
)
üü) *
;
üü* +
return
°° 
result
°° 
;
°° 
}
££ 	
public
©© 
static
©© 
T
©© &
LoadOptionalRequestParam
©© 0
<
©©0 1
T
©©1 2
>
©©2 3
(
©©3 4
string
©©4 :
	paramName
©©; D
,
©©D E
T
©©F G(
defaultIfNotFoundOrInvalid
©©H b
)
©©b c
{
™™ 	
T
´´ 

paramValue
´´ 
;
´´ 
if
¨¨ 
(
¨¨ !
TryLoadRequestParam
¨¨ #
(
¨¨# $
	paramName
¨¨$ -
,
¨¨- .
out
¨¨/ 2

paramValue
¨¨3 =
)
¨¨= >
)
¨¨> ?
return
¨¨@ F

paramValue
¨¨G Q
;
¨¨Q R
return
≠≠ (
defaultIfNotFoundOrInvalid
≠≠ -
;
≠≠- .
}
ÆÆ 	
public
∑∑ 
static
∑∑ 
bool
∑∑ !
TryLoadRequestParam
∑∑ .
(
∑∑. /
String
∑∑/ 5
	paramName
∑∑6 ?
,
∑∑? @
out
∑∑A D
Int32
∑∑E J

paramValue
∑∑K U
)
∑∑U V
{
∏∏ 	
bool
ππ  
onlyUseQueryString
ππ #
=
ππ$ %
false
ππ& +
;
ππ+ ,
return
∫∫ !
TryLoadRequestParam
∫∫ &
(
∫∫& '
	paramName
∫∫' 0
,
∫∫0 1 
onlyUseQueryString
∫∫2 D
,
∫∫D E
out
∫∫F I

paramValue
∫∫J T
)
∫∫T U
;
∫∫U V
}
ΩΩ 	
public
øø 
static
øø 
bool
øø !
TryLoadRequestParam
øø .
(
øø. /
String
øø/ 5
	paramName
øø6 ?
,
øø? @
bool
øøA E 
onlyUseQueryString
øøF X
,
øøX Y
out
øøZ ]
Int32
øø^ c

paramValue
øød n
)
øøn o
{
¿¿ 	
if
¡¡ 
(
¡¡ 
String
¡¡ 
.
¡¡ 
IsNullOrEmpty
¡¡ $
(
¡¡$ %
	paramName
¡¡% .
)
¡¡. /
)
¡¡/ 0
throw
¡¡1 6
new
¡¡7 :#
ArgumentNullException
¡¡; P
(
¡¡P Q
$str
¡¡Q \
)
¡¡\ ]
;
¡¡] ^
if
¬¬ 
(
¬¬ 
HttpContext
¬¬ 
.
¬¬ 
Current
¬¬ #
==
¬¬$ &
null
¬¬' +
)
¬¬+ ,
{
√√ 

paramValue
ƒƒ 
=
ƒƒ 
default
ƒƒ $
(
ƒƒ$ %
Int32
ƒƒ% *
)
ƒƒ* +
;
ƒƒ+ ,
return
≈≈ 
false
≈≈ 
;
≈≈ 
}
∆∆ 
if
»» 
(
»»  
onlyUseQueryString
»» "
)
»»" #
{
…… 
return
   
Int32
   
.
   
TryParse
   %
(
  % &
HttpContext
  & 1
.
  1 2
Current
  2 9
.
  9 :
Request
  : A
.
  A B
QueryString
  B M
[
  M N
	paramName
  N W
]
  W X
,
  X Y
NumberStyles
ÀÀ! -
.
ÀÀ- .
Integer
ÀÀ. 5
,
ÀÀ5 6
CultureInfo
ÀÀ7 B
.
ÀÀB C
InvariantCulture
ÀÀC S
,
ÀÀS T
out
ÀÀU X

paramValue
ÀÀY c
)
ÀÀc d
;
ÀÀd e
}
ÃÃ 
return
ŒŒ 
Int32
ŒŒ 
.
ŒŒ 
TryParse
ŒŒ !
(
ŒŒ! "
HttpContext
ŒŒ" -
.
ŒŒ- .
Current
ŒŒ. 5
.
ŒŒ5 6
Request
ŒŒ6 =
.
ŒŒ= >
Params
ŒŒ> D
[
ŒŒD E
	paramName
ŒŒE N
]
ŒŒN O
,
ŒŒO P
NumberStyles
œœ" .
.
œœ. /
Integer
œœ/ 6
,
œœ6 7
CultureInfo
œœ8 C
.
œœC D
InvariantCulture
œœD T
,
œœT U
out
œœV Y

paramValue
œœZ d
)
œœd e
;
œœe f
}
–– 	
public
÷÷ 
static
÷÷ 
bool
÷÷ !
TryLoadRequestParam
÷÷ .
(
÷÷. /
String
÷÷/ 5
	paramName
÷÷6 ?
,
÷÷? @
out
÷÷A D
String
÷÷E K

paramValue
÷÷L V
)
÷÷V W
{
◊◊ 	
if
ÿÿ 
(
ÿÿ 
String
ÿÿ 
.
ÿÿ 
IsNullOrEmpty
ÿÿ $
(
ÿÿ$ %
	paramName
ÿÿ% .
)
ÿÿ. /
)
ÿÿ/ 0
throw
ÿÿ1 6
new
ÿÿ7 :#
ArgumentNullException
ÿÿ; P
(
ÿÿP Q
$str
ÿÿQ \
)
ÿÿ\ ]
;
ÿÿ] ^
if
ŸŸ 
(
ŸŸ 
HttpContext
ŸŸ 
.
ŸŸ 
Current
ŸŸ #
==
ŸŸ$ &
null
ŸŸ' +
)
ŸŸ+ ,
{
⁄⁄ 

paramValue
€€ 
=
€€ 
default
€€ $
(
€€$ %
String
€€% +
)
€€+ ,
;
€€, -
return
‹‹ 
false
‹‹ 
;
‹‹ 
}
›› 

paramValue
ﬂﬂ 
=
ﬂﬂ 
HttpContext
ﬂﬂ $
.
ﬂﬂ$ %
Current
ﬂﬂ% ,
.
ﬂﬂ, -
Request
ﬂﬂ- 4
.
ﬂﬂ4 5
Params
ﬂﬂ5 ;
[
ﬂﬂ; <
	paramName
ﬂﬂ< E
]
ﬂﬂE F
;
ﬂﬂF G
return
‡‡ 
(
‡‡ 

paramValue
‡‡ 
!=
‡‡ !
null
‡‡" &
)
‡‡& '
;
‡‡' (
}
·· 	
public
ÁÁ 
static
ÁÁ 
bool
ÁÁ !
TryLoadRequestParam
ÁÁ .
(
ÁÁ. /
String
ÁÁ/ 5
	paramName
ÁÁ6 ?
,
ÁÁ? @
out
ÁÁA D
DateTime
ÁÁE M

paramValue
ÁÁN X
)
ÁÁX Y
{
ËË 	
if
ÈÈ 
(
ÈÈ 
String
ÈÈ 
.
ÈÈ 
IsNullOrEmpty
ÈÈ $
(
ÈÈ$ %
	paramName
ÈÈ% .
)
ÈÈ. /
)
ÈÈ/ 0
throw
ÈÈ1 6
new
ÈÈ7 :#
ArgumentNullException
ÈÈ; P
(
ÈÈP Q
$str
ÈÈQ \
)
ÈÈ\ ]
;
ÈÈ] ^
if
ÍÍ 
(
ÍÍ 
HttpContext
ÍÍ 
.
ÍÍ 
Current
ÍÍ #
==
ÍÍ$ &
null
ÍÍ' +
)
ÍÍ+ ,
{
ÎÎ 

paramValue
ÏÏ 
=
ÏÏ 
default
ÏÏ $
(
ÏÏ$ %
DateTime
ÏÏ% -
)
ÏÏ- .
;
ÏÏ. /
return
ÌÌ 
false
ÌÌ 
;
ÌÌ 
}
ÓÓ 
return
 
DateTime
 
.
 
TryParse
 $
(
$ %
HttpContext
% 0
.
0 1
Current
1 8
.
8 9
Request
9 @
.
@ A
Params
A G
[
G H
	paramName
H Q
]
Q R
,
R S
CultureInfo
ÒÒ% 0
.
ÒÒ0 1
InvariantCulture
ÒÒ1 A
,
ÒÒA B
DateTimeStyles
ÒÒC Q
.
ÒÒQ R
None
ÒÒR V
,
ÒÒV W
out
ÒÒX [

paramValue
ÒÒ\ f
)
ÒÒf g
;
ÒÒg h
}
ÚÚ 	
public
¯¯ 
static
¯¯ 
bool
¯¯ !
TryLoadRequestParam
¯¯ .
(
¯¯. /
String
¯¯/ 5
	paramName
¯¯6 ?
,
¯¯? @
out
¯¯A D
Guid
¯¯E I

paramValue
¯¯J T
)
¯¯T U
{
˘˘ 	
if
˙˙ 
(
˙˙ 
String
˙˙ 
.
˙˙ 
IsNullOrEmpty
˙˙ $
(
˙˙$ %
	paramName
˙˙% .
)
˙˙. /
)
˙˙/ 0
throw
˙˙1 6
new
˙˙7 :#
ArgumentNullException
˙˙; P
(
˙˙P Q
$str
˙˙Q \
)
˙˙\ ]
;
˙˙] ^
if
˚˚ 
(
˚˚ 
HttpContext
˚˚ 
.
˚˚ 
Current
˚˚ #
==
˚˚$ &
null
˚˚' +
)
˚˚+ ,
{
¸¸ 

paramValue
˝˝ 
=
˝˝ 
default
˝˝ $
(
˝˝$ %
Guid
˝˝% )
)
˝˝) *
;
˝˝* +
return
˛˛ 
false
˛˛ 
;
˛˛ 
}
ˇˇ 
if
ÅÅ 
(
ÅÅ 
String
ÅÅ 
.
ÅÅ 
IsNullOrEmpty
ÅÅ $
(
ÅÅ$ %
HttpContext
ÅÅ% 0
.
ÅÅ0 1
Current
ÅÅ1 8
.
ÅÅ8 9
Request
ÅÅ9 @
.
ÅÅ@ A
Params
ÅÅA G
[
ÅÅG H
	paramName
ÅÅH Q
]
ÅÅQ R
)
ÅÅR S
)
ÅÅS T
{
ÇÇ 

paramValue
ÉÉ 
=
ÉÉ 
default
ÉÉ $
(
ÉÉ$ %
Guid
ÉÉ% )
)
ÉÉ) *
;
ÉÉ* +
return
ÑÑ 
false
ÑÑ 
;
ÑÑ 
}
ÖÖ 
try
áá 
{
àà 

paramValue
ââ 
=
ââ 
new
ââ  
Guid
ââ! %
(
ââ% &
HttpContext
ââ& 1
.
ââ1 2
Current
ââ2 9
.
ââ9 :
Request
ââ: A
.
ââA B
Params
ââB H
[
ââH I
	paramName
ââI R
]
ââR S
)
ââS T
;
ââT U
return
ää 
true
ää 
;
ää 
}
ãã 
catch
åå 
(
åå 
FormatException
åå "
)
åå" #
{
çç 

paramValue
éé 
=
éé 
default
éé $
(
éé$ %
Guid
éé% )
)
éé) *
;
éé* +
return
èè 
false
èè 
;
èè 
}
êê 
}
ëë 	
public
óó 
static
óó 
bool
óó !
TryLoadRequestParam
óó .
<
óó. /
T
óó/ 0
>
óó0 1
(
óó1 2
string
óó2 8
	paramName
óó9 B
,
óóB C
out
óóD G
T
óóH I

ParamValue
óóJ T
)
óóT U
{
òò 	
if
ôô 
(
ôô 
String
ôô 
.
ôô 
IsNullOrEmpty
ôô $
(
ôô$ %
	paramName
ôô% .
)
ôô. /
)
ôô/ 0
throw
ôô1 6
new
ôô7 :#
ArgumentNullException
ôô; P
(
ôôP Q
$str
ôôQ \
)
ôô\ ]
;
ôô] ^
if
öö 
(
öö 
HttpContext
öö 
.
öö 
Current
öö #
==
öö$ &
null
öö' +
)
öö+ ,
{
õõ 

ParamValue
úú 
=
úú 
default
úú $
(
úú$ %
T
úú% &
)
úú& '
;
úú' (
return
ùù 
false
ùù 
;
ùù 
}
ûû 
string
†† 

paramValue
†† 
=
†† 
HttpContext
††  +
.
††+ ,
Current
††, 3
.
††3 4
Request
††4 ;
.
††; <
Params
††< B
[
††B C
	paramName
††C L
]
††L M
;
††M N
if
°° 
(
°° 

paramValue
°° 
==
°° 
null
°° "
)
°°" #
{
¢¢ 

ParamValue
££ 
=
££ 
default
££ $
(
££$ %
T
££% &
)
££& '
;
££' (
return
§§ 
false
§§ 
;
§§ 
}
•• 
try
ßß 
{
®® 

ParamValue
©© 
=
©© 
(
©© 
T
©© 
)
©©  
Convert
©©  '
.
©©' (

ChangeType
©©( 2
(
©©2 3

paramValue
©©3 =
,
©©= >
typeof
©©? E
(
©©E F
T
©©F G
)
©©G H
)
©©H I
;
©©I J
}
™™ 
catch
´´ 
(
´´ "
InvalidCastException
´´ '
)
´´' (
{
¨¨ 

ParamValue
≠≠ 
=
≠≠ 
default
≠≠ $
(
≠≠$ %
T
≠≠% &
)
≠≠& '
;
≠≠' (
return
ÆÆ 
false
ÆÆ 
;
ÆÆ 
}
ØØ 
return
±± 
true
±± 
;
±± 
}
≤≤ 	
public
¡¡ 
static
¡¡ 
string
¡¡ 

ResolveUrl
¡¡ '
(
¡¡' (
string
¡¡( .
originalUrl
¡¡/ :
)
¡¡: ;
{
¬¬ 	
if
√√ 
(
√√ 
string
√√ 
.
√√ 
IsNullOrEmpty
√√ $
(
√√$ %
originalUrl
√√% 0
)
√√0 1
)
√√1 2
return
ƒƒ 
originalUrl
ƒƒ "
;
ƒƒ" #
if
«« 
(
«« 
IsAbsolutePath
«« 
(
«« 
originalUrl
«« *
)
««* +
)
««+ ,
return
»» 
originalUrl
»» "
;
»»" #
if
ÀÀ 
(
ÀÀ 
!
ÀÀ 
originalUrl
ÀÀ 
.
ÀÀ 

StartsWith
ÀÀ '
(
ÀÀ' (
$str
ÀÀ( +
)
ÀÀ+ ,
)
ÀÀ, -
return
ÃÃ 
originalUrl
ÃÃ "
;
ÃÃ" #
int
—— #
queryStringStartIndex
—— %
=
——& '
originalUrl
——( 3
.
——3 4
IndexOf
——4 ;
(
——; <
$char
——< ?
)
——? @
;
——@ A
if
““ 
(
““ #
queryStringStartIndex
““ %
!=
““& (
-
““) *
$num
““* +
)
““+ ,
{
”” 
string
‘‘ 
queryString
‘‘ "
=
‘‘# $
originalUrl
‘‘% 0
.
‘‘0 1
	Substring
‘‘1 :
(
‘‘: ;#
queryStringStartIndex
‘‘; P
)
‘‘P Q
;
‘‘Q R
string
’’ 
baseUrl
’’ 
=
’’  
originalUrl
’’! ,
.
’’, -
	Substring
’’- 6
(
’’6 7
$num
’’7 8
,
’’8 9#
queryStringStartIndex
’’: O
)
’’O P
;
’’P Q
return
◊◊ 
string
◊◊ 
.
◊◊ 
Concat
◊◊ $
(
◊◊$ % 
VirtualPathUtility
ÿÿ &
.
ÿÿ& '

ToAbsolute
ÿÿ' 1
(
ÿÿ1 2
baseUrl
ÿÿ2 9
)
ÿÿ9 :
,
ÿÿ: ;
queryString
ŸŸ 
)
ŸŸ  
;
ŸŸ  !
}
⁄⁄ 
else
€€ 
{
‹‹ 
return
››  
VirtualPathUtility
›› )
.
››) *

ToAbsolute
››* 4
(
››4 5
originalUrl
››5 @
)
››@ A
;
››A B
}
ﬁﬁ 
}
‡‡ 	
public
ÈÈ 
static
ÈÈ 
string
ÈÈ 
ResolveServerUrl
ÈÈ -
(
ÈÈ- .
string
ÈÈ. 4
	serverUrl
ÈÈ5 >
,
ÈÈ> ?
bool
ÈÈ@ D

forceHttps
ÈÈE O
)
ÈÈO P
{
ÍÍ 	
if
ÎÎ 
(
ÎÎ 
string
ÎÎ 
.
ÎÎ 
IsNullOrEmpty
ÎÎ $
(
ÎÎ$ %
	serverUrl
ÎÎ% .
)
ÎÎ. /
)
ÎÎ/ 0
return
ÏÏ 
	serverUrl
ÏÏ  
;
ÏÏ  !
if
ÔÔ 
(
ÔÔ 
IsAbsolutePath
ÔÔ 
(
ÔÔ 
	serverUrl
ÔÔ (
)
ÔÔ( )
)
ÔÔ) *
return
 
	serverUrl
  
;
  !
string
ÚÚ 
newServerUrl
ÚÚ 
=
ÚÚ  !

ResolveUrl
ÚÚ" ,
(
ÚÚ, -
	serverUrl
ÚÚ- 6
)
ÚÚ6 7
;
ÚÚ7 8
Uri
ÛÛ 
result
ÛÛ 
=
ÛÛ 
new
ÛÛ 
Uri
ÛÛ  
(
ÛÛ  !
HttpContext
ÛÛ! ,
.
ÛÛ, -
Current
ÛÛ- 4
.
ÛÛ4 5
Request
ÛÛ5 <
.
ÛÛ< =
Url
ÛÛ= @
,
ÛÛ@ A
newServerUrl
ÛÛB N
)
ÛÛN O
;
ÛÛO P
if
ıı 
(
ıı 
!
ıı 

forceHttps
ıı 
)
ıı 
return
ˆˆ 
result
ˆˆ 
.
ˆˆ 
ToString
ˆˆ &
(
ˆˆ& '
)
ˆˆ' (
;
ˆˆ( )
else
˜˜ 
return
¯¯ 
ForceUriToHttps
¯¯ &
(
¯¯& '
result
¯¯' -
)
¯¯- .
.
¯¯. /
ToString
¯¯/ 7
(
¯¯7 8
)
¯¯8 9
;
¯¯9 :
}
˙˙ 	
public
ÖÖ 
static
ÖÖ 
string
ÖÖ 
ResolveServerUrl
ÖÖ -
(
ÖÖ- .
string
ÖÖ. 4
	serverUrl
ÖÖ5 >
)
ÖÖ> ?
{
ÜÜ 	
bool
áá 

forceHttps
áá 
=
áá 
	WebHelper
áá 
.
áá 
IsSecureRequest
áá .
(
áá. /
)
áá/ 0
;
áá0 1
return
àà	 
ResolveServerUrl
àà  
(
àà  !
	serverUrl
àà! *
,
àà* +

forceHttps
àà, 6
)
àà6 7
;
àà7 8
}
ââ 	
private
éé 	
static
éé
 
Uri
éé 
ForceUriToHttps
éé $
(
éé$ %
Uri
éé% (
uri
éé) ,
)
éé, -
{
èè 	

UriBuilder
ëë 
builder
ëë 
=
ëë  
new
ëë! $

UriBuilder
ëë% /
(
ëë/ 0
uri
ëë0 3
)
ëë3 4
;
ëë4 5
builder
íí 
.
íí 
Scheme
íí 
=
íí 
Uri
íí  
.
íí  !
UriSchemeHttps
íí! /
;
íí/ 0
builder
ìì 
.
ìì 
Port
ìì 
=
ìì 
$num
ìì 
;
ìì 
return
ïï 
builder
ïï 
.
ïï 
Uri
ïï 
;
ïï 
}
ññ 	
private
òò 
static
òò 
bool
òò 
IsAbsolutePath
òò *
(
òò* +
string
òò+ 1
originalUrl
òò2 =
)
òò= >
{
ôô 	
int
õõ 
IndexOfSlashes
õõ 
=
õõ  
originalUrl
õõ! ,
.
õõ, -
IndexOf
õõ- 4
(
õõ4 5
$str
õõ5 :
)
õõ: ;
;
õõ; <
int
úú "
IndexOfQuestionMarks
úú $
=
úú% &
originalUrl
úú' 2
.
úú2 3
IndexOf
úú3 :
(
úú: ;
$str
úú; >
)
úú> ?
;
úú? @
if
ûû 
(
ûû 
IndexOfSlashes
ûû 
>
ûû  
-
ûû! "
$num
ûû" #
&&
ûû$ &
(
üü "
IndexOfQuestionMarks
üü &
<
üü' (
$num
üü) *
||
üü+ -
(
†† "
IndexOfQuestionMarks
†† '
>
††( )
-
††* +
$num
††+ ,
&&
††- /"
IndexOfQuestionMarks
††0 D
>
††E F
IndexOfSlashes
††G U
)
††U V
)
°° 
)
¢¢ 
return
££ 
true
££ 
;
££ 
return
•• 
false
•• 
;
•• 
}
¶¶ 	
}
®® 
}©© ¯ˇ
lD:\Projects\DefensePoint\whitesource-testcases-csharp\CWE79\mojoportal\mojoPortal.Web.Framework\XmlHelper.cs
	namespace 	

mojoPortal
 
. 
Web 
. 
	Framework "
{ 
public 
static 
class 
	XmlHelper 
{ 
private 	
static
 
readonly 
ILog 
log "
=# $

LogManager% /
./ 0
	GetLogger0 9
(9 :
typeof: @
(@ A
	XmlHelperA J
)J K
)K L
;L M
public 
static	 
void 
AddNode 
( 
XmlDocument (
xmlDoc) /
,/ 0
string1 7
name8 <
,< =
string> D
contentE L
)L M
{ 

XmlElement 
elem 
= 
xmlDoc 
. 
CreateElement )
() *
name* .
). /
;/ 0
XmlText 

text 
= 
xmlDoc 
. 
CreateTextNode '
(' (
content( /
)/ 0
;0 1
xmlDoc 	
.	 

DocumentElement
 
. 
AppendChild %
(% &
elem& *
)* +
;+ ,
xmlDoc 	
.	 

DocumentElement
 
. 
	LastChild #
.# $
AppendChild$ /
(/ 0
text0 4
)4 5
;5 6
} 
public$$ 
static$$	 
string$$ 
TransformXML$$ #
($$# $
string$$$ *
xmlUrl$$+ 1
,$$1 2
string$$3 9
xslUrl$$: @
)$$@ A
{%% 
if&& 
(&& 
string&& 
.&& 
IsNullOrEmpty&& 
(&& 
xmlUrl&& "
)&&" #
)&&# $
{&&% &
throw&&' ,
new&&- 0
ArgumentException&&1 B
(&&B C
$str&&C W
)&&W X
;&&X Y
}&&Z [
if'' 
('' 
string'' 
.'' 
IsNullOrEmpty'' 
('' 
xslUrl'' "
)''" #
)''# $
{''% &
throw''' ,
new''- 0
ArgumentException''1 B
(''B C
$str''C W
)''W X
;''X Y
}''Z [
StringWriter)) 
stringWriter)) 
=)) 
new)) "
StringWriter))# /
())/ 0
)))0 1
;))1 2
try** 
{++ 
XmlTextReader,, 
	xmlReader,, 
=,, 
new,, !
XmlTextReader,," /
(,,/ 0
xmlUrl,,0 6
),,6 7
;,,7 8 
XslCompiledTransform-- 
xslTransform-- %
=--& '
new--( + 
XslCompiledTransform--, @
(--@ A
)--A B
;--B C
xslTransform.. 
... 
Load.. 
(.. 
xslUrl.. 
).. 
;.. 
XPathDocument00 
xPathDocument00 
=00  !
new00" %
XPathDocument00& 3
(003 4
	xmlReader004 =
)00= >
;00> ?
xslTransform22 
.22 
	Transform22 
(22 
xPathDocument22 (
,22( )
null22* .
,22. /
stringWriter220 <
)22< =
;22= >
return33 

stringWriter33 
.33 
ToString33  
(33  !
)33! "
;33" #
}44 
catch55 
(55	 
 
XsltCompileException55
 
ex55 !
)55! "
{66 
log77 
.77 
Info77 
(77 
$str77 0
+771 2
xmlUrl773 9
+77: ;
$str77< L
+77M N
xslUrl77O U
,77U V
ex77W Y
)77Y Z
;77Z [
}88 
catch99 
(99	 

System99
 
.99 
Security99 
.99 
SecurityException99 +
ex99, .
)99. /
{:: 
log;; 
.;; 
Info;; 
(;; 
$str;; 0
+;;1 2
xmlUrl;;3 9
+;;: ;
$str;;< L
+;;M N
xslUrl;;O U
,;;U V
ex;;W Y
);;Y Z
;;;Z [
}<< 
return>> 	
string>>
 
.>> 
Empty>> 
;>> 
}@@ 
publicEE 
staticEE	 
stringEE 
AttrEE 
(EE 
thisEE  
XElementEE! )
elEE* ,
,EE, -
stringEE. 4
nameEE5 9
)EE9 :
{FF 
varGG 
attrGG 
=GG 
elGG 
.GG 
	AttributeGG 
(GG 
nameGG 
)GG  
;GG  !
returnHH 	
attrHH
 
==HH 
nullHH 
?HH 
nullHH 
:HH 
attrHH  $
.HH$ %
ValueHH% *
;HH* +
}II 
publicKK 
staticKK	 
XElementKK 
AttrKK 
<KK 
TKK 
>KK  
(KK  !
thisKK! %
XElementKK& .
elKK/ 1
,KK1 2
stringKK3 9
nameKK: >
,KK> ?
TKK@ A
valueKKB G
)KKG H
{LL 
elMM 
.MM 
SetAttributeValueMM 
(MM 
nameMM 
,MM 
valueMM #
)MM# $
;MM$ %
returnNN 	
elNN
 
;NN 
}OO 
publicQQ 
staticQQ	 
XElementQQ 
FromAttrQQ !
<QQ! "
TTargetQQ" )
,QQ) *
	TPropertyQQ+ 4
>QQ4 5
(QQ5 6
thisQQ6 :
XElementQQ; C
elQQD F
,QQF G
TTargetQQH O
targetQQP V
,QQV W

ExpressionRR 
<RR 
FuncRR 
<RR 
TTargetRR &
,RR& '
	TPropertyRR( 1
>RR1 2
>RR2 3
targetExpressionRR4 D
)RRD E
{SS 
varTT 
memberExpressionTT 
=TT 
targetExpressionTT *
.TT* +
BodyTT+ /
asTT0 2
MemberExpressionTT3 C
;TTC D
ifUU 
(UU 
memberExpressionUU 
==UU 
nullUU 
)UU  
throwUU! &
newUU' *%
InvalidOperationExceptionUU+ D
(UUD E
$strUUE m
)UUm n
;UUn o
varVV 
propertyInfoVV 
=VV 
memberExpressionVV &
.VV& '
MemberVV' -
asVV. 0
PropertyInfoVV1 =
;VV= >
ifWW 
(WW 
propertyInfoWW 
==WW 
nullWW 
)WW 
throwWW "
newWW# &%
InvalidOperationExceptionWW' @
(WW@ A
$strWWA d
)WWd e
;WWe f
varXX 
nameXX 
=XX 
propertyInfoXX 
.XX 
NameXX 
;XX  
varYY 
attrYY 
=YY 
elYY 
.YY 
	AttributeYY 
(YY 
nameYY 
)YY  
;YY  !
ifZZ 
(ZZ 
attrZZ 
==ZZ 
nullZZ 
)ZZ 
returnZZ 
elZZ 
;ZZ 
if[[ 
([[ 
typeof[[ 
([[ 
	TProperty[[ 
)[[ 
==[[ 
typeof[[ "
([[" #
string[[# )
)[[) *
)[[* +
{\\ 
propertyInfo]] 
.]] 
SetValue]] 
(]] 
target]]  
,]]  !
(]]" #
string]]# )
)]]) *
attr]]* .
,]]. /
null]]0 4
)]]4 5
;]]5 6
return^^ 

el^^ 
;^^ 
}__ 
if`` 
(`` 
attr`` 
.`` 
Value`` 
==`` 
$str`` 
)`` 
{aa 
propertyInfobb 
.bb 
SetValuebb 
(bb 
targetbb  
,bb  !
nullbb" &
,bb& '
nullbb( ,
)bb, -
;bb- .
}cc 
elsedd 
ifdd 

(dd 
typeofdd 
(dd 
	TPropertydd 
)dd 
==dd  
typeofdd! '
(dd' (
intdd( +
)dd+ ,
)dd, -
{ee 
propertyInfoff 
.ff 
SetValueff 
(ff 
targetff  
,ff  !
(ff" #
intff# &
)ff& '
attrff' +
,ff+ ,
nullff- 1
)ff1 2
;ff2 3
}gg 
elsehh 
ifhh 

(hh 
typeofhh 
(hh 
	TPropertyhh 
)hh 
==hh  
typeofhh! '
(hh' (
boolhh( ,
)hh, -
)hh- .
{ii 
propertyInfojj 
.jj 
SetValuejj 
(jj 
targetjj  
,jj  !
(jj" #
booljj# '
)jj' (
attrjj( ,
,jj, -
nulljj. 2
)jj2 3
;jj3 4
}kk 
elsell 
ifll 

(ll 
typeofll 
(ll 
	TPropertyll 
)ll 
==ll  
typeofll! '
(ll' (
DateTimell( 0
)ll0 1
)ll1 2
{mm 
propertyInfonn 
.nn 
SetValuenn 
(nn 
targetnn  
,nn  !
(nn" #
DateTimenn# +
)nn+ ,
attrnn, 0
,nn0 1
nullnn2 6
)nn6 7
;nn7 8
}oo 
elsepp 
ifpp 

(pp 
typeofpp 
(pp 
	TPropertypp 
)pp 
==pp  
typeofpp! '
(pp' (
doublepp( .
)pp. /
)pp/ 0
{qq 
propertyInforr 
.rr 
SetValuerr 
(rr 
targetrr  
,rr  !
(rr" #
doublerr# )
)rr) *
attrrr* .
,rr. /
nullrr0 4
)rr4 5
;rr5 6
}ss 
elsett 
iftt 

(tt 
typeoftt 
(tt 
	TPropertytt 
)tt 
==tt  
typeoftt! '
(tt' (
floattt( -
)tt- .
)tt. /
{uu 
propertyInfovv 
.vv 
SetValuevv 
(vv 
targetvv  
,vv  !
(vv" #
floatvv# (
)vv( )
attrvv) -
,vv- .
nullvv/ 3
)vv3 4
;vv4 5
}ww 
elsexx 
ifxx 

(xx 
typeofxx 
(xx 
	TPropertyxx 
)xx 
==xx  
typeofxx! '
(xx' (
decimalxx( /
)xx/ 0
)xx0 1
{yy 
propertyInfozz 
.zz 
SetValuezz 
(zz 
targetzz  
,zz  !
(zz" #
decimalzz# *
)zz* +
attrzz+ /
,zz/ 0
nullzz1 5
)zz5 6
;zz6 7
}{{ 
else|| 
if|| 

(|| 
typeof|| 
(|| 
	TProperty|| 
)|| 
==||  
typeof||! '
(||' (
int||( +
?||+ ,
)||, -
)||- .
{}} 
propertyInfo~~ 
.~~ 
SetValue~~ 
(~~ 
target~~  
,~~  !
(~~" #
int~~# &
?~~& '
)~~' (
attr~~( ,
,~~, -
null~~. 2
)~~2 3
;~~3 4
} 
else
ÄÄ 
if
ÄÄ 

(
ÄÄ 
typeof
ÄÄ 
(
ÄÄ 
	TProperty
ÄÄ 
)
ÄÄ 
==
ÄÄ  
typeof
ÄÄ! '
(
ÄÄ' (
bool
ÄÄ( ,
?
ÄÄ, -
)
ÄÄ- .
)
ÄÄ. /
{
ÅÅ 
propertyInfo
ÇÇ 
.
ÇÇ 
SetValue
ÇÇ 
(
ÇÇ 
target
ÇÇ  
,
ÇÇ  !
(
ÇÇ" #
bool
ÇÇ# '
?
ÇÇ' (
)
ÇÇ( )
attr
ÇÇ) -
,
ÇÇ- .
null
ÇÇ/ 3
)
ÇÇ3 4
;
ÇÇ4 5
}
ÉÉ 
else
ÑÑ 
if
ÑÑ 

(
ÑÑ 
typeof
ÑÑ 
(
ÑÑ 
	TProperty
ÑÑ 
)
ÑÑ 
==
ÑÑ  
typeof
ÑÑ! '
(
ÑÑ' (
DateTime
ÑÑ( 0
?
ÑÑ0 1
)
ÑÑ1 2
)
ÑÑ2 3
{
ÖÖ 
propertyInfo
ÜÜ 
.
ÜÜ 
SetValue
ÜÜ 
(
ÜÜ 
target
ÜÜ  
,
ÜÜ  !
(
ÜÜ" #
DateTime
ÜÜ# +
?
ÜÜ+ ,
)
ÜÜ, -
attr
ÜÜ- 1
,
ÜÜ1 2
null
ÜÜ3 7
)
ÜÜ7 8
;
ÜÜ8 9
}
áá 
else
àà 
if
àà 

(
àà 
typeof
àà 
(
àà 
	TProperty
àà 
)
àà 
==
àà  
typeof
àà! '
(
àà' (
double
àà( .
?
àà. /
)
àà/ 0
)
àà0 1
{
ââ 
propertyInfo
ää 
.
ää 
SetValue
ää 
(
ää 
target
ää  
,
ää  !
(
ää" #
double
ää# )
?
ää) *
)
ää* +
attr
ää+ /
,
ää/ 0
null
ää1 5
)
ää5 6
;
ää6 7
}
ãã 
else
åå 
if
åå 

(
åå 
typeof
åå 
(
åå 
	TProperty
åå 
)
åå 
==
åå  
typeof
åå! '
(
åå' (
float
åå( -
?
åå- .
)
åå. /
)
åå/ 0
{
çç 
propertyInfo
éé 
.
éé 
SetValue
éé 
(
éé 
target
éé  
,
éé  !
(
éé" #
float
éé# (
?
éé( )
)
éé) *
attr
éé* .
,
éé. /
null
éé0 4
)
éé4 5
;
éé5 6
}
èè 
else
êê 
if
êê 

(
êê 
typeof
êê 
(
êê 
	TProperty
êê 
)
êê 
==
êê  
typeof
êê! '
(
êê' (
decimal
êê( /
?
êê/ 0
)
êê0 1
)
êê1 2
{
ëë 
propertyInfo
íí 
.
íí 
SetValue
íí 
(
íí 
target
íí  
,
íí  !
(
íí" #
decimal
íí# *
?
íí* +
)
íí+ ,
attr
íí, 0
,
íí0 1
null
íí2 6
)
íí6 7
;
íí7 8
}
ìì 
return
îî 	
el
îî
 
;
îî 
}
ïï 
public
óó 
static
óó	 
XElement
óó 
ToAttr
óó 
<
óó  
TTarget
óó  '
,
óó' (
	TProperty
óó) 2
>
óó2 3
(
óó3 4
this
óó4 8
XElement
óó9 A
el
óóB D
,
óóD E
TTarget
óóF M
target
óóN T
,
óóT U

Expression
òò 
<
òò 
Func
òò 
<
òò  
TTarget
òò  '
,
òò' (
	TProperty
òò) 2
>
òò2 3
>
òò3 4
targetExpression
òò5 E
)
òòE F
{
ôô 
var
öö 
memberExpression
öö 
=
öö 
targetExpression
öö *
.
öö* +
Body
öö+ /
as
öö0 2
MemberExpression
öö3 C
;
ööC D
if
õõ 
(
õõ 
memberExpression
õõ 
==
õõ 
null
õõ 
)
õõ  
throw
õõ! &
new
õõ' *'
InvalidOperationException
õõ+ D
(
õõD E
$str
õõE m
)
õõm n
;
õõn o
var
úú 
propertyInfo
úú 
=
úú 
memberExpression
úú &
.
úú& '
Member
úú' -
as
úú. 0
PropertyInfo
úú1 =
;
úú= >
if
ùù 
(
ùù 
propertyInfo
ùù 
==
ùù 
null
ùù 
)
ùù 
throw
ùù "
new
ùù# &'
InvalidOperationException
ùù' @
(
ùù@ A
$str
ùùA d
)
ùùd e
;
ùùe f
var
ûû 
name
ûû 
=
ûû 
propertyInfo
ûû 
.
ûû 
Name
ûû 
;
ûû  
var
üü 
val
üü 

=
üü 
propertyInfo
üü 
.
üü 
GetValue
üü "
(
üü" #
target
üü# )
,
üü) *
null
üü+ /
)
üü/ 0
;
üü0 1
if
†† 
(
†† 
typeof
†† 
(
†† 
	TProperty
†† 
)
†† 
==
†† 
typeof
†† "
(
††" #
string
††# )
)
††) *
)
††* +
{
°° 
el
¢¢ 
.
¢¢ 
Attr
¢¢ 
(
¢¢ 
name
¢¢ 
,
¢¢ 
(
¢¢ 
string
¢¢ 
)
¢¢ 
val
¢¢ 
)
¢¢ 
;
¢¢ 
return
££ 

el
££ 
;
££ 
}
§§ 
if
•• 
(
•• 
val
•• 

==
•• 
null
•• 
)
•• 
{
¶¶ 
el
ßß 
.
ßß 
Attr
ßß 
(
ßß 
name
ßß 
,
ßß 
$str
ßß 
)
ßß 
;
ßß 
}
®® 
else
©© 
if
©© 

(
©© 
typeof
©© 
(
©© 
	TProperty
©© 
)
©© 
==
©©  
typeof
©©! '
(
©©' (
int
©©( +
)
©©+ ,
)
©©, -
{
™™ 
el
´´ 
.
´´ 
Attr
´´ 
(
´´ 
name
´´ 
,
´´ 
(
´´ 
int
´´ 
)
´´ 
val
´´ 
)
´´ 
;
´´ 
}
¨¨ 
else
≠≠ 
if
≠≠ 

(
≠≠ 
typeof
≠≠ 
(
≠≠ 
	TProperty
≠≠ 
)
≠≠ 
==
≠≠  
typeof
≠≠! '
(
≠≠' (
bool
≠≠( ,
)
≠≠, -
)
≠≠- .
{
ÆÆ 
el
ØØ 
.
ØØ 
Attr
ØØ 
(
ØØ 
name
ØØ 
,
ØØ 
(
ØØ 
bool
ØØ 
)
ØØ 
val
ØØ 
)
ØØ 
;
ØØ 
}
∞∞ 
else
±± 
if
±± 

(
±± 
typeof
±± 
(
±± 
	TProperty
±± 
)
±± 
==
±±  
typeof
±±! '
(
±±' (
DateTime
±±( 0
)
±±0 1
)
±±1 2
{
≤≤ 
el
≥≥ 
.
≥≥ 
Attr
≥≥ 
(
≥≥ 
name
≥≥ 
,
≥≥ 
(
≥≥ 
DateTime
≥≥ 
)
≥≥ 
val
≥≥ 
)
≥≥  
;
≥≥  !
}
¥¥ 
else
µµ 
if
µµ 

(
µµ 
typeof
µµ 
(
µµ 
	TProperty
µµ 
)
µµ 
==
µµ  
typeof
µµ! '
(
µµ' (
double
µµ( .
)
µµ. /
)
µµ/ 0
{
∂∂ 
el
∑∑ 
.
∑∑ 
Attr
∑∑ 
(
∑∑ 
name
∑∑ 
,
∑∑ 
(
∑∑ 
double
∑∑ 
)
∑∑ 
val
∑∑ 
)
∑∑ 
;
∑∑ 
}
∏∏ 
else
ππ 
if
ππ 

(
ππ 
typeof
ππ 
(
ππ 
	TProperty
ππ 
)
ππ 
==
ππ  
typeof
ππ! '
(
ππ' (
float
ππ( -
)
ππ- .
)
ππ. /
{
∫∫ 
el
ªª 
.
ªª 
Attr
ªª 
(
ªª 
name
ªª 
,
ªª 
(
ªª 
float
ªª 
)
ªª 
val
ªª 
)
ªª 
;
ªª 
}
ºº 
else
ΩΩ 
if
ΩΩ 

(
ΩΩ 
typeof
ΩΩ 
(
ΩΩ 
	TProperty
ΩΩ 
)
ΩΩ 
==
ΩΩ  
typeof
ΩΩ! '
(
ΩΩ' (
decimal
ΩΩ( /
)
ΩΩ/ 0
)
ΩΩ0 1
{
ææ 
el
øø 
.
øø 
Attr
øø 
(
øø 
name
øø 
,
øø 
(
øø 
decimal
øø 
)
øø 
val
øø 
)
øø 
;
øø  
}
¿¿ 
else
¡¡ 
if
¡¡ 

(
¡¡ 
typeof
¡¡ 
(
¡¡ 
	TProperty
¡¡ 
)
¡¡ 
==
¡¡  
typeof
¡¡! '
(
¡¡' (
int
¡¡( +
?
¡¡+ ,
)
¡¡, -
)
¡¡- .
{
¬¬ 
el
√√ 
.
√√ 
Attr
√√ 
(
√√ 
name
√√ 
,
√√ 
(
√√ 
int
√√ 
?
√√ 
)
√√ 
val
√√ 
)
√√ 
;
√√ 
}
ƒƒ 
else
≈≈ 
if
≈≈ 

(
≈≈ 
typeof
≈≈ 
(
≈≈ 
	TProperty
≈≈ 
)
≈≈ 
==
≈≈  
typeof
≈≈! '
(
≈≈' (
bool
≈≈( ,
?
≈≈, -
)
≈≈- .
)
≈≈. /
{
∆∆ 
el
«« 
.
«« 
Attr
«« 
(
«« 
name
«« 
,
«« 
(
«« 
bool
«« 
?
«« 
)
«« 
val
«« 
)
«« 
;
«« 
}
»» 
else
…… 
if
…… 

(
…… 
typeof
…… 
(
…… 
	TProperty
…… 
)
…… 
==
……  
typeof
……! '
(
……' (
DateTime
……( 0
?
……0 1
)
……1 2
)
……2 3
{
   
el
ÀÀ 
.
ÀÀ 
Attr
ÀÀ 
(
ÀÀ 
name
ÀÀ 
,
ÀÀ 
(
ÀÀ 
DateTime
ÀÀ 
?
ÀÀ 
)
ÀÀ 
val
ÀÀ  
)
ÀÀ  !
;
ÀÀ! "
}
ÃÃ 
else
ÕÕ 
if
ÕÕ 

(
ÕÕ 
typeof
ÕÕ 
(
ÕÕ 
	TProperty
ÕÕ 
)
ÕÕ 
==
ÕÕ  
typeof
ÕÕ! '
(
ÕÕ' (
double
ÕÕ( .
?
ÕÕ. /
)
ÕÕ/ 0
)
ÕÕ0 1
{
ŒŒ 
el
œœ 
.
œœ 
Attr
œœ 
(
œœ 
name
œœ 
,
œœ 
(
œœ 
double
œœ 
?
œœ 
)
œœ 
val
œœ 
)
œœ 
;
œœ  
}
–– 
else
—— 
if
—— 

(
—— 
typeof
—— 
(
—— 
	TProperty
—— 
)
—— 
==
——  
typeof
——! '
(
——' (
float
——( -
?
——- .
)
——. /
)
——/ 0
{
““ 
el
”” 
.
”” 
Attr
”” 
(
”” 
name
”” 
,
”” 
(
”” 
float
”” 
?
”” 
)
”” 
val
”” 
)
”” 
;
”” 
}
‘‘ 
else
’’ 
if
’’ 

(
’’ 
typeof
’’ 
(
’’ 
	TProperty
’’ 
)
’’ 
==
’’  
typeof
’’! '
(
’’' (
decimal
’’( /
?
’’/ 0
)
’’0 1
)
’’1 2
{
÷÷ 
el
◊◊ 
.
◊◊ 
Attr
◊◊ 
(
◊◊ 
name
◊◊ 
,
◊◊ 
(
◊◊ 
decimal
◊◊ 
?
◊◊ 
)
◊◊ 
val
◊◊ 
)
◊◊  
;
◊◊  !
}
ÿÿ 
return
ŸŸ 	
el
ŸŸ
 
;
ŸŸ 
}
⁄⁄ 
public
‹‹ 
static
‹‹	 !
XElementWithContext
‹‹ #
<
‹‹# $
TContext
‹‹$ ,
>
‹‹, -
With
‹‹. 2
<
‹‹2 3
TContext
‹‹3 ;
>
‹‹; <
(
‹‹< =
this
‹‹= A
XElement
‹‹B J
el
‹‹K M
,
‹‹M N
TContext
‹‹O W
context
‹‹X _
)
‹‹_ `
{
›› 
return
ﬁﬁ 	
new
ﬁﬁ
 !
XElementWithContext
ﬁﬁ !
<
ﬁﬁ! "
TContext
ﬁﬁ" *
>
ﬁﬁ* +
(
ﬁﬁ+ ,
el
ﬁﬁ, .
,
ﬁﬁ. /
context
ﬁﬁ0 7
)
ﬁﬁ7 8
;
ﬁﬁ8 9
}
ﬂﬂ 
public
·· 
class
··	 !
XElementWithContext
·· "
<
··" #
TContext
··# +
>
··+ ,
{
‚‚ 
public
„„ 	!
XElementWithContext
„„
 
(
„„ 
XElement
„„ &
element
„„' .
,
„„. /
TContext
„„0 8
context
„„9 @
)
„„@ A
{
‰‰ 
Element
ÂÂ 
=
ÂÂ 
element
ÂÂ 
;
ÂÂ 
Context
ÊÊ 
=
ÊÊ 
context
ÊÊ 
;
ÊÊ 
}
ÁÁ 
public
ÈÈ 	
XElement
ÈÈ
 
Element
ÈÈ 
{
ÈÈ 
get
ÈÈ  
;
ÈÈ  !
private
ÈÈ" )
set
ÈÈ* -
;
ÈÈ- .
}
ÈÈ/ 0
public
ÍÍ 	
TContext
ÍÍ
 
Context
ÍÍ 
{
ÍÍ 
get
ÍÍ  
;
ÍÍ  !
private
ÍÍ" )
set
ÍÍ* -
;
ÍÍ- .
}
ÍÍ/ 0
public
ÏÏ 	!
XElementWithContext
ÏÏ
 
<
ÏÏ 
TNewContext
ÏÏ )
>
ÏÏ) *
With
ÏÏ+ /
<
ÏÏ/ 0
TNewContext
ÏÏ0 ;
>
ÏÏ; <
(
ÏÏ< =
TNewContext
ÏÏ= H
context
ÏÏI P
)
ÏÏP Q
{
ÌÌ 
return
ÓÓ 

new
ÓÓ !
XElementWithContext
ÓÓ "
<
ÓÓ" #
TNewContext
ÓÓ# .
>
ÓÓ. /
(
ÓÓ/ 0
Element
ÓÓ0 7
,
ÓÓ7 8
context
ÓÓ9 @
)
ÓÓ@ A
;
ÓÓA B
}
ÔÔ 
public
ÒÒ 	!
XElementWithContext
ÒÒ
 
<
ÒÒ 
TContext
ÒÒ &
>
ÒÒ& '
ToAttr
ÒÒ( .
<
ÒÒ. /
	TProperty
ÒÒ/ 8
>
ÒÒ8 9
(
ÒÒ9 :

Expression
ÚÚ 
<
ÚÚ 
Func
ÚÚ 
<
ÚÚ 
TContext
ÚÚ 
,
ÚÚ 
	TProperty
ÚÚ '
>
ÚÚ' (
>
ÚÚ( )
targetExpression
ÚÚ* :
)
ÚÚ: ;
{
ÛÛ 
Element
ÙÙ 
.
ÙÙ 
ToAttr
ÙÙ 
(
ÙÙ 
Context
ÙÙ 
,
ÙÙ 
targetExpression
ÙÙ ,
)
ÙÙ, -
;
ÙÙ- .
return
ıı 

this
ıı 
;
ıı 
}
ˆˆ 
public
¯¯ 	!
XElementWithContext
¯¯
 
<
¯¯ 
TContext
¯¯ &
>
¯¯& '
FromAttr
¯¯( 0
<
¯¯0 1
	TProperty
¯¯1 :
>
¯¯: ;
(
¯¯; <

Expression
˘˘ 
<
˘˘ 
Func
˘˘ 
<
˘˘ 
TContext
˘˘ 
,
˘˘ 
	TProperty
˘˘ '
>
˘˘' (
>
˘˘( )
targetExpression
˘˘* :
)
˘˘: ;
{
˙˙ 
Element
˚˚ 
.
˚˚ 
FromAttr
˚˚ 
(
˚˚ 
Context
˚˚ 
,
˚˚ 
targetExpression
˚˚ .
)
˚˚. /
;
˚˚/ 0
return
¸¸ 

this
¸¸ 
;
¸¸ 
}
˝˝ 
}
˛˛ 
public
ˇˇ 
static
ˇˇ	 
StringBuilder
ˇˇ -
GetKeyValuePairsAsStringBuilder
ˇˇ =
(
ˇˇ= >
XmlNodeList
ˇˇ> I
nodes
ˇˇJ O
)
ˇˇO P
{
ÄÄ 
StringBuilder
ÅÅ 
sb
ÅÅ 
=
ÅÅ 
new
ÅÅ 
StringBuilder
ÅÅ '
(
ÅÅ' (
)
ÅÅ( )
;
ÅÅ) *
foreach
ÇÇ 

(
ÇÇ 
XmlNode
ÇÇ 
node
ÇÇ 
in
ÇÇ 
nodes
ÇÇ !
)
ÇÇ! "
{
ÉÉ $
XmlAttributeCollection
ÑÑ 
attribs
ÑÑ "
=
ÑÑ# $
node
ÑÑ% )
.
ÑÑ) *

Attributes
ÑÑ* 4
;
ÑÑ4 5
if
ÖÖ 
(
ÖÖ 
attribs
ÖÖ 
[
ÖÖ 
$str
ÖÖ 
]
ÖÖ 
!=
ÖÖ 
null
ÖÖ 
)
ÖÖ  
{
ÜÜ 
if
áá 
(
áá 	
!
áá	 

String
áá
 
.
áá  
IsNullOrWhiteSpace
áá #
(
áá# $
attribs
áá$ +
[
áá+ ,
$str
áá, 2
]
áá2 3
.
áá3 4
Value
áá4 9
)
áá9 :
)
áá: ;
{
àà 
string
ââ 
opValue
ââ 
=
ââ 
$str
ââ 
;
ââ 
if
ää 
(
ää	 

attribs
ää
 
[
ää 
$str
ää 
]
ää 
!=
ää 
null
ää "
&&
ää# %
!
ää& '
String
ää' -
.
ää- . 
IsNullOrWhiteSpace
ää. @
(
ää@ A
attribs
ääA H
[
ääH I
$str
ääI P
]
ääP Q
.
ääQ R
Value
ääR W
)
ääW X
)
ääX Y
{
ãã 
opValue
åå 
=
åå 
attribs
åå 
[
åå 
$str
åå  
]
åå  !
.
åå! "
Value
åå" '
;
åå' (
}
çç 
string
éé 
option
éé 
=
éé 
attribs
éé 
[
éé 
$str
éé $
]
éé$ %
.
éé% &
Value
éé& +
+
éé, -
$str
éé. 1
+
éé2 3
opValue
éé4 ;
;
éé; <
sb
èè 
.
èè 	
Append
èè	 
(
èè 
option
èè 
+
èè 
$str
èè 
)
èè 
;
èè 
}
êê 
}
ëë 
}
íí 
return
îî 	
sb
îî
 
;
îî 
}
ïï 
public
óó 
static
óó	 

Dictionary
óó 
<
óó 
string
óó !
,
óó! "
string
óó# )
>
óó) *
GetKeyValuePairs
óó+ ;
(
óó; <
XmlNodeList
óó< G
nodes
óóH M
)
óóM N
{
òò 

Dictionary
ôô 
<
ôô 
string
ôô 
,
ôô 
string
ôô 
>
ôô 
dic
ôô !
=
ôô" #
new
ôô$ '

Dictionary
ôô( 2
<
ôô2 3
string
ôô3 9
,
ôô9 :
string
ôô; A
>
ôôA B
(
ôôB C
)
ôôC D
;
ôôD E
foreach
õõ 

(
õõ 
XmlNode
õõ 
node
õõ 
in
õõ 
nodes
õõ !
)
õõ! "
{
úú $
XmlAttributeCollection
ùù 
attribs
ùù "
=
ùù# $
node
ùù% )
.
ùù) *

Attributes
ùù* 4
;
ùù4 5
if
ûû 
(
ûû 
attribs
ûû 
[
ûû 
$str
ûû 
]
ûû 
!=
ûû 
null
ûû 
)
ûû  
{
üü 
if
†† 
(
†† 	
!
††	 

String
††
 
.
††  
IsNullOrWhiteSpace
†† #
(
††# $
attribs
††$ +
[
††+ ,
$str
††, 2
]
††2 3
.
††3 4
Value
††4 9
)
††9 :
)
††: ;
{
°° 
string
¢¢ 
opValue
¢¢ 
=
¢¢ 
$str
¢¢ 
;
¢¢ 
if
££ 
(
££	 

attribs
££
 
[
££ 
$str
££ 
]
££ 
!=
££ 
null
££ "
&&
££# %
!
££& '
String
££' -
.
££- . 
IsNullOrWhiteSpace
££. @
(
££@ A
attribs
££A H
[
££H I
$str
££I P
]
££P Q
.
££Q R
Value
££R W
)
££W X
)
££X Y
{
§§ 
opValue
•• 
=
•• 
attribs
•• 
[
•• 
$str
••  
]
••  !
.
••! "
Value
••" '
;
••' (
}
¶¶ 
dic
ßß 	
.
ßß	 

Add
ßß
 
(
ßß 
attribs
ßß 
[
ßß 
$str
ßß 
]
ßß 
.
ßß 
Value
ßß #
,
ßß# $
opValue
ßß% ,
)
ßß, -
;
ßß- .
}
®® 
}
©© 
}
™™ 
return
´´ 	
dic
´´
 
;
´´ 
}
¨¨ 
}
≠≠ 
}ÆÆ 